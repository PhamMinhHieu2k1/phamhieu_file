{"version":3,"sources":["store/actions/actionTypes.js","containers/System/Admin/UserRedux.js","containers/System/Admin/TableManageUser.js","containers/HomePage/Section/OutStandingDoctor.js","axios.js","services/userService.js","store/actions/userActions.js","store/actions/adminActions.js","store/reducers/appReducer.js","store/reducers/adminReducer.js","store/reducers/userReducer.js","store/reducers/rootReducer.js","redux.js","hoc/authentication.js","routes/Home.js","containers/Auth/Login.js","utils/emitter.js","containers/System/ModalUser.js","containers/System/ModalEditUser.js","containers/System/UserManage.js","components/Navigator.js","containers/Header/menuApp.js","containers/Header/Header.js","containers/System/Admin/ManageDoctor.js","containers/System/Specialty/ManageSpecialty.js","containers/System/Clinic/ManageClinic.js","routes/System.js","containers/HomePage/HomeHeader.js","containers/HomePage/Section/Specialty.js","containers/HomePage/Section/MedicalFacility.js","containers/HomePage/Section/HandBook.js","containers/Patient/SocailPlugin/LikeAndShare.js","containers/HomePage/Section/About.js","containers/HomePage/HomeFooter.js","containers/HomePage/homePage.js","containers/Patient/Doctor/ProfileDoctor.js","components/Input/DatePicker.js","containers/Patient/Doctor/Modal/BookingModal.js","containers/Patient/Doctor/DoctorSchedule.js","containers/Patient/Doctor/DoctorExtraInfor.js","containers/Patient/SocailPlugin/Comment.js","containers/Patient/Doctor/DetailDoctor.js","containers/System/Doctor/ManageSchedule.js","containers/System/Doctor/RemedyModal.js","containers/System/Doctor/ManagePatient.js","routes/Doctor.js","containers/Patient/VerifyEmail.js","containers/Patient/Specialty/DetailSpecialty.js","containers/Patient/Clinic/DetailClinic.js","containers/Patient/SocailPlugin/Chat.js","containers/App.js","serviceWorker.js","hoc/IntlProviderWrapper.js","index.js","store/actions/appActions.js","components/CustomToast.js","components/CustomScrollbars.js","utils/constant.js","utils/CommonUtils.js","utils/KeyCodeUtils.js","utils/LanguageUtils.js"],"names":["actionTypes","Object","freeze","APP_START_UP_COMPLETE","SET_CONTENT_OF_CONFIRM_MODAL","CHANGE_LANGUAGE","ADD_USER_SUCCESS","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","PROCESS_LOGOUT","FETCH_GENDER_START","FETCH_GENDER_SUCCESS","FETCH_GENDER_FAIDE","FETCH_POSITION_START","FETCH_POSITION_SUCCESS","FETCH_POSITION_FAIDE","FETCH_ROLE_START","FETCH_ROLE_SUCCESS","FETCH_ROLE_FAIDE","CREATE_USER_START","CREATE_USER_SUCCESS","CREATE_USER_FAIDE","CREATE_ALL_USERS_START","CREATE_ALL_USERS_SUCCESS","CREATE_ALL_USERS_FAIDE","DELETE_USER_START","DELETE_USER_SUCCESS","DELETE_USER_FAIDE","EDIT_USER_START","EDIT_USER_SUCCESS","EDIT_USER_FAIDE","FETCH_TOP_DOCTOR_SUCCESS","FETCH_TOP_DOCTOR_FAIDE","FETCH_ALL_DOCTOR_SUCCESS","FETCH_ALL_DOCTOR_FAIDE","SAVE_DETAIL_DOCTOR_SUCCESS","SAVE_DETAIL_DOCTOR_FAIDE","FETCH_ALL_SCHEDULE_TIME_SUCCESS","FETCH_ALL_SCHEDULE_TIME_FAIDE","FETCH_REQUIRED_DOCTOR_INFOR_START","FETCH_REQUIRED_DOCTOR_INFOR_SUCCESS","FETCH_REQUIRED_DOCTOR_INFOR_FAIDE","UserRedux","props","handleChangeImg","event","a","data","target","files","file","CommonUtils","getBase64","base64","console","log","ObjectUrl","URL","createObjectURL","setState","previewImg","avatar","handleSaveUser","checkValidateInput","action","state","CRUD_ACTIONS","CREATE","CreateNewUserStart","email","password","firstName","lastName","address","gender","phonenumber","phoneNumber","roleId","role","positionId","position","EDIT","EditAUserRedux","id","userEditId","setTimeout","fechUserRedux","isValid","arrCheck","i","length","alert","handleOnChangeInput","coppyState","value","handleEditUserFromParent","user","imageBase64","image","Buffer","toString","genderArr","positionArr","roleArr","isOpen","this","getGenderStart","getPositionStart","getRoleStart","prevProps","prevState","snapshot","genderRedux","arrGender","keyMap","positionRedux","arrPosition","roleRedux","arrRole","listUser","genders","positions","roles","language","getGender","isLoadingGender","className","type","onChange","disabled","map","item","index","languages","VI","valueVi","valueEn","hidden","htmlFor","style","backgroundImage","onClick","padding","fontWeight","handleEditUserFromParentKey","Component","connect","app","admin","users","dispatch","actions","mdParser","MarkdownIt","handleEditorChange","html","text","TableManageUser","handlEditUser","handleDelete","DeleteUserRedux","userRedux","arrUsers","Fragment","height","marginTop","renderHTML","render","OutStandingDotor","handleViewDetailDoctor","doctor","history","push","arrDoctors","topDoctorsRedux","loadTopDoctor","allDoctors","settings","nameVi","positionData","nameEn","withRouter","isLoggedIn","topDoctors","instance","axios","create","baseURL","process","interceptors","response","use","handleLoginApi","post","getAllUsers","get","createNewUserServive","DeleteUserServive","userId","delete","UpdateUserServive","inputData","put","getAllCodeService","inputType","getTopDoctorHome","limit","getAllDoctors","saveDetaiDoctorService","getDetailInfoDoctor","inputId","saveBulkScheduleDoctor","getScheduleDoctorByDate","doctorId","date","getExtraInforDoctorById","getProfileDoctorById","postPatientBookAppoinment","postVerifyBookAppoinment","createNewSpecialty","getAllSpecialty","getDetailSpecialtyById","location","createNewClinic","getAllClinic","getDetailClinicById","getListPatientForDoctor","postSendRemedy","userLoginSuccess","userInfo","processLogout","fetchGenderStart","getSate","res","errCode","fetchGenderSuccess","fetchGenderFaide","genderData","fetchPositionStart","fetchPositionSuccess","fetchPositionFaide","fetchRoleStart","fetchRoleSuccess","fetchRoleFaide","roleData","toast","success","CreateNewUserSuccess","fetchAllUsersStart","CreateNewUserFaide","createData","fetchAllUsersSuccess","reverse","fetchAllUsersFaide","DeleteUserStart","DeleteUserSuccess","DeleteUserFaide","Data","EditAUserStart","EditAUserSuccess","EditAUserFaide","fetchTopDoctor","getState","dataDoctors","fetchAllDoctors","dataDr","saveDetailDoctors","error","fetchAllScheduleTime","dataTime","getRequiredDoctorInfor","resPrice","resPayment","resProvince","resSpecialty","resClinic","fetchRequiredDoctorInforSuccess","fetchRequiredDoctorInforFaide","allRequiredData","initialState","started","systemMenuPath","contentOfConfirmModal","messageId","handleFunc","dataFunc","appReducer","allScheduletime","allRequiredDoctorInfor","adminReducer","ADMIN_LOGIN_FAIL","persistCommonConfig","storage","stateReconciler","autoMergeLevel2","userPersistConfig","key","whitelist","appPersistConfig","createBrowserHistory","basename","reduxStateSyncConfig","rootReducer","combineReducers","router","connectRouter","persistReducer","userReducer","middleware","routerMiddleware","thunkMiddleware","createStateSyncMiddleware","composeEnhancers","compose","reduxStore","createStore","applyMiddleware","persistor","persistStore","locationHelper","locationHelperBuilder","userIsAuthenticated","connectedRouterRedirect","authenticatedSelector","wrapperDisplayName","redirectPath","userIsNotAuthenticated","ownProps","getRedirectQueryParam","allowRedirectBack","Home","linkToRedirect","to","Login","handleOnChangeUsername","username","handleOnChangePassword","handleLogin","errMessage","message","handleShowHidePassowrd","isShowPassword","handleKeyDown","placeholder","onKeyDown","color","navigate","path","_emitter","EventEmitter","setMaxListeners","emitter","ModalUser","listenToEmitter","on","toggle","toggleFormParent","handleOnchangeInput","arrInput","handleAddNewUser","createNewUser","Modal","size","centered","ModalHeader","ModalBody","ModalFooter","Button","ModalEditUser","editUser","currentUser","_","isEmpty","UserManage","getAllUserFormReact","arrUser","isOpenModalUser","toggleUserModal","toggleUserEditModal","isOpenEditModalUser","emit","handleEdit","userEdit","handleEditUser","MenuGroup","name","children","Menu","active","link","hasSubMenu","onLinkClick","data-toggle","aria-expanded","SubMenu","getItemClass","pathname","MenuGroupWithRouter","MenuWithRouter","SubMenuWithRouter","Navigator","expandedMenu","groupIndex","menuIndex","isMenuHasSubMenuActive","subMenus","currentPath","checkActiveMenu","menus","outerLoop","group","j","menu","isSubMenuOpen","subMenu","subMenuIndex","closeOtherExpand","withRouterInnerRef","WrappedComponent","InnerComponentWithRef","forwardRef","rest","ref","React","ComponentWithRef","withRef","adminMenu","doctorsMenu","Header","handleChangeLanguage","changelanguageAppRedux","MenuApp","USER_ROLE","ADMIN","DOCTOR","EN","title","ManageDoctor","buildDataInputSelect","result","object","labelVi","labelEn","label","contentMarkdown","contentHTML","handleSaveContentMarkdown","hasOldData","saveDetailDoctor","description","selectedOption","selectedPrice","selectedPayment","selectedProvince","nameClinic","addressClinic","note","clinicId","selectClinic","specialtyId","selectSpecialty","handleChangeSelect","listPayment","listPrice","listProvince","listSpecialty","listClinic","Markdown","markdown","paymentId","priceId","provinceId","Doctor_Infor","find","handleChangeSelectDoctorInfo","stateName","stateCoppy","handleOnChangTextDescription","listDoctors","dataSelected","dataSelectedPrice","dataSelectedPayment","dataSelectedProvince","dataSectedSpecialty","dataSectedClinic","options","rows","ManageSpecialty","descriptionHTML","descriptionMarkdown","handleSaveNewSpecialty","string","charAt","toUpperCase","slice","ManageClinic","handleSaveNewClinic","System","component","HomeHeader","changelanguage","returnHome","isshowBanner","changelanguageApp","Specialty","handleViewDetailSpecialty","dataSpecialty","MedicalFacility","handleViewDetailClinic","clinic","dataClinics","HandBook","LikeAndShare","window","FB","XFBML","parse","locale","fbAsyncInit","init","appId","cookie","xfbml","version","d","s","js","fjs","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","document","initFacebookSDK","dataHref","class","data-href","data-width","data-layout","data-action","data-size","data-share","About","width","frameBorder","allow","allowFullScreen","HomeFooter","href","HomePage","dots","infinite","speed","slidesToShow","slidesToScroll","OutStandingDoctor","ProfileDoctor","getInforDoctor","rederTimeBooking","time","timeTypeData","moment","unix","format","dataProfile","isShowDescriptionDoctor","isShowLinhDetail","isShowPrice","priceTypeData","displayType","thousandSeparator","suffix","DatePicker","flatpickrNode","nodeRef","element","flatpickr","node","addEventListener","handleBlur","handlerKeyDown","which","keyCode","KeyCodeUtils","ENTER","preventDefault","valueMoment","toDate","onOpen","blur","checkDateValue","str","max","num","parseInt","isNaN","autoFormatOnChange","seperator","input","RegExp","test","substr","values","split","v","replace","join","onInputChange","e","DISPLAY_FORMAT","DATE_FORMAT_AUTO_FILL","converted","SEPERATOR","onInputBlur","removeEventListener","close","minDate","onClose","otherProps","dateFormat","allowInput","disableMobile","BookingModal","buldDataGender","valueInput","handleOnChangeDatePicker","birthday","selectedGender","handleConfirmBooking","isLoading","Date","getTime","timeString","buildTimeBooking","doctorName","buidDoctorName","fullName","reason","timeType","closeBookingClose","doctorData","isOpenModal","FadeLoader","loading","aria-label","data-testid","DoctorSchedule","getArrDays","allDays","ddMM","today","add","capitalizeFirstLetter","startOf","valueOf","handleOnChangeSelect","doctorIdFromParent","allAvalabelTime","handleCLickScheduleTime","isOpenModalBooking","dataScheduleTimeModal","timeDisplay","DoctorExtraInfor","showHideDetailInfo","status","isShowDetailInfor","extraInfor","paymentTypeData","Comment","numPost","data-numposts","DetailDoctor","detailDoctor","currentDoctorId","match","params","currentURL","dangerouslySetInnerHTML","__html","ManageSchedule","selectedDoctor","currentDate","handleClickBtnTime","rangeTime","isSelected","handleSaveSchedule","FomatedDate","selectedTime","filter","schedule","arrSchedule","yesterday","setDate","getDate","RemedyModal","handleOnChangeEmail","imgBase64","handleSendRemedy","sendRemedy","dataModal","closeRemedyModal","aria-hidden","ManagePatient","getDataPatient","formatedDate","dataPatient","handleBtnConfirm","patientId","patientData","isOpenRemedyModal","dataChild","DeleteUserS3","timeTypeDataPatient","colSpan","Doctor","DoctorMenuPath","VerifyEmail","stateVerify","search","urlParams","URLSearchParams","token","DetailSpecialty","arrdoctorId","arr","doctorSpecialty","dataDetailSpecialty","dataProvince","unshift","createAt","DetailClinic","dataDetailClinic","doctorClinic","Chat","m","async","appendChild","kommunicate","_globals","App","handlePersistorState","bootstrapped","onBeforeLift","Promise","resolve","then","catch","CustomScrollbars","HOME","exact","LOGIN","SYSTEM","HOMEPAGE","DETAIL_DOCTOR","DETAIL_SPECIALTY","DETAIL_CLINIC","VERIFY_EMAIL_BOOKING","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","Boolean","hostname","messages","LanguageUtils","getFlattenedMessages","IntlProviderWrapper","defaultLocale","ReactDOM","store","navigator","serviceWorker","ready","registration","unregister","languageInput","CustomToast","titleId","hour","minute","second","hour12","autoHeight","autoHeightMin","autoHeightMax","msg","createRef","getScrollLeft","current","getScrollTop","scrollToBottom","targetScrollTop","getScrollHeight","scrollTo","targetTop","quickScroll","scrollbars","originalTop","iteration","scroll","scrollTop","renderTrackHorizontal","renderTrackVertical","renderThumbHorizontal","renderThumbVertical","renderNone","disableVerticalScroll","disableHorizontalScroll","autoHide","autoHideTimeout","hideTracksWhenNotNeeded","LOG_OUT","DELETE","READ","PATIENT","reject","reader","FileReader","readAsDataURL","onload","onerror","UP","DOWN","TAB","E","ESCAPE","flattenMessages","nestedMessages","prefix","keys","reduce","prefixedKey","assign","messages_vi","messages_en","lang"],"mappings":"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","file":"static/js/main.1fefa2d2.chunk.js","sourcesContent":["const actionTypes = Object.freeze({\r\n    //app\r\n    APP_START_UP_COMPLETE: 'APP_START_UP_COMPLETE',\r\n    SET_CONTENT_OF_CONFIRM_MODAL: 'SET_CONTENT_OF_CONFIRM_MODAL',\r\n    CHANGE_LANGUAGE:\"CHANGE_LANGUAGE\",\r\n  \r\n\r\n    //user\r\n    ADD_USER_SUCCESS: 'ADD_USER_SUCCESS',\r\n    USER_LOGIN_SUCCESS:'USER_LOGIN_SUCCESS',\r\n    USER_LOGIN_FAIL:'USER_LOGIN_FAIL',\r\n    PROCESS_LOGOUT: 'PROCESS_LOGOUT',\r\n\r\n    //admin\r\n    FETCH_GENDER_START:\"FETCH_GENDER_START\",\r\n    FETCH_GENDER_SUCCESS:\"FETCH_GENDER_SUCCESS\",\r\n    FETCH_GENDER_FAIDE:\"FETCH_GENDER_FAIDE\",\r\n\r\n    //Postion\r\n    FETCH_POSITION_START:\"FETCH_POSITION_START\",\r\n    FETCH_POSITION_SUCCESS:\"FETCH_POSITION_SUCCESS\",\r\n    FETCH_POSITION_FAIDE:\"FETCH_POSITION_FAIDE\",\r\n\r\n    //RoleID\r\n    FETCH_ROLE_START:\"FETCH_ROLE_START\",\r\n    FETCH_ROLE_SUCCESS:\"FETCH_ROLE_SUCCESS\",\r\n    FETCH_ROLE_FAIDE:\"FETCH_ROLE_FAIDE\",\r\n\r\n    //Create\r\n    CREATE_USER_START:\"CREATE_USER_START\",\r\n    CREATE_USER_SUCCESS:\"CREATE_USER_SUCCESS\",\r\n    CREATE_USER_FAIDE:\"CREATE_USER_FAIDE\",\r\n\r\n    //get all\r\n    CREATE_ALL_USERS_START:\"CREATE_ALL_USERS_START\",\r\n    CREATE_ALL_USERS_SUCCESS:\"CREATE_ALL_USERS_SUCCESS\",\r\n    CREATE_ALL_USERS_FAIDE:\"CREATE_ALL_USERS_FAIDE\",\r\n\r\n    //delete\r\n    DELETE_USER_START:\"DELETE_USER_START\",\r\n    DELETE_USER_SUCCESS:\"DELETE_USER_SUCCESS\",\r\n    DELETE_USER_FAIDE:\"DELETE_USER_FAIDE\",\r\n    \r\n    //Edit\r\n    EDIT_USER_START:\"EDIT_USER_START\",\r\n    EDIT_USER_SUCCESS:\"EDIT_USER_SUCCESS\",\r\n    EDIT_USER_FAIDE:\"EDIT_USER_FAIDE\",\r\n\r\n    // Top Doctor\r\n    FETCH_TOP_DOCTOR_SUCCESS:\"FETCH_TOP_DOCTOR_SUCCESS\",\r\n    FETCH_TOP_DOCTOR_FAIDE:\"FETCH_TOP_DOCTOR_FAIDE\",\r\n\r\n    // get all doctors\r\n    FETCH_ALL_DOCTOR_SUCCESS:\"FETCH_ALL_DOCTOR_SUCCESS\",\r\n    FETCH_ALL_DOCTOR_FAIDE:\"FETCH_ALL_DOCTOR_FAIDE\",\r\n\r\n    //save detal doctor\r\n    SAVE_DETAIL_DOCTOR_SUCCESS:\"SAVE_DETAIL_DOCTOR_SUCCESS\",\r\n    SAVE_DETAIL_DOCTOR_FAIDE:\"SAVE_DETAIL_DOCTOR_FAIDE\",\r\n\r\n    //fecth all time\r\n    FETCH_ALL_SCHEDULE_TIME_SUCCESS:\"FETCH_ALL_SCHEDULE_TIME_SUCCESS\",\r\n    FETCH_ALL_SCHEDULE_TIME_FAIDE:\"FETCH_ALL_SCHEDULE_TIME_FAIDE\",\r\n\r\n    //Required Doctor Infor\r\n    FETCH_REQUIRED_DOCTOR_INFOR_START:\"FETCH_REQUIRED_DOCTOR_INFOR_START\",\r\n    FETCH_REQUIRED_DOCTOR_INFOR_SUCCESS:\"FETCH_REQUIRED_DOCTOR_INFOR_SUCCESS\",\r\n    FETCH_REQUIRED_DOCTOR_INFOR_FAIDE:\"FETCH_REQUIRED_DOCTOR_INFOR_FAIDE\",\r\n})\r\n\r\nexport default actionTypes;","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { getAllCodeService } from \"../../../services/userService\"\r\nimport {languages,CRUD_ACTIONS , CommonUtils} from \"../../../utils\"\r\nimport { times } from 'lodash';\r\nimport * as actions from \"../../../store/actions\"\r\nimport TableManageUser from \"./TableManageUser\"\r\nimport \"./UserRedux.scss\"\r\n\r\nclass UserRedux extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            genderArr:[],\r\n            positionArr:[],\r\n            roleArr:[],\r\n            previewImg:\"\",\r\n            isOpen:false,\r\n\r\n\r\n            email:'',\r\n            password:\"\",\r\n            firstName:'',\r\n            lastName:'',\r\n            phoneNumber:'',\r\n            address:'',\r\n            gender:'',\r\n            position:'',\r\n            role:'',\r\n            avatar:'',\r\n\r\n            action:\"\",\r\n            userEditId:\"\"\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.getGenderStart()\r\n        this.props.getPositionStart()\r\n        this.props.getRoleStart()\r\n\r\n        \r\n    }\r\n    componentDidUpdate(prevProps,prevState,snapshot){\r\n        if(prevProps.genderRedux !== this.props.genderRedux){\r\n            let arrGender=this.props.genderRedux\r\n            this.setState({\r\n                genderArr: arrGender,\r\n                gender: arrGender && arrGender.length>0 ? arrGender[0].keyMap : \"\"\r\n            })\r\n        }\r\n        if(prevProps.positionRedux !== this.props.positionRedux){\r\n            let arrPosition=this.props.positionRedux\r\n            this.setState({\r\n                positionArr: arrPosition,\r\n                position: arrPosition && arrPosition.length>0 ? arrPosition[0].keyMap : \"\"\r\n            })\r\n        }\r\n        if(prevProps.roleRedux !== this.props.roleRedux){\r\n            let arrRole= this.props.roleRedux\r\n            this.setState({\r\n                roleArr: arrRole,\r\n                role: arrRole && arrRole.length>0 ? arrRole[0].keyMap : \"\"\r\n            })\r\n        }\r\n        if(prevProps.listUser !== this.props.listUser){\r\n            let arrGender=this.props.genderRedux\r\n            let arrPosition=this.props.positionRedux\r\n            let arrRole= this.props.roleRedux\r\n            this.setState({\r\n                email:'',\r\n                password:\"\",\r\n                firstName:'',\r\n                lastName:'',\r\n                phoneNumber:'',\r\n                address:'',\r\n                gender: arrGender && arrGender.length>0 ? arrGender[0].keyMap : \"\",\r\n                position: arrPosition && arrPosition.length>0 ? arrPosition[0].keyMap : \"\",\r\n                role: arrRole && arrRole.length>0 ? arrRole[0].keyMap : \"\",\r\n                avatar:'',\r\n                previewImg:\"\",\r\n                action:CRUD_ACTIONS.CREATE\r\n            })\r\n        }\r\n        \r\n    }\r\n    handleChangeImg= async(event)=>{\r\n        let data= event.target.files\r\n        let file= data[0];\r\n        if(file){\r\n            let base64=await CommonUtils.getBase64(file)\r\n            console.log(base64);\r\n            let ObjectUrl=URL.createObjectURL(file)\r\n            this.setState({\r\n                previewImg:ObjectUrl,\r\n                avatar:base64\r\n            })\r\n        }         \r\n    }\r\n\r\n    handleSaveUser=()=>{\r\n        let isValid=this.checkValidateInput()\r\n        if(isValid===false) return\r\n        let action= this.state.action\r\n        if(action=== CRUD_ACTIONS.CREATE){\r\n            this.props.CreateNewUserStart({\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                firstName: this.state.firstName,\r\n                lastName:  this.state.lastName,\r\n                address:  this.state.address,\r\n                gender: this.state.gender,\r\n                phonenumber:  this.state.phoneNumber,\r\n                roleId:  this.state.role,\r\n                positionId:this.state.position,\r\n                avatar:this.state.avatar\r\n        })\r\n        }\r\n        if(action===CRUD_ACTIONS.EDIT){\r\n            this.props.EditAUserRedux({\r\n                id:this.state.userEditId,\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                firstName: this.state.firstName,\r\n                lastName:  this.state.lastName,\r\n                address:  this.state.address,\r\n                gender: this.state.gender,\r\n                phonenumber:  this.state.phoneNumber,\r\n                roleId:  this.state.role,\r\n                positionId:this.state.position,\r\n                avatar:this.state.avatar\r\n            })\r\n        }\r\n\r\n        // fire redux actions\r\n        \r\n        setTimeout(() => {\r\n            this.props.fechUserRedux()\r\n        }, 1000);\r\n        \r\n    }\r\n\r\n    checkValidateInput=()=>{\r\n        let isValid=true\r\n        let arrCheck=['email','password','firstName','lastName','phoneNumber','address']\r\n        for(let i=0; i<arrCheck.length;i++){\r\n            if(!this.state[arrCheck[i]]){\r\n                isValid=false\r\n                alert('this is input required:'+ arrCheck[i])\r\n                break;\r\n            }\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    handleOnChangeInput=(event,id)=>{\r\n        let coppyState={...this.state}\r\n        coppyState[id]=event.target.value\r\n        this.setState({\r\n            ...coppyState\r\n        },()=>{\r\n            console.log(\"hieu dz check input onchange:\", this.state);\r\n        })\r\n            // email:'',\r\n            // password:\"\",\r\n            // firstName:'',\r\n            // lastName:'',\r\n            // phoneNumber:'',\r\n            // address:'',\r\n            // gender:'',\r\n            // position:'',\r\n            // role:'',\r\n            // avatar:''\r\n    }\r\n\r\n    handleEditUserFromParent=(user)=>{\r\n        console.log(user);\r\n         let imageBase64=\"\"\r\n            if(user.image){\r\n                imageBase64=new Buffer(user.image, 'base64').toString('binary')\r\n            }\r\n        this.setState({\r\n            email:user.email,\r\n            password:\"HARDCODE\",\r\n            firstName:user.firstName,\r\n            lastName:user.lastName,\r\n            phoneNumber:user.phonenumber,\r\n            address:user.address,\r\n            gender: user.gender,\r\n            position:user.positionId ,\r\n            role:user.roleId ,\r\n            avatar:\"\",\r\n            previewImg:imageBase64,\r\n            action: CRUD_ACTIONS.EDIT,\r\n            userEditId:user.id\r\n        })\r\n    }\r\n\r\n    render() {\r\n        \r\n        let genders= this.state.genderArr\r\n        let positions= this.state.positionArr\r\n        let roles= this.state.roleArr\r\n        let language= this.props.language\r\n        let getGender= this.props.isLoadingGender\r\n        let {email,password,firstName,lastName,phoneNumber,address,gender,position,role,avatar}=this.state\r\n        return (\r\n            <div className='user-redux-container'>\r\n                <div className='title'>CRUD USER</div>\r\n                <div className=\"user-redux-body\" >\r\n                        <div className='container mb-5'>\r\n                            <div className='row'>\r\n                            <div className='col-12 my-3'><FormattedMessage id=\"manage-user.add\"/></div>\r\n                            <div className='col-12 '>{getGender=== true ? \"Loading gender\": \"\"}</div>\r\n                                <div className='col-3'>\r\n                                    <label><FormattedMessage id=\"manage-user.email\"/></label>\r\n                                    <input className='form-control' type='email'\r\n                                            value={email}\r\n                                            onChange={(event)=>this.handleOnChangeInput(event,\"email\")}\r\n                                            disabled={this.state.action===CRUD_ACTIONS.EDIT ? true : false}\r\n                                    />\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <label><FormattedMessage id=\"manage-user.password\"/></label>\r\n                                    <input className='form-control'  type='password'\r\n                                            value={password}\r\n                                            onChange={(event)=>this.handleOnChangeInput(event,\"password\")}\r\n                                            disabled={this.state.action===CRUD_ACTIONS.EDIT ? true : false}\r\n                                    />\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <label><FormattedMessage id=\"manage-user.firstName\"/></label>\r\n                                    <input className='form-control' type='text'\r\n                                            value={firstName}\r\n                                            onChange={(event)=>this.handleOnChangeInput(event,\"firstName\")}\r\n                                    />\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <label><FormattedMessage id=\"manage-user.lastName\"/></label>\r\n                                    <input className='form-control' type='text'\r\n                                            value={lastName}\r\n                                            onChange={(event)=>this.handleOnChangeInput(event,\"lastName\")}\r\n                                    />\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <label><FormattedMessage id=\"manage-user.phoneNumber\"/></label>\r\n                                    <input className='form-control' type='text'\r\n                                            value={phoneNumber}\r\n                                            onChange={(event)=>this.handleOnChangeInput(event,\"phoneNumber\")}\r\n                                    />\r\n                                </div>\r\n                                <div className='col-9'>\r\n                                    <label><FormattedMessage id=\"manage-user.address\"/></label>\r\n                                    <input className='form-control' type='text'\r\n                                            value={address}\r\n                                            onChange={(event)=>this.handleOnChangeInput(event,\"address\")}\r\n                                    />\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <label><FormattedMessage id=\"manage-user.gender\"/></label>\r\n                                    <select className='form-control'\r\n                                            onChange={(event)=>this.handleOnChangeInput(event,\"gender\")}\r\n                                            value={gender}\r\n                                    >\r\n                                        {genders && genders.length >0 &&\r\n                                         genders.map((item, index)=>{\r\n                                            return(\r\n                                                <option key={index} value={item.keyMap}>{language===languages.VI ? item.valueVi :item.valueEn} </option>\r\n                                            )\r\n                                         })\r\n                                            \r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <label><FormattedMessage id=\"manage-user.postion\"/></label>\r\n                                    <select className='form-control'\r\n                                            onChange={(event)=>this.handleOnChangeInput(event,\"position\")}\r\n                                            value={position}\r\n                                    >\r\n                                        {positions && positions.length >0 &&\r\n                                         positions.map((item, index)=>{\r\n                                            return(\r\n                                                <option key={index} value={item.keyMap}>{language===languages.VI ? item.valueVi :item.valueEn} </option>\r\n                                            )\r\n                                         })\r\n                                            \r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <label><FormattedMessage id=\"manage-user.roleId\"/></label>\r\n                                    <select className='form-control'\r\n                                            onChange={(event)=>this.handleOnChangeInput(event,\"role\")}\r\n                                            value={role}\r\n                                    >\r\n                                        {roles && roles.length >0 &&\r\n                                         roles.map((item, index)=>{\r\n                                            return(\r\n                                                <option key={index} value={item.keyMap}>{language===languages.VI ? item.valueVi :item.valueEn} </option>\r\n                                            )\r\n                                         })\r\n                                            \r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                                <div className='col-3'>\r\n                                    <label><FormattedMessage id=\"manage-user.image\"/></label>\r\n                                    <div className='preview-img-container'>\r\n                                        <input id='previewImg' \r\n                                            type='file' \r\n                                            hidden\r\n                                            onChange={(event)=>this.handleChangeImg(event)}\r\n                                        ></input>\r\n                                        <label htmlFor='previewImg' className='label-upload'> Tải ảnh <i className=\"fas fa-upload\"></i></label>\r\n                                        <div className='preview-img'\r\n                                            style={{backgroundImage:`url(${this.state.previewImg})`}}\r\n                                        >\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='col-12 my-3'>\r\n                                    <button className={this.state.action===CRUD_ACTIONS.EDIT ? \"btn btn-warning\": 'btn btn-primary'}\r\n                                            onClick={()=>this.handleSaveUser()}\r\n                                            style={{padding:\"0px 5px\", fontWeight:\"500\"}}\r\n                                    >\r\n                                        {this.state.action===CRUD_ACTIONS.EDIT ?\r\n                                        <FormattedMessage id=\"manage-user.edit\"/>\r\n                                        :\r\n                                        <FormattedMessage id=\"manage-user.save\"/>\r\n                                        }                                   \r\n                                        </button>\r\n                                </div>\r\n                               \r\n                            </div>\r\n\r\n                            <TableManageUser\r\n                                handleEditUserFromParentKey={this.handleEditUserFromParent}\r\n                                action={this.state.action}\r\n                            />\r\n                        </div>  \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language:state.app.language,\r\n        genderRedux:state.admin.genders,\r\n        positionRedux:state.admin.positions,\r\n        roleRedux:state.admin.roles,\r\n        isLoadingGender:state.admin.isLoadingGender,\r\n        listUser:state.admin.users\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getGenderStart: ()=> dispatch(actions.fetchGenderStart()),\r\n        getPositionStart: ()=> dispatch(actions.fetchPositionStart()),\r\n        getRoleStart: ()=> dispatch(actions.fetchRoleStart()),\r\n        CreateNewUserStart:(data)=> dispatch(actions.CreateNewUserStart(data)),\r\n        fechUserRedux: ()=> dispatch(actions.fetchAllUsersStart()),\r\n        EditAUserRedux: (data)=> dispatch(actions.EditAUserStart(data))\r\n        // processLogout: () => dispatch(actions.processLogout()),\r\n        // changelanguageAppRedux:(language)=>dispatch(actions.changelanguageApp(language))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRedux);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport \"./TableManageUser.scss\"\r\nimport * as actions from \"../../../store/actions\"\r\n// import react, react-markdown-editor-lite, and a markdown parser you like\r\n\r\nimport * as ReactDOM from 'react-dom';\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\n// import style manually\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\n\r\n// Register plugins if required\r\n// MdEditor.use(YOUR_PLUGINS_HERE);\r\n\r\n// Initialize a markdown parser\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\r\n\r\n// Finish!\r\nfunction handleEditorChange({ html, text }) {\r\n  console.log('handleEditorChange', html, text);\r\n}\r\n\r\n\r\n\r\nclass TableManageUser extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n          userRedux:[]\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.props.fechUserRedux()\r\n        \r\n    }\r\n   \r\n    componentDidUpdate(prevProps,prevState,snapshot){\r\n        if(prevProps.listUser !== this.props.listUser){\r\n            this.setState({\r\n                userRedux: this.props.listUser\r\n            })\r\n        }\r\n    }\r\n\r\n    handlEditUser=(user)=>{\r\n        this.props.handleEditUserFromParentKey(user)\r\n    }\r\n\r\n    handleDelete=(user)=>{\r\n        this.props.DeleteUserRedux(user.id)\r\n    }\r\n\r\n    render() {\r\n        let arrUsers=this.state.userRedux\r\n        return (\r\n            <React.Fragment>\r\n                    <table id=\"TableManageUser\">\r\n <tbody>\r\n <tr>\r\n    <th>Email</th>\r\n    <th>First name</th>\r\n    <th>Last name</th>\r\n    <th>Address</th>\r\n    <th>Actions</th>\r\n  </tr>\r\n  {arrUsers && arrUsers.length >0 &&\r\n        arrUsers.map((item, index)=>{\r\n            return(\r\n                <tr key={index}>\r\n                <td>{item.email}</td>\r\n                <td>{item.firstName}</td>\r\n                <td>{item.lastName}</td>\r\n                <td>{item.address}</td>\r\n                <td>\r\n                    <button \r\n                        className='btn-edit' \r\n                        onClick={()=> this.handlEditUser(item)}  \r\n                    >\r\n                        <i className=\"fas fa-pencil-alt\"></i>\r\n                    </button>\r\n                    <button \r\n                        className='btn-delete' \r\n                        onClick={()=> this.handleDelete(item)}\r\n                    >\r\n                        <i className=\"fas fa-trash-alt\"></i>\r\n                    </button>\r\n                </td>\r\n              </tr>\r\n                )\r\n            })\r\n                                            \r\n    }\r\n  \r\n      \r\n    \r\n \r\n  \r\n  </tbody>\r\n                    </table>\r\n                    <MdEditor style={{ height: '500px' ,marginTop:\"20px\"}} renderHTML={text => mdParser.render(text)} onChange={handleEditorChange} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        listUser:state.admin.users\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fechUserRedux: ()=> dispatch(actions.fetchAllUsersStart()),\r\n        DeleteUserRedux:(id)=> dispatch(actions.DeleteUserStart(id))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableManageUser);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Slider from 'react-slick'; \r\nimport * as actions from \"../../../store/actions\" \r\nimport {languages} from \"../../../utils\"\r\nimport { withRouter } from 'react-router';\r\nimport \"./OutStandingDoctor.scss\"\r\n\r\n\r\nclass OutStandingDotor extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            arrDoctors:[]\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps,prevState,snapshot){\r\n        if(prevProps.topDoctorsRedux !== this.props.topDoctorsRedux){\r\n            this.setState({\r\n                arrDoctors:this.props.topDoctorsRedux\r\n            })\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.props.loadTopDoctor()\r\n    }\r\n\r\n    handleViewDetailDoctor=(doctor)=>{\r\n        if(this.props.history){\r\n            this.props.history.push(`/detail-doctor/${doctor.id}`)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(\"check arrdoctor\" , this.props.topDoctorsRedux);\r\n        let allDoctors= this.state.arrDoctors\r\n        let language=this.props.language\r\n        return (\r\n            <React.Fragment>\r\n            <div className='section-share section-outstanding-doctor'>\r\n                <div className='section-container'>\r\n                    <div className='section-header'>\r\n                        <span className='title-section'>\r\n                            <FormattedMessage id=\"homepage.outstanding-doctor\"/>\r\n                        </span>\r\n                        <button className='btn-section'>\r\n                        <FormattedMessage id=\"homepage.more-info\"/>\r\n                        </button>\r\n                    </div>\r\n                    <div className='section-body'>\r\n                    <Slider {...this.props.settings}>\r\n                       \r\n                        {allDoctors && allDoctors.length>0\r\n                        && allDoctors.map((item, index)=>{\r\n                            console.log(\"check item:\", item);\r\n                            let imageBase64=\"\"\r\n                            if(item.image){\r\n                                imageBase64=new Buffer(item.image, 'base64').toString('binary')\r\n                            }\r\n                            let nameVi=`${item.positionData.valueVi}, ${item.lastName} ${item.firstName}`\r\n                            let nameEn=`${item.positionData.valueEn}, ${item.lastName} ${item.firstName}`\r\n                            return(\r\n                                <div className='img-customize' key={index} onClick={()=> this.handleViewDetailDoctor(item)}>\r\n                                <div className='customize-boder outstanding-doctor-child'>\r\n                                    <div className='outer-bg'>\r\n                                        <div className='bg-image section-outstanding-doctor '\r\n                                            style={{backgroundImage:`url(${imageBase64})`}}\r\n                                        >\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='position text-center'>\r\n                                        <div>{language === languages.VI? nameVi :nameEn}</div>\r\n                                        {/* <div>Cơ xương khớp</div> */}\r\n                                    </div>\r\n                                </div>  \r\n                            </div>\r\n                            )\r\n                        })\r\n                        }\r\n\r\n                    </Slider>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language:state.app.language,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        topDoctorsRedux: state.admin.topDoctors\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        loadTopDoctor:()=>dispatch(actions.fetchTopDoctor())\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(OutStandingDotor));\r\n","import axios from 'axios';\r\nimport _ from 'lodash';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n    // withCredentials: true\r\n});\r\n\r\n// const createError = (httpStatusCode, statusCode, errorMessage, problems, errorCode = '') => {\r\n//     const error = new Error();\r\n//     error.httpStatusCode = httpStatusCode;\r\n//     error.statusCode = statusCode;\r\n//     error.errorMessage = errorMessage;\r\n//     error.problems = problems;\r\n//     error.errorCode = errorCode + \"\";\r\n//     return error;\r\n// };\r\n\r\n// export const isSuccessStatusCode = (s) => {\r\n//     // May be string or number\r\n//     const statusType = typeof s;\r\n//     return (statusType === 'number' && s === 0) || (statusType === 'string' && s.toUpperCase() === 'OK');\r\n// };\r\n\r\ninstance.interceptors.response.use(\r\n    (response) => {\r\n//         // Thrown error for request with OK status code\r\n            const { data } = response;\r\n//         if (data.hasOwnProperty('s') && !isSuccessStatusCode(data['s']) && data.hasOwnProperty('errmsg')) {\r\n//             return Promise.reject(createError(response.status, data['s'], data['errmsg'], null, data['errcode'] ? data['errcode'] : \"\"));\r\n//         }\r\n\r\n//         // Return direct data to callback\r\n//         if (data.hasOwnProperty('s') && data.hasOwnProperty('d')) {\r\n//             return data['d'];\r\n//         }\r\n//         // Handle special case\r\n//         if (data.hasOwnProperty('s') && _.keys(data).length === 1) {\r\n//             return null;\r\n//         }\r\n            return response.data;\r\n        },\r\n//     (error) => {\r\n//         const { response } = error;\r\n//         if (response == null) {\r\n//             return Promise.reject(error);\r\n//         }\r\n\r\n//         const { data } = response;\r\n\r\n//         if (data.hasOwnProperty('s') && data.hasOwnProperty('errmsg')) {\r\n//             return Promise.reject(createError(response.status, data['s'], data['errmsg']));\r\n//         }\r\n\r\n//         if (data.hasOwnProperty('code') && data.hasOwnProperty('message')) {\r\n//             return Promise.reject(createError(response.status, data['code'], data['message'], data['problems']));\r\n//         }\r\n\r\n//         return Promise.reject(createError(response.status));\r\n//     }\r\n);\r\n\r\nexport default instance;\r\n","\r\nimport axios from \"../axios\"\r\n\r\nconst handleLoginApi=(email,password)=>{\r\n    return axios.post(\"/api/login\",{email,password})\r\n}\r\n\r\nconst getAllUsers=(id)=>{\r\n    return axios.get(`/api/get-all-users?id=${id}`)\r\n}\r\nconst createNewUserServive=(data)=>{\r\n    return axios.post('api/create-new-users', data)\r\n}\r\nconst DeleteUserServive=(userId)=>{\r\n    return axios.delete('api/delete-users',{\r\n        data:{\r\n            id:userId\r\n        }\r\n    })\r\n}  \r\nconst UpdateUserServive=(inputData)=>{\r\n    return axios.put('api/edit-users',inputData)\r\n}    \r\n\r\nconst getAllCodeService =(inputType)=>{\r\n    return axios.get(`/api/allcode?type=${inputType}`)\r\n}\r\n\r\nconst getTopDoctorHome=(limit)=>{\r\n    return axios.get(`/api/top-doctor-home?limit=${limit}`)\r\n}\r\nconst getAllDoctors=()=>{\r\n    return axios.get(`/api/get-all-doctors`)\r\n}\r\nconst saveDetaiDoctorService=(data)=>{\r\n    return  axios.post(`/api/save-info-doctors`,data)\r\n}\r\nconst getDetailInfoDoctor=(inputId)=>{\r\n    return axios.get(`/api/get-detail-doctor-by-id?id=${inputId}`)\r\n}\r\nconst saveBulkScheduleDoctor=(data)=>{\r\n    return  axios.post(`/api/bulk-create-schedule`,data)\r\n}\r\nconst getScheduleDoctorByDate=(doctorId, date)=>{\r\n    return axios.get(`/api/get-schedule-doctor-by-date?doctorId=${doctorId}&date=${date}`)\r\n}\r\n\r\nconst getExtraInforDoctorById=(doctorId)=>{\r\n    return axios.get(`/api/get-extra-infor-doctor-by-id?doctorId=${doctorId}`)\r\n}\r\nconst getProfileDoctorById=(doctorId)=>{\r\n    return axios.get(`/api/get-profile-doctor-by-id?doctorId=${doctorId}`)\r\n}\r\n\r\nconst postPatientBookAppoinment=(data)=>{\r\n    return  axios.post(`/api/patient-book-appoinment`,data)\r\n}\r\n\r\nconst postVerifyBookAppoinment=(data)=>{\r\n    return  axios.post(`/api/verify-book-appoinment`,data)\r\n}\r\nconst createNewSpecialty=(data)=>{\r\n    return  axios.post(`/api/create-new-specialty`,data)\r\n}\r\nconst getAllSpecialty=(doctorId)=>{\r\n    return axios.get(`/api/get-specialty`)\r\n}\r\nconst getDetailSpecialtyById=(data)=>{\r\n    return axios.get(`/api/get-detail-specialty-by-id?id=${data.id}&location=${data.location}`)\r\n}\r\nconst createNewClinic=(data)=>{\r\n    return  axios.post(`/api/create-new-clinic`,data)\r\n}\r\nconst getAllClinic=(data)=>{\r\n    return axios.get(`/api/get-clinic`)\r\n}\r\nconst getDetailClinicById=(data)=>{\r\n    return axios.get(`/api/get-detail-clinic-by-id?id=${data.id}`)\r\n}\r\nconst getListPatientForDoctor=(data)=>{\r\n    return axios.get(`/api/get-list-patient-for-doctor?doctorId=${data.doctorId}&date=${data.date}`)\r\n}\r\nconst postSendRemedy=(data)=>{\r\n    return  axios.post(`/api/send-remedy`,data)\r\n}\r\nexport {handleLoginApi,\r\n        getAllUsers,\r\n        createNewUserServive,\r\n        DeleteUserServive,\r\n        UpdateUserServive,\r\n        getAllCodeService,\r\n        getTopDoctorHome,\r\n        getAllDoctors,\r\n        saveDetaiDoctorService,\r\n        getDetailInfoDoctor,\r\n        saveBulkScheduleDoctor,\r\n        getScheduleDoctorByDate,\r\n        getExtraInforDoctorById,\r\n        getProfileDoctorById,\r\n        postPatientBookAppoinment,\r\n        postVerifyBookAppoinment,\r\n        createNewSpecialty,\r\n        getAllSpecialty,\r\n        getDetailSpecialtyById,\r\n        createNewClinic,\r\n        getAllClinic,\r\n        getDetailClinicById,\r\n        getListPatientForDoctor,\r\n        postSendRemedy\r\n    }","import actionTypes from './actionTypes';\r\n\r\nexport const addUserSuccess = () => ({\r\n    type: actionTypes.ADD_USER_SUCCESS\r\n})\r\n\r\nexport const userLoginSuccess=(userInfo)=>({\r\n    type:actionTypes.USER_LOGIN_SUCCESS,\r\n    userInfo:userInfo,\r\n})\r\nexport const userLoginFail = () => ({\r\n    type: actionTypes.USER_LOGIN_FAIL\r\n})\r\n\r\nexport const processLogout = () => ({\r\n    type: actionTypes.PROCESS_LOGOUT\r\n})","import actionTypes from './actionTypes';\r\nimport { getAllCodeService,createNewUserServive,getAllUsers,\r\n         DeleteUserServive,UpdateUserServive,getTopDoctorHome,\r\n         getAllDoctors,saveDetaiDoctorService,\r\n         getAllSpecialty , getAllClinic\r\n        } from \"../../services/userService\"\r\nimport { toast } from 'react-toastify';\r\n\r\n// export const fetchGenderStart = () => ({\r\n//     type: actionTypes.FETCH_GENDER_START\r\n// })\r\n\r\n//Gender\r\nexport const fetchGenderStart = () => {\r\n    return async(dispatch,getSate)=>{\r\n        try{\r\n            dispatch({\r\n                type: actionTypes.FETCH_GENDER_START\r\n            })\r\n            let res=await getAllCodeService(\"GENDER\")\r\n            if(res && res.errCode===0){\r\n                dispatch(fetchGenderSuccess(res.data))\r\n            }else{\r\n                dispatch(fetchGenderFaide())\r\n            }\r\n\r\n        }catch(e){\r\n            dispatch(fetchGenderFaide())\r\n            console.log(\"faidle\",e);\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchGenderSuccess = (genderData) => ({\r\n    type: actionTypes.FETCH_GENDER_SUCCESS,\r\n    data:genderData\r\n})\r\n\r\nexport const fetchGenderFaide = () => ({\r\n    type: actionTypes.FETCH_GENDER_FAIDE\r\n})\r\n\r\n\r\n// Postions\r\nexport const fetchPositionStart = () => {\r\n    return async(dispatch,getSate)=>{\r\n        try{\r\n            dispatch({\r\n                type: actionTypes.FETCH_POSITION_START\r\n            })\r\n            let res=await getAllCodeService(\"POSITION\")\r\n            if(res && res.errCode===0){\r\n                dispatch(fetchPositionSuccess(res.data))\r\n            }else{\r\n                dispatch(fetchPositionFaide())\r\n            }\r\n\r\n        }catch(e){\r\n            dispatch(fetchPositionFaide())\r\n            console.log(\"faidle\",e);\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchPositionSuccess = (positionData) => ({\r\n    type: actionTypes.FETCH_POSITION_SUCCESS,\r\n    data:positionData\r\n})\r\n\r\nexport const fetchPositionFaide = () => ({\r\n    type: actionTypes.FETCH_POSITION_FAIDE\r\n})\r\n\r\n\r\n// RoleId\r\nexport const fetchRoleStart = () => {\r\n    return async(dispatch,getSate)=>{\r\n        try{\r\n            dispatch({\r\n                type: actionTypes.FETCH_ROLE_START\r\n            })\r\n            let res=await getAllCodeService(\"ROLE\")\r\n            if(res && res.errCode===0){\r\n                dispatch(fetchRoleSuccess(res.data))\r\n            }else{\r\n                dispatch(fetchRoleFaide())\r\n            }\r\n\r\n        }catch(e){\r\n            dispatch(fetchRoleFaide())\r\n            console.log(\"faidle\",e);\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchRoleSuccess = (roleData) => ({\r\n    type: actionTypes.FETCH_ROLE_SUCCESS,\r\n    data:roleData\r\n})\r\n\r\nexport const fetchRoleFaide = () => ({\r\n    type: actionTypes.FETCH_ROLE_FAIDE\r\n})\r\n\r\n// Create\r\n\r\nexport const CreateNewUserStart = (data) => {\r\n    return async(dispatch,getSate)=>{\r\n        try{\r\n            dispatch({\r\n                type: actionTypes.CREATE_USER_START\r\n            })\r\n            let res=await createNewUserServive(data)\r\n            if(res && res.errCode===0){\r\n                toast.success(\"Create new user success!\");\r\n                dispatch(CreateNewUserSuccess(res.data))\r\n                dispatch(fetchAllUsersStart())\r\n            }else{\r\n                dispatch(CreateNewUserFaide())\r\n            }\r\n\r\n        }catch(e){\r\n            dispatch(CreateNewUserFaide())\r\n            console.log(\"faidle\",e);\r\n        }\r\n    }\r\n}\r\n\r\nexport const CreateNewUserSuccess = (createData) => ({\r\n    type: actionTypes.CREATE_USER_SUCCESS,\r\n    data:createData\r\n})\r\n\r\nexport const CreateNewUserFaide = () => ({\r\n    type: actionTypes.CREATE_USER_FAIDE\r\n})\r\n\r\n//get all\r\nexport const fetchAllUsersStart = () => {\r\n    return async(dispatch,getSate)=>{\r\n        try{\r\n            dispatch({\r\n                type: actionTypes.CREATE_ALL_USERS_START\r\n            })\r\n            let res=await getAllUsers(\"ALL\")\r\n            if(res && res.errCode===0){\r\n                dispatch(fetchAllUsersSuccess(res.users.reverse()))\r\n            }else{\r\n                dispatch(fetchAllUsersFaide())\r\n            }\r\n\r\n        }catch(e){\r\n            dispatch(fetchAllUsersFaide())\r\n            console.log(\"faidle\",e);\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchAllUsersSuccess = (data) => ({\r\n    type: actionTypes.CREATE_ALL_USERS_SUCCESS,\r\n    users: data\r\n})\r\n\r\nexport const fetchAllUsersFaide = () => ({\r\n    type: actionTypes.CREATE_ALL_USERS_FAIDE\r\n})\r\n\r\n//delete\r\n\r\nexport const DeleteUserStart = (userId) => {\r\n    return async(dispatch,getSate)=>{\r\n        try{\r\n            dispatch({\r\n                type: actionTypes.DELETE_USER_START\r\n            })\r\n            let res=await DeleteUserServive(userId)\r\n            if(res && res.errCode===0){\r\n                toast.success(\"Delete user success!\");\r\n                dispatch(DeleteUserSuccess())\r\n                dispatch(fetchAllUsersStart())\r\n            }else{\r\n                dispatch(DeleteUserFaide())\r\n            }\r\n\r\n        }catch(e){\r\n            dispatch(DeleteUserFaide())\r\n            console.log(\"faidle\",e);\r\n        }\r\n    }\r\n}\r\n\r\nexport const DeleteUserSuccess = (Data) => ({\r\n    type: actionTypes.DELETE_USER_SUCCESS,\r\n    data: Data\r\n})\r\n\r\nexport const DeleteUserFaide = () => ({\r\n    type: actionTypes.DELETE_USER_FAIDE\r\n})\r\n\r\n\r\n// Edit\r\n\r\nexport const EditAUserStart = (data) => {\r\n    return async(dispatch,getSate)=>{\r\n        try{\r\n            dispatch({\r\n                type: actionTypes.EDIT_USER_START\r\n            })\r\n            let res=await UpdateUserServive(data)\r\n            if(res && res.errCode===0){\r\n                toast.success(\"Update a user success!\");\r\n                dispatch(EditAUserSuccess())\r\n                dispatch(fetchAllUsersStart())\r\n            }else{\r\n                dispatch(EditAUserFaide())\r\n            }\r\n\r\n        }catch(e){\r\n            dispatch(EditAUserFaide())\r\n            console.log(\"faidle\",e);\r\n        }\r\n    }\r\n}\r\n\r\nexport const EditAUserSuccess = (Data) => ({\r\n    type: actionTypes.EDIT_USER_SUCCESS,\r\n    data: Data\r\n})\r\n\r\nexport const EditAUserFaide = () => ({\r\n    type: actionTypes.EDIT_USER_FAIDE\r\n})\r\n\r\n//TOP Doctors \r\nexport const fetchTopDoctor=()=>{\r\n    return async (dispatch, getState)=>{\r\n        try{\r\n            let res=await getTopDoctorHome(\"8\")\r\n            if(res && res.errCode===0){\r\n                dispatch({\r\n                    type:actionTypes.FETCH_TOP_DOCTOR_SUCCESS,\r\n                    dataDoctors: res.data\r\n                })\r\n            }else{\r\n                dispatch({\r\n                    type:actionTypes.FETCH_TOP_DOCTOR_FAIDE\r\n\r\n                })\r\n            }\r\n        }catch(e){\r\n                console.log(\"FETCH_TOP_DOCTOR_FAIDE\",e)\r\n                dispatch({\r\n                    type:actionTypes.FETCH_TOP_DOCTOR_FAIDE\r\n                })\r\n        }\r\n    }\r\n}\r\n// All dôctors\r\n\r\nexport const fetchAllDoctors=()=>{\r\n    return async (dispatch, getState)=>{\r\n        try{\r\n            let res=await getAllDoctors()\r\n            if(res && res.errCode===0){\r\n                dispatch({\r\n                    type:actionTypes.FETCH_ALL_DOCTOR_SUCCESS,\r\n                    dataDr: res.data\r\n                })\r\n            }else{\r\n                dispatch({\r\n                    type:actionTypes.FETCH_ALL_DOCTOR_FAIDE\r\n\r\n                })\r\n            }\r\n        }catch(e){\r\n                console.log(\"FETCH_ALL_DOCTOR_FAIDE\",e)\r\n                dispatch({\r\n                    type:actionTypes.FETCH_ALL_DOCTOR_FAIDE\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\n//save detal doctor\r\n\r\nexport const saveDetailDoctors=(data)=>{\r\n    return async (dispatch, getState)=>{\r\n        try{\r\n            let res=await saveDetaiDoctorService(data)\r\n            if(res && res.errCode===0){\r\n                toast.success(\"Save detail doctors success!\");\r\n                dispatch({\r\n                    type:actionTypes.SAVE_DETAIL_DOCTOR_SUCCESS,\r\n                })\r\n            }else{\r\n                console.log(\"res\", res);\r\n                toast.error(\"Save detail doctors error!\");\r\n                dispatch({\r\n                    type:actionTypes.SAVE_DETAIL_DOCTOR_FAIDE\r\n\r\n                })\r\n            }\r\n        }catch(e){\r\n                console.log(\"FETCH_ALL_DOCTOR_FAIDE\",e)\r\n                toast.error(\"Save detail doctors error!\");\r\n                dispatch({\r\n                    type:actionTypes.SAVE_DETAIL_DOCTOR_FAIDE\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\n//fecth all time\r\n\r\nexport const fetchAllScheduleTime=()=>{\r\n    return async (dispatch, getState)=>{\r\n        try{\r\n            let res=await getAllCodeService(\"TIME\");\r\n            if(res && res.errCode===0){\r\n                dispatch({\r\n                    type:actionTypes.FETCH_ALL_SCHEDULE_TIME_SUCCESS,\r\n                    dataTime: res.data\r\n                })\r\n            }else{\r\n                dispatch({\r\n                    type:actionTypes.FETCH_ALL_SCHEDULE_TIME_FAIDE\r\n\r\n                })\r\n            }\r\n        }catch(e){\r\n                \r\n                dispatch({\r\n                    type:actionTypes.FETCH_ALL_SCHEDULE_TIME_FAIDE\r\n                })\r\n        }\r\n    }\r\n}\r\n//Required Doctor Infor\r\nexport const getRequiredDoctorInfor = () => {\r\n    return async(dispatch,getSate)=>{\r\n        try{\r\n            dispatch({\r\n                type: actionTypes.FETCH_REQUIRED_DOCTOR_INFOR_START\r\n            })\r\n            let resPrice=await getAllCodeService(\"PRICE\")\r\n            let resPayment=await getAllCodeService(\"PAYMENT\")\r\n            let resProvince=await getAllCodeService(\"PROVINCE\")\r\n            let resSpecialty= await getAllSpecialty()\r\n            let resClinic= await getAllClinic()\r\n            if(resPrice && resPrice.errCode===0\r\n               && resPayment && resPayment.errCode===0\r\n                && resProvince && resProvince.errCode===0\r\n                && resSpecialty && resSpecialty.errCode===0\r\n                && resClinic && resClinic.errCode===0\r\n            ){\r\n                let data={\r\n                    resPrice:resPrice.data,\r\n                    resPayment:resPayment.data,\r\n                    resProvince:resProvince.data,\r\n                    resSpecialty:resSpecialty.data,\r\n                    resClinic:resClinic.data\r\n                }\r\n                dispatch(fetchRequiredDoctorInforSuccess(data))\r\n            }else{\r\n                dispatch(fetchRequiredDoctorInforFaide())\r\n            }\r\n\r\n        }catch(e){\r\n            dispatch(fetchRequiredDoctorInforFaide())\r\n            console.log(\"faidle\",e);\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchRequiredDoctorInforSuccess = (allRequiredData) => ({\r\n    type: actionTypes.FETCH_REQUIRED_DOCTOR_INFOR_SUCCESS,\r\n    data:allRequiredData\r\n})\r\n\r\nexport const fetchRequiredDoctorInforFaide = () => ({\r\n    type: actionTypes.FETCH_REQUIRED_DOCTOR_INFOR_FAIDE\r\n})\r\n\r\n","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initContentOfConfirmModal = {\r\n    isOpen: false,\r\n    messageId: \"\",\r\n    handleFunc: null,\r\n    dataFunc: null\r\n}\r\n\r\nconst initialState = {\r\n    started: true,\r\n    language: 'vi',\r\n    systemMenuPath: '/system/user-manage',\r\n    contentOfConfirmModal: {\r\n        ...initContentOfConfirmModal\r\n    }\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.APP_START_UP_COMPLETE: \r\n            return {\r\n                ...state,\r\n                started: true\r\n            }\r\n        case actionTypes.SET_CONTENT_OF_CONFIRM_MODAL: \r\n            return {\r\n                ...state,\r\n                contentOfConfirmModal: {\r\n                    ...state.contentOfConfirmModal,\r\n                    ...action.contentOfConfirmModal\r\n                }\r\n            }\r\n        case actionTypes.CHANGE_LANGUAGE:\r\n           \r\n            return {\r\n                ...state,\r\n                language: action.language,\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\n\r\nconst initialState = {\r\n        isLoadingGender:false,\r\n        genders:[],\r\n        positions:[],\r\n        roles:[],\r\n        users:[],\r\n        topDoctors:[],\r\n        allDoctors:[],\r\n        allScheduletime:[],\r\n\r\n        allRequiredDoctorInfor:[]\r\n       \r\n}\r\n\r\nconst adminReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        //Gender\r\n        case actionTypes.FETCH_GENDER_START:\r\n            \r\n            state.isLoadingGender=true\r\n            return {\r\n                ...state,\r\n            }\r\n        case actionTypes.FETCH_GENDER_SUCCESS:\r\n            state.genders=action.data\r\n            state.isLoadingGender=false\r\n                return {\r\n                ...state\r\n                }\r\n        case actionTypes.FETCH_GENDER_FAIDE:\r\n            \r\n            state.isLoadingGender=false\r\n            state.genders=[]\r\n            return {\r\n                ...state,\r\n            }\r\n        \r\n        //Postion\r\n        case actionTypes.FETCH_POSITION_START:\r\n           \r\n            return {\r\n                ...state,\r\n            }\r\n        case actionTypes.FETCH_POSITION_SUCCESS:\r\n            state.positions=action.data\r\n\r\n                return {\r\n                ...state\r\n                }\r\n        case actionTypes.FETCH_POSITION_FAIDE:\r\n            \r\n            state.positions=[]\r\n            return {\r\n                ...state,\r\n            }\r\n        //Role\r\n        case actionTypes.FETCH_ROLE_START:\r\n            \r\n            \r\n            return {\r\n                ...state,\r\n            }\r\n        case actionTypes.FETCH_ROLE_SUCCESS:\r\n            state.roles=action.data\r\n            \r\n            \r\n                return {\r\n                ...state\r\n                }\r\n        case actionTypes.FETCH_ROLE_FAIDE:\r\n            \r\n            state.roles=[]\r\n            return {\r\n                ...state,\r\n            }\r\n\r\n        //All user\r\n        case actionTypes.CREATE_ALL_USERS_START:\r\n        return {\r\n            ...state,\r\n        }\r\n        case actionTypes.CREATE_ALL_USERS_SUCCESS:\r\n        state.users=action.users\r\n            return {\r\n            ...state\r\n            }\r\n        case actionTypes.CREATE_ALL_USERS_FAIDE:\r\n        state.users=[]\r\n        return {\r\n            ...state,\r\n        }\r\n\r\n        //Top doctor\r\n        case actionTypes.FETCH_TOP_DOCTOR_SUCCESS:\r\n            state.topDoctors=action.dataDoctors\r\n                return {\r\n                ...state\r\n                }\r\n        case actionTypes.FETCH_TOP_DOCTOR_FAIDE:\r\n            state.topDoctors=[]\r\n            return {\r\n                ...state,\r\n            }\r\n\r\n        //All doctor\r\n        case actionTypes.FETCH_ALL_DOCTOR_SUCCESS:\r\n            state.allDoctors=action.dataDr\r\n                return {\r\n                ...state\r\n                }\r\n        case actionTypes.FETCH_ALL_DOCTOR_FAIDE:\r\n            state.allDoctors=[]\r\n            return {\r\n                ...state,\r\n            }\r\n        \r\n        //All Time\r\n        case actionTypes.FETCH_ALL_SCHEDULE_TIME_SUCCESS:\r\n            state.allScheduletime=action.dataTime\r\n                return {\r\n                ...state\r\n                }\r\n        case actionTypes.FETCH_ALL_SCHEDULE_TIME_FAIDE:\r\n            state.allScheduletime=[]\r\n            return {\r\n                ...state,\r\n            }\r\n        // all Required Doctor Info\r\n        case actionTypes.FETCH_REQUIRED_DOCTOR_INFOR_START:\r\n            return {\r\n                ...state,\r\n            }\r\n        case actionTypes.FETCH_REQUIRED_DOCTOR_INFOR_SUCCESS:\r\n            state.allRequiredDoctorInfor=action.data\r\n                return {\r\n                ...state\r\n                }\r\n        case actionTypes.FETCH_REQUIRED_DOCTOR_INFOR_FAIDE:\r\n            state.allRequiredDoctorInfor=[]\r\n            return {\r\n                ...state,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default adminReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    userInfo: null\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.USER_LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                userInfo: action.userInfo\r\n            }\r\n        case actionTypes.ADMIN_LOGIN_FAIL:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                userInfo: null\r\n            }\r\n        case actionTypes.PROCESS_LOGOUT:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                userInfo: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;","import {combineReducers} from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\n\r\nimport appReducer from \"./appReducer\";\r\nimport adminReducer from \"./adminReducer\";\r\nimport userReducer from \"./userReducer\";\r\n\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { persistReducer } from 'redux-persist';\r\n\r\nconst persistCommonConfig = {\r\n    storage: storage,\r\n    stateReconciler: autoMergeLevel2,\r\n};\r\n\r\n\r\nconst userPersistConfig = {\r\n    ...persistCommonConfig,\r\n    key: 'user',\r\n    whitelist: ['isLoggedIn', 'userInfo']\r\n};\r\nconst appPersistConfig = {\r\n    ...persistCommonConfig,\r\n    key: 'app',\r\n    whitelist: ['language']\r\n};\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (history) => combineReducers({\r\n    router: connectRouter(history),\r\n    user: persistReducer(userPersistConfig, userReducer),\r\n    app: persistReducer(appPersistConfig,appReducer),\r\n    admin: adminReducer\r\n})","import { logger } from \"redux-logger\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { createStateSyncMiddleware } from 'redux-state-sync';\r\nimport { persistStore } from 'redux-persist';\r\n\r\nimport createRootReducer from './store/reducers/rootReducer';\r\nimport actionTypes from './store/actions/actionTypes';\r\n\r\nconst environment = process.env.NODE_ENV || \"development\";\r\nlet isDevelopment = environment === \"development\";\r\n\r\n//hide redux logs\r\nisDevelopment = false;\r\n\r\n\r\nexport const history = createBrowserHistory({ basename: process.env.REACT_APP_ROUTER_BASE_NAME });\r\n\r\nconst reduxStateSyncConfig = {\r\n    whitelist: [\r\n        actionTypes.APP_START_UP_COMPLETE,\r\n        actionTypes.CHANGE_LANGUAGE,\r\n    ]\r\n}\r\n\r\nconst rootReducer = createRootReducer(history);\r\nconst middleware = [\r\n    routerMiddleware(history),\r\n    thunkMiddleware,\r\n    createStateSyncMiddleware(reduxStateSyncConfig),\r\n]\r\nif (isDevelopment) middleware.push(logger);\r\n\r\nconst composeEnhancers = (isDevelopment && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\r\n\r\nconst reduxStore = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middleware)),\r\n)\r\n\r\nexport const dispatch = reduxStore.dispatch;\r\n\r\nexport const persistor = persistStore(reduxStore);\r\n\r\nexport default reduxStore;","import locationHelperBuilder from \"redux-auth-wrapper/history4/locationHelper\";\r\nimport { connectedRouterRedirect } from \"redux-auth-wrapper/history4/redirect\";\r\n\r\nconst locationHelper = locationHelperBuilder({});\r\n\r\nexport const userIsAuthenticated = connectedRouterRedirect({\r\n    authenticatedSelector: state => state.user.isLoggedIn,\r\n    wrapperDisplayName: 'UserIsAuthenticated',\r\n    redirectPath: '/login'\r\n});\r\n\r\nexport const userIsNotAuthenticated = connectedRouterRedirect({\r\n    // Want to redirect the user when they are authenticated\r\n    authenticatedSelector: state => !state.user.isLoggedIn,\r\n    wrapperDisplayName: 'UserIsNotAuthenticated',\r\n    redirectPath: (state, ownProps) => locationHelper.getRedirectQueryParam(ownProps) || '/',\r\n    allowRedirectBack: false\r\n});","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Home extends Component {\r\n\r\n    render() {\r\n        const { isLoggedIn } = this.props;\r\n        let linkToRedirect = isLoggedIn ? '/system/user-manage' : '/home';\r\n\r\n        return (\r\n            <Redirect to={linkToRedirect} />\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { push } from \"connected-react-router\";\r\n\r\nimport * as actions from \"../../store/actions\";\r\nimport './Login.scss';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport  {handleLoginApi}  from '../../services/userService';\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            username:\"\",\r\n            password:\"\",\r\n            isShowPassword:false,\r\n            errMessage:\"\"\r\n        }\r\n    }\r\n    handleOnChangeUsername=(event)=>{\r\n        this.setState({\r\n            username:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    handleOnChangePassword=async(event)=>{\r\n        await this.setState({\r\n            password:event.target.value\r\n        })\r\n       \r\n    }\r\n\r\n    handleLogin=async()=>{\r\n       this.setState({\r\n        errMessage:\"\"\r\n       })\r\n        \r\n       try{\r\n          let data=  await handleLoginApi(this.state.username,this.state.password)\r\n          \r\n          if(data && data.errCode !== 0){\r\n            this.setState({\r\n                errMessage:data.errMessage\r\n               })\r\n          }\r\n          if(data && data.errCode === 0){\r\n            this.props.userLoginSuccess(data.user)\r\n          }\r\n       }catch(err){\r\n            if(err.response){\r\n                if(err.response.data){\r\n                    this.setState({\r\n                        errMessage:err.response.data.message\r\n                    })\r\n                }\r\n            }\r\n            console.log(err.response);\r\n       }\r\n    }\r\n\r\n    handleShowHidePassowrd=()=>{\r\n        this.setState(\r\n            {\r\n                isShowPassword:!this.state.isShowPassword\r\n            }\r\n        )\r\n    }\r\n\r\n    handleKeyDown=(event)=>{\r\n        if(event.key==='Enter'){\r\n            this.handleLogin()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log('check state', this.state);\r\n        return (\r\n            <div className='login-background'>\r\n                <div className='login-container'>\r\n                    <div className='login-content row'>\r\n                        <div className='col-12 login-text'> Login</div>\r\n                        <div className='col-12 form-groud login-input'>\r\n                            <label>Username:</label>\r\n                            <input type='text' \r\n                                className='form-control'\r\n                                placeholder='Enter your username'\r\n                                value={this.state.username}\r\n                                onChange={(event)=>this.handleOnChangeUsername(event)}\r\n                                ></input>\r\n                        </div>\r\n                        <div className='col-12 form-groud login-input'>\r\n                            <label>Password:</label>\r\n                            <div  className='custom-input-password'>\r\n                            <input type={this.state.isShowPassword ? \"text\":\"password\"} \r\n                                className='form-control' \r\n                                placeholder='Enter your password' \r\n                                value={this.state.password}\r\n                                onChange={(event)=>this.handleOnChangePassword(event)}\r\n                                onKeyDown={(event)=>this.handleKeyDown(event)}\r\n                                >\r\n                                \r\n                            </input>\r\n\r\n                            <span onClick={()=>this.handleShowHidePassowrd()}>\r\n                                <i className={this.state.isShowPassword ? \"far fa-eye\" : \"far fa-eye-slash\" }></i>\r\n                            </span>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className='col-12' style={{color:\"red\"}}>\r\n                            {this.state.errMessage}\r\n                        </div>\r\n                        <div className='col-12'>\r\n                            <button className='login-btn' onClick={()=>this.handleLogin()}>Login</button>\r\n                        </div>\r\n                       \r\n                        <div className='col-12 '>\r\n                            <span className='forgot-password'>Forgot your password?</span>\r\n                        </div>\r\n                        <div className='col-12 text-center'>\r\n                            <span className='text-center'>Or login with:</span>\r\n                        </div>\r\n                        <div className='col-12 cocial-login'>\r\n                            <i className=\"fab fa-google-plus-g google\"></i>\r\n                            <i className=\"fab fa-twitter twitter\"></i>\r\n                            <i className=\"fab fa-facebook-f facebook \"></i>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        navigate: (path) => dispatch(push(path)),\r\n        // userLoginFail: () => dispatch(actions.adminLoginFail()),\r\n        userLoginSuccess: (userInfo)=>dispatch(actions.userLoginSuccess(userInfo)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import EventEmitter from \"events\"\r\nconst _emitter= new EventEmitter();\r\n_emitter.setMaxListeners(0)\r\nexport const emitter=_emitter","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { emitter } from '../../utils/emitter';\r\n\r\nclass ModalUser extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            email:\"\",\r\n            password:\"\",\r\n            firstName:\"\",\r\n            lastName:\"\",\r\n            address:\"\"\r\n        }\r\n        this.listenToEmitter()\r\n    }\r\n\r\n    listenToEmitter=()=>{\r\n        emitter.on('EVENT_CLEAR_MODAL_DATA',data=>{\r\n           this.setState({\r\n                email:\"\",\r\n                password:\"\",\r\n                firstName:\"\",\r\n                lastName:\"\",\r\n                address:\"\"\r\n           })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    toggle=()=>{\r\n        this.props.toggleFormParent()\r\n    }\r\n\r\n    handleOnchangeInput=(event,id)=>{\r\n        //bad code\r\n        // this.state[id]=event.target.value\r\n        // this.setState({\r\n        //     ...this.state\r\n        // },()=>{\r\n        //     console.log('check bad state:', this.state);\r\n        // })\r\n        //good code\r\n        let coppyState={...this.state}\r\n        coppyState[id]=event.target.value\r\n        this.setState({\r\n            ...coppyState\r\n        },()=>{\r\n           \r\n        })\r\n    }\r\n    checkValidateInput=()=>{\r\n        let isValid=true\r\n        let arrInput=['email','password','firstName','lastName','address']\r\n        for( let i=0;i< arrInput.length;i++){\r\n            if(!this.state[arrInput[i]]){\r\n                isValid=false\r\n                alert(\"Missing parameter:\"+ arrInput[i])\r\n                break\r\n            }\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    handleAddNewUser = ()=>{\r\n         let isValid= this.checkValidateInput()\r\n         if(isValid=== true){\r\n            //call api create modal\r\n            this.props.createNewUser(this.state)\r\n         }\r\n        console.log(\"data modal\", this.state);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal isOpen={this.props.isOpen} \r\n            toggle={()=>{this.toggle()}} \r\n            className={\"modal-user-container\"}\r\n            size=\"lg\"\r\n            centered\r\n            >\r\n          <ModalHeader toggle={()=>{this.toggle()}}>Create a new user</ModalHeader>\r\n          <ModalBody>\r\n            <div className='modal-user-body'>\r\n                <div className='input-container'>\r\n                    <label>Email</label>\r\n                    <input \r\n                    type='text' \r\n                    onChange={(event)=>{this.handleOnchangeInput(event,\"email\")}}\r\n                    value={this.state.email}\r\n                    ></input>\r\n                </div>\r\n                <div className='input-container'>\r\n                    <label>Password</label>\r\n                    <input \r\n                    type='password' \r\n                    onChange={(event)=>{this.handleOnchangeInput(event,\"password\")}}\r\n                    value={this.state.password}\r\n                    ></input>\r\n                </div>\r\n            </div>\r\n            <div className='modal-user-body'>\r\n                <div className='input-container'>\r\n                    <label>First Name</label>\r\n                    <input \r\n                    type='text' \r\n                    onChange={(event)=>{this.handleOnchangeInput(event,\"firstName\")}}\r\n                    value={this.state.firstName}\r\n                    ></input>\r\n                </div>\r\n                <div className='input-container'>\r\n                    <label>Last Name</label>\r\n                    <input \r\n                    type='text' \r\n                    onChange={(event)=>{this.handleOnchangeInput(event,\"lastName\")}}\r\n                    value={this.state.lastName}\r\n                    ></input>\r\n                </div>\r\n            </div>\r\n            <div className='modal-user-body'>\r\n                <div className='input-container2'>\r\n                    <label>Address</label>\r\n                    <input \r\n                    type='text' \r\n                    onChange={(event)=>{this.handleOnchangeInput(event,\"address\")}}\r\n                    value={this.state.address}\r\n                    ></input>\r\n                </div>\r\n            </div>\r\n            \r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button \r\n            color=\"primary\" \r\n            className='px-3' \r\n            onClick={()=>{this.handleAddNewUser()}}\r\n\r\n            >\r\n                Add new</Button>{' '}\r\n            <Button color=\"secondary\" className='px-3' onClick={()=>{this.toggle()}}>Close</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUser);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { emitter } from '../../utils/emitter';\r\nimport _ from \"lodash\";\r\n\r\nclass ModalEditUser extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            email:\"\",\r\n            password:\"\",\r\n            firstName:\"\",\r\n            lastName:\"\",\r\n            address:\"\"\r\n        }\r\n        this.listenToEmitter()\r\n    }\r\n\r\n    listenToEmitter=()=>{\r\n        emitter.on('EVENT_CLEAR_MODAL_DATA',data=>{\r\n           this.setState({\r\n                email:\"\",\r\n                password:\"\",\r\n                firstName:\"\",\r\n                lastName:\"\",\r\n                address:\"\"\r\n           })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        let user= this.props.currentUser\r\n        if(user && !_.isEmpty(user)){\r\n            this.setState({\r\n                id:user.id,\r\n                email:user.email,\r\n                password:\"harcode\",\r\n                firstName:user.firstName,\r\n                lastName:user.lastName,\r\n                address:user.address\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    toggle=()=>{\r\n        this.props.toggleFormParent()\r\n    }\r\n\r\n    handleOnchangeInput=(event,id)=>{\r\n        //bad code\r\n        // this.state[id]=event.target.value\r\n        // this.setState({\r\n        //     ...this.state\r\n        // },()=>{\r\n        //     console.log('check bad state:', this.state);\r\n        // })\r\n        //good code\r\n        let coppyState={...this.state}\r\n        coppyState[id]=event.target.value\r\n        this.setState({\r\n            ...coppyState\r\n        },()=>{\r\n           \r\n        })\r\n    }\r\n    checkValidateInput=()=>{\r\n        let isValid=true\r\n        let arrInput=['email','password','firstName','lastName','address']\r\n        for( let i=0;i< arrInput.length;i++){\r\n            if(!this.state[arrInput[i]]){\r\n                isValid=false\r\n                alert(\"Missing parameter:\"+ arrInput[i])\r\n                break\r\n            }\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    handleSaveUser = ()=>{\r\n         let isValid= this.checkValidateInput()\r\n         if(isValid=== true){\r\n            //call api create modal\r\n            this.props.editUser(this.state)\r\n         }\r\n        console.log(\"data modal\", this.state);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal isOpen={this.props.isOpen} \r\n            toggle={()=>{this.toggle()}} \r\n            className={\"modal-user-container\"}\r\n            size=\"lg\"\r\n            centered\r\n            >\r\n          <ModalHeader toggle={()=>{this.toggle()}}>Edit a new user</ModalHeader>\r\n          <ModalBody>\r\n            <div className='modal-user-body'>\r\n                <div className='input-container'>\r\n                    <label>Email</label>\r\n                    <input \r\n                    type='text' \r\n                    onChange={(event)=>{this.handleOnchangeInput(event,\"email\")}}\r\n                    value={this.state.email}\r\n                    disabled\r\n                    ></input>\r\n                </div>\r\n                <div className='input-container'>\r\n                    <label>Password</label>\r\n                    <input \r\n                    type='password' \r\n                    onChange={(event)=>{this.handleOnchangeInput(event,\"password\")}}\r\n                    value={this.state.password}\r\n                    disabled\r\n                    ></input>\r\n                </div>\r\n            </div>\r\n            <div className='modal-user-body'>\r\n                <div className='input-container'>\r\n                    <label>First Name</label>\r\n                    <input \r\n                    type='text' \r\n                    onChange={(event)=>{this.handleOnchangeInput(event,\"firstName\")}}\r\n                    value={this.state.firstName}\r\n                    ></input>\r\n                </div>\r\n                <div className='input-container'>\r\n                    <label>Last Name</label>\r\n                    <input \r\n                    type='text' \r\n                    onChange={(event)=>{this.handleOnchangeInput(event,\"lastName\")}}\r\n                    value={this.state.lastName}\r\n                    ></input>\r\n                </div>\r\n            </div>\r\n            <div className='modal-user-body'>\r\n                <div className='input-container2'>\r\n                    <label>Address</label>\r\n                    <input \r\n                    type='text' \r\n                    onChange={(event)=>{this.handleOnchangeInput(event,\"address\")}}\r\n                    value={this.state.address}\r\n                    ></input>\r\n                </div>\r\n            </div>\r\n            \r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button \r\n            color=\"primary\" \r\n            className='px-3' \r\n            onClick={()=>{this.handleSaveUser()}}\r\n\r\n            >\r\n                Save changes</Button>{' '}\r\n            <Button color=\"secondary\" className='px-3' onClick={()=>{this.toggle()}}>Close</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalEditUser);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport \"./UserManage.scss\"\r\nimport {getAllUsers, createNewUserServive,DeleteUserServive,UpdateUserServive} from \"../../services/userService\"\r\nimport ModalUser from './ModalUser';\r\nimport ModalEditUser from './ModalEditUser';\r\nimport {emitter} from '../../utils/emitter'\r\n\r\nclass UserManage extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n          id:'',\r\n          arrUser:[],\r\n          isOpenModalUser:false,\r\n          isOpenEditModalUser:false,\r\n          userEdit:{}\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.getAllUserFormReact()\r\n    }\r\n    getAllUserFormReact=async()=>{\r\n      let response= await getAllUsers(\"ALL\")\r\n      if(response && response.errCode===0){\r\n        this.setState({\r\n          arrUser:response.users\r\n        })\r\n      }\r\n    }\r\n\r\n    handleAddNewUser=()=>{\r\n        this.setState({\r\n          isOpenModalUser:true\r\n\r\n        })\r\n    }\r\n\r\n    toggleUserModal=()=>{\r\n      this.setState({\r\n          isOpenModalUser: !this.state.isOpenModalUser\r\n      })\r\n    }\r\n\r\n    toggleUserEditModal=()=>{\r\n      this.setState({\r\n        isOpenEditModalUser:!this.state.isOpenEditModalUser\r\n      })\r\n    }\r\n\r\n    createNewUser=async(data)=>{\r\n      try{\r\n        let response=  await createNewUserServive(data)\r\n        if(response && response.errCode !==0){\r\n          alert(response.errMessage)\r\n        }else{\r\n           await this.getAllUserFormReact()\r\n           this.setState({\r\n              isOpenModalUser:false\r\n           })\r\n           emitter.emit('EVENT_CLEAR_MODAL_DATA')\r\n        }\r\n        console.log('response create user:',response);\r\n      }catch(e){\r\n        console.log(e);\r\n      }\r\n      \r\n    }\r\n\r\n    handleDelete= async(user)=>{\r\n      try{\r\n         let res= await DeleteUserServive(user.id)\r\n         if(res && res.errCode===0){\r\n            await this.getAllUserFormReact()\r\n         }else{\r\n            alert(res.errMessage)\r\n         }\r\n      }catch(e){\r\n        console.log(e);\r\n      }\r\n    }\r\n\r\n    handleEdit=(user)=>{\r\n      this.setState({\r\n        isOpenEditModalUser:true,\r\n        userEdit:user\r\n      })\r\n    }\r\n\r\n    handleEditUser=async(user)=>{\r\n      try{\r\n        let res= await UpdateUserServive(user)\r\n        if(res && res.errCode===0){\r\n            this.setState({\r\n              isOpenEditModalUser:false\r\n            })\r\n            this.getAllUserFormReact()\r\n        }else{\r\n          alert(res.errMessage)\r\n        }\r\n      }catch(e){\r\n        console.log(e);\r\n      }\r\n    }\r\n\r\n    render() {\r\n      let arrUser=this.state.arrUser\r\n        return (\r\n            <div className=\"user-container\">\r\n              <ModalUser\r\n                  isOpen={this.state.isOpenModalUser}\r\n                  toggleFormParent={this.toggleUserModal}\r\n                  createNewUser={this.createNewUser}\r\n              />\r\n              {\r\n                this.state.isOpenEditModalUser &&\r\n                <ModalEditUser\r\n                isOpen={this.state.isOpenEditModalUser}\r\n                toggleFormParent={this.toggleUserEditModal}\r\n                currentUser={this.state.userEdit}\r\n                editUser={this.handleEditUser}\r\n            />\r\n              }\r\n                <div className='title text-center'>CRUD USER(1)</div>\r\n                <div className='mx-1'>\r\n                  <button className='btn btn-primary px-3'\r\n                  onClick={()=>this.handleAddNewUser()}\r\n                  >\r\n                    <i className=\"fas fa-plus\"></i>Add new user</button>\r\n                </div>\r\n                    <div className='user-table mt-3 mx-1'>\r\n                    <table id=\"customers\">\r\n <tbody>\r\n <tr>\r\n    <th>Email</th>\r\n    <th>First name</th>\r\n    <th>Last name</th>\r\n    <th>Address</th>\r\n    <th>Actions</th>\r\n  </tr>\r\n  \r\n  {arrUser && arrUser.map((item,index)=>{\r\n    return(\r\n      <tr>\r\n        <td>{item.email}</td>\r\n        <td>{item.firstName}</td>\r\n        <td>{item.lastName}</td>\r\n        <td>{item.address}</td>\r\n        <td>\r\n          <button className='btn-edit' onClick={()=> this.handleEdit(item)}><i className=\"fas fa-pencil-alt\"></i></button>\r\n          <button className='btn-delete' onClick={()=> this.handleDelete(item)}><i className=\"fas fa-trash-alt\"></i></button>\r\n        </td>\r\n      </tr>\r\n    )\r\n  })\r\n  } \r\n  </tbody>\r\n                    </table>\r\n                    </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManage);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './Navigator.scss';\r\n\r\nclass MenuGroup extends Component {\r\n\r\n    render() {\r\n        const { name, children } = this.props;\r\n        return (\r\n            <li className=\"menu-group\">\r\n                <div className=\"menu-group-name\">\r\n                    <FormattedMessage id={name} />\r\n                </div>\r\n                <ul className=\"menu-list list-unstyled\">\r\n                    {children}\r\n                </ul>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nclass Menu extends Component {\r\n\r\n    render() {\r\n        const { name, active, link, children, onClick, hasSubMenu, onLinkClick } = this.props;\r\n        return (\r\n            <li className={\"menu\" + (hasSubMenu ? \" has-sub-menu\" : \"\") + (\"\") + (active ? \" active\" : \"\")}>\r\n                {hasSubMenu ? (\r\n                    <Fragment>\r\n                        <span\r\n                            data-toggle=\"collapse\"\r\n                            className={\"menu-link collapsed\"}\r\n                            onClick={onClick}\r\n                            aria-expanded={\"false\"}\r\n                        >\r\n                            <FormattedMessage id={name} />\r\n                            <div className=\"icon-right\">\r\n                                <i className={\"far fa-angle-right\"} />\r\n                            </div>\r\n                        </span>\r\n                        <div>\r\n                            <ul className=\"sub-menu-list list-unstyled\">\r\n                                {children}\r\n                            </ul>\r\n                        </div>\r\n                    </Fragment>\r\n                ) : (\r\n                        <Link to={link} className=\"menu-link\" onClick={onLinkClick}>\r\n                            <FormattedMessage id={name} />\r\n                        </Link>\r\n                    )}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nclass SubMenu extends Component {\r\n\r\n    getItemClass = path => {\r\n        return this.props.location.pathname === path ? \"active\" : \"\";\r\n    };\r\n\r\n    render() {\r\n        const { name, link, onLinkClick } = this.props;\r\n        return (\r\n            <li className={\"sub-menu \" + this.getItemClass(link)}>\r\n                <Link to={link} className=\"sub-menu-link\" onClick={onLinkClick}>\r\n                    <FormattedMessage id={name} />\r\n                </Link>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nconst MenuGroupWithRouter = withRouter(MenuGroup);\r\nconst MenuWithRouter = withRouter(Menu);\r\nconst SubMenuWithRouter = withRouter(SubMenu);\r\n\r\nconst withRouterInnerRef = (WrappedComponent) => {\r\n\r\n    class InnerComponentWithRef extends React.Component {\r\n        render() {\r\n            const { forwardRef, ...rest } = this.props;\r\n            return <WrappedComponent {...rest} ref={forwardRef} />;\r\n        }\r\n    }\r\n\r\n    const ComponentWithRef = withRouter(InnerComponentWithRef, { withRef: true });\r\n\r\n    return React.forwardRef((props, ref) => {\r\n        return <ComponentWithRef {...props} forwardRef={ref} />;\r\n    });\r\n};\r\n\r\nclass Navigator extends Component {\r\n    state = {\r\n        expandedMenu: {}\r\n    };\r\n\r\n    toggle = (groupIndex, menuIndex) => {\r\n        const expandedMenu = {};\r\n        const needExpand = !(this.state.expandedMenu[groupIndex + '_' + menuIndex] === true);\r\n        if (needExpand) {\r\n            expandedMenu[groupIndex + '_' + menuIndex] = true;\r\n        }\r\n\r\n        this.setState({\r\n            expandedMenu: expandedMenu\r\n        });\r\n    };\r\n\r\n    isMenuHasSubMenuActive = (location, subMenus, link) => {\r\n        if (subMenus) {\r\n            if (subMenus.length === 0) {\r\n                return false;\r\n            }\r\n\r\n            const currentPath = location.pathname;\r\n            for (let i = 0; i < subMenus.length; i++) {\r\n                const subMenu = subMenus[i];\r\n                if (subMenu.link === currentPath) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (link) {\r\n            return this.props.location.pathname === link;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    checkActiveMenu = () => {\r\n        const { menus, location } = this.props;\r\n        outerLoop:\r\n        for (let i = 0; i < menus.length; i++) {\r\n            const group = menus[i];\r\n            if (group.menus && group.menus.length > 0) {\r\n                for (let j = 0; j < group.menus.length; j++) {\r\n                    const menu = group.menus[j];\r\n                    if (menu.subMenus && menu.subMenus.length > 0) {\r\n                        if (this.isMenuHasSubMenuActive(location, menu.subMenus, null)) {\r\n                            const key = i + '_' + j;\r\n                            this.setState({\r\n                                expandedMenu: {\r\n                                    [key]: true\r\n                                }\r\n                            });\r\n                            break outerLoop;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.checkActiveMenu();\r\n    };\r\n\r\n    // componentWillReceiveProps(nextProps, prevState) {\r\n    //     const { location, setAccountMenuPath, setSettingMenuPath } = this.props;\r\n    //     const { location: nextLocation } = nextProps;\r\n    //     if (location !== nextLocation) {\r\n    //         let pathname = nextLocation && nextLocation.pathname;\r\n    //         if ((pathname.startsWith('/account/') || pathname.startsWith('/fds/account/'))) {\r\n    //             setAccountMenuPath(pathname);\r\n    //         }\r\n    //         if (pathname.startsWith('/settings/')) {\r\n    //             setSettingMenuPath(pathname);\r\n    //         };\r\n    //     };\r\n    // };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { location } = this.props;\r\n        const { location: prevLocation } = prevProps;\r\n        if (location !== prevLocation) {\r\n            this.checkActiveMenu();\r\n        };\r\n    };\r\n\r\n    render() {\r\n        const { menus, location, onLinkClick } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <ul className=\"navigator-menu list-unstyled\">\r\n                    {\r\n                        menus.map((group, groupIndex) => {\r\n                            return (\r\n                                <Fragment key={groupIndex}>\r\n                                    <MenuGroupWithRouter name={group.name}>\r\n                                        {group.menus ? (\r\n                                            group.menus.map((menu, menuIndex) => {\r\n                                                const isMenuHasSubMenuActive = this.isMenuHasSubMenuActive(location, menu.subMenus, menu.link);\r\n                                                const isSubMenuOpen = this.state.expandedMenu[groupIndex + '_' + menuIndex] === true;\r\n                                                return (\r\n                                                    <MenuWithRouter\r\n                                                        key={menuIndex}\r\n                                                        active={isMenuHasSubMenuActive}\r\n                                                        name={menu.name}\r\n                                                        link={menu.link}\r\n                                                        hasSubMenu={menu.subMenus}\r\n                                                        isOpen={isSubMenuOpen}\r\n                                                        onClick={() => this.toggle(groupIndex, menuIndex)}\r\n                                                        onLinkClick={onLinkClick}\r\n                                                    >\r\n                                                        {menu.subMenus && menu.subMenus.map((subMenu, subMenuIndex) => (\r\n                                                            <SubMenuWithRouter\r\n                                                                key={subMenuIndex}\r\n                                                                name={subMenu.name}\r\n                                                                link={subMenu.link}\r\n                                                                onClick={this.closeOtherExpand}\r\n                                                                onLinkClick={onLinkClick}\r\n                                                            />\r\n                                                        ))}\r\n                                                    </MenuWithRouter>\r\n                                                );\r\n                                            })\r\n                                        ) : null}\r\n                                    </MenuGroupWithRouter>\r\n                                </Fragment>\r\n                            );\r\n                        })\r\n                    }\r\n                </ul>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default withRouterInnerRef(connect(mapStateToProps, mapDispatchToProps)(Navigator));\r\n","export const adminMenu = [\r\n    { //quản lí người dùng\r\n        name: 'menu.admin.manage-user', \r\n        menus: [\r\n            {\r\n                name: 'menu.admin.manage-doctor',link: '/system/manage-doctor' ,\r\n                // subMenus: [\r\n                //     { name: 'menu.system.system-administrator.user-manage', link: '/system/user-manage' },\r\n                //     { name: 'menu.system.system-administrator.user-redux', link: '/system/user-redux' },\r\n                    \r\n                // ]\r\n            },\r\n            {\r\n                name:'menu.admin.manage-admin',link: '/system/user-admin' ,\r\n            },\r\n            {\r\n                name:'menu.admin.crud',link: '/system/user-manage' ,\r\n            },\r\n            {\r\n                name:'menu.admin.crud-redux',link: '/system/user-redux' ,\r\n            },\r\n            { //quản lí kế hoạch khám bệnh của bác sĩ\r\n                name:'menu.doctor.manage-schedule',link: '/doctor/manage-schedule' ,\r\n            },\r\n        ]\r\n    },\r\n    { //quản lí phòng khám\r\n        name: 'menu.admin.clinic', \r\n        menus: [\r\n            {\r\n                name: 'menu.admin.manage-clinic',link: '/system/manage-clinic' ,\r\n            }\r\n        ]\r\n    },\r\n    { //quản lí chuyên khoa\r\n        name: 'menu.admin.specialty', \r\n        menus: [\r\n            {\r\n                name: 'menu.admin.manage-specialty',link: '/system/manage-specialty' ,\r\n            }\r\n        ]\r\n    },\r\n    { //quản lí Cẩm nang\r\n        name: 'menu.admin.handbook', \r\n        menus: [\r\n            {\r\n                name: 'menu.admin.manage-handbook',link: '/system/manage-handbook' ,\r\n            }\r\n        ]\r\n    },\r\n    \r\n    \r\n];\r\n\r\nexport const doctorsMenu = [\r\n    {\r\n        name: 'menu.admin.manage-user',\r\n        menus:[\r\n            { //quản lí kế hoạch khám bệnh của bác sĩ\r\n                \r\n                name:'menu.doctor.manage-schedule',link: '/doctor/manage-schedule' ,\r\n                    \r\n            },\r\n            { //quản lí bệnh nhân khám bệnh của bác sĩ\r\n                \r\n                name:'menu.doctor.manage-patient',link: '/doctor/manage-patient' ,\r\n                    \r\n            },\r\n            ]\r\n    }\r\n    \r\n];","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from \"../../store/actions\";\r\nimport Navigator from '../../components/Navigator';\r\nimport { adminMenu, doctorsMenu } from './menuApp';\r\nimport './Header.scss';\r\nimport {USER_ROLE, languages} from \"../../utils\"\r\nimport { FormattedMessage } from 'react-intl';\r\nimport _ from 'lodash';\r\n\r\nclass Header extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            MenuApp:[]\r\n        }\r\n    }\r\n    handleChangeLanguage=(language)=>{\r\n        this.props.changelanguageAppRedux(language)\r\n    }\r\n    componentDidMount(){\r\n        let userInfo= this.props.userInfo\r\n        let menu=[]\r\n        if(userInfo && !_.isEmpty(userInfo)){\r\n            let role= userInfo.roleId\r\n            if(role === USER_ROLE.ADMIN){\r\n                menu=adminMenu\r\n            }\r\n            if(role === USER_ROLE.DOCTOR){\r\n                menu=doctorsMenu\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            MenuApp:menu\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(\"check user info\", this.props.userInfo);\r\n\r\n        const { processLogout,language,userInfo } = this.props;\r\n\r\n        return (\r\n            <div className=\"header-container\">\r\n                {/* thanh navigator */}\r\n                <div className=\"header-tabs-container\">\r\n                    <Navigator menus={this.state.MenuApp} />\r\n                </div>\r\n\r\n                <div className='languages'>\r\n                    <span className='welcome'>\r\n                        <FormattedMessage id=\"homeheader.welcome\"/> {userInfo && userInfo.firstName ? userInfo.firstName+\" \"+userInfo.lastName :\"\"} !\r\n                    </span>\r\n                    <div className={language === languages.VI ? \"language-vi active\" : \"language-vi\"}><span onClick={()=> this.handleChangeLanguage(languages.VI)}>VN</span></div>\r\n                    <div className={language === languages.EN ? \"language-en active\" : \"language-en\"}><span onClick={()=> this.handleChangeLanguage(languages.EN)}>EN</span></div>\r\n                    {/* nút logout */}\r\n                    <div className=\"btn btn-logout\" onClick={processLogout} title='Log out'>\r\n                        <i className=\"fas fa-sign-out-alt\"></i>\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        userInfo: state.user.userInfo,  \r\n        language:state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        processLogout: () => dispatch(actions.processLogout()),\r\n        changelanguageAppRedux:(language)=>dispatch(actions.changelanguageApp(language))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport \"./ManageDoctor.scss\"\r\nimport * as actions from \"../../../store/actions\"\r\nimport {CRUD_ACTIONS, languages} from \"../../../utils\"\r\n\r\n// import react, react-markdown-editor-lite, and a markdown parser you like\r\n\r\nimport * as ReactDOM from 'react-dom';\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\n// import style manually\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\n\r\nimport Select from 'react-select';\r\nimport { every, flatMap } from 'lodash';\r\nimport { getAllDoctors, getDetailInfoDoctor } from '../../../services/userService';\r\n\r\n\r\n\r\n// Initialize a markdown parser\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\r\n\r\n\r\n\r\n\r\nclass ManageDoctor extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            //save to markdown table\r\n            contentMarkdown:'',\r\n            contentHTML:'',\r\n            selectedOption:'',\r\n            description:'',\r\n            listDoctors:'',\r\n            hasOldData:false,\r\n\r\n\r\n            //Save to docto info table\r\n            listPrice:[],\r\n            listPayment:[],\r\n            listProvince:[],\r\n            listClinic:[],\r\n            listSpecialty:[],\r\n\r\n            selectedPrice:\"\",\r\n            selectedPayment:\"\",\r\n            selectedProvince:\"\",\r\n            selectClinic:\"\",\r\n            selectSpecialty:\"\",\r\n            nameClinic:\"\",\r\n            addressClinic:\"\",\r\n            note:\"\",\r\n            clinicId:\"\",\r\n            specialtyId:\"\"\r\n        }\r\n    }\r\n    componentDidMount(){\r\n       this.props.fetchAllDoctors()\r\n       this.props.getRequiredDoctorInfor()\r\n       \r\n    }\r\n   \r\n    \r\n    buildDataInputSelect=(inputData,type)=>{\r\n        let result=[]\r\n        let language=this.props.language\r\n        \r\n        if(inputData && inputData.length>0){\r\n            if(type==='USERS'){\r\n                inputData.map((item,index) => {\r\n                    let object={}\r\n                    let labelVi=  `${item.lastName} ${item.firstName}` \r\n                    let labelEn=  `${item.firstName} ${item.lastName} `\r\n    \r\n                    object.label=language ===languages.VI ? labelVi : labelEn\r\n                    object.value=item.id\r\n                    result.push(object)\r\n                })\r\n            }\r\n        if(type==='PRICE' ){\r\n            \r\n            inputData.map((item,index) => {\r\n                let object={}\r\n                let labelVi=  `${item.valueVi} VNĐ` \r\n                let labelEn=  `${item.valueEn} USD`\r\n\r\n                object.label=language ===languages.VI ? labelVi : labelEn\r\n                object.value=item.keyMap\r\n                result.push(object)\r\n            })\r\n\r\n        }\r\n        if(type==='PAYMENT' || type==='PROVINCE'){\r\n            inputData.map((item,index) => {\r\n                let object={}\r\n                let labelVi=  `${item.valueVi}` \r\n                let labelEn=  `${item.valueEn} `\r\n\r\n                object.label=language ===languages.VI ? labelVi : labelEn\r\n                object.value=item.keyMap\r\n                result.push(object)\r\n            })\r\n        }\r\n        if(type===\"SPECIALTY\"){\r\n            inputData.map((item,index) => {\r\n                let object={}\r\n\r\n                object.label=item.name\r\n                object.value=item.id\r\n                result.push(object)\r\n            })\r\n        }\r\n        if(type===\"CLINIC\"){\r\n            inputData.map((item,index) => {\r\n                let object={}\r\n\r\n                object.label=item.name\r\n                object.value=item.id\r\n                result.push(object)\r\n            })\r\n        }\r\n            \r\n        }\r\n        return result\r\n    }\r\n\r\n    componentDidUpdate(prevProps,prevState,snapshot){\r\n        if(prevProps.allDoctors !== this.props.allDoctors){\r\n            let dataSelected= this.buildDataInputSelect(this.props.allDoctors,'USERS')\r\n            this.setState({\r\n                listDoctors: dataSelected\r\n            })\r\n        }\r\n        if(prevProps.language !== this.props.language){\r\n            let dataSelected= this.buildDataInputSelect(this.props.allDoctors,'USERS')\r\n            \r\n            this.setState({\r\n                listDoctors: dataSelected\r\n            })\r\n        }\r\n\r\n        if(prevProps.allRequiredDoctorInfor !== this.props.allRequiredDoctorInfor){\r\n            let{resPayment, resPrice, resProvince, resSpecialty,resClinic}= this.props.allRequiredDoctorInfor\r\n            let dataSelectedPrice= this.buildDataInputSelect(resPrice, 'PRICE')\r\n            let dataSelectedPayment= this.buildDataInputSelect(resPayment,'PAYMENT')\r\n            let dataSelectedProvince= this.buildDataInputSelect(resProvince,'PROVINCE')\r\n            let dataSectedSpecialty=this.buildDataInputSelect(resSpecialty,'SPECIALTY')\r\n            let dataSectedClinic=this.buildDataInputSelect(resClinic,'CLINIC')\r\n            this.setState({\r\n                listPrice:dataSelectedPrice,\r\n                listPayment:dataSelectedPayment,\r\n                listProvince:dataSelectedProvince,\r\n                listSpecialty:dataSectedSpecialty,\r\n                listClinic:dataSectedClinic\r\n            })\r\n        }\r\n        if(prevProps.language !== this.props.language){\r\n            let{resPayment, resPrice, resProvince}= this.props.allRequiredDoctorInfor\r\n            let dataSelectedPrice= this.buildDataInputSelect(resPrice, 'PRICE')\r\n            let dataSelectedPayment= this.buildDataInputSelect(resPayment,'PAYMENT')\r\n            let dataSelectedProvince= this.buildDataInputSelect(resProvince,'PROVINCE')\r\n\r\n            this.setState({\r\n                listPrice:dataSelectedPrice,\r\n                listPayment:dataSelectedPayment,\r\n                listProvince:dataSelectedProvince,\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    // Finish!\r\n     handleEditorChange=({ html, text })=> {\r\n        this.setState({\r\n            contentMarkdown:text,\r\n            contentHTML:html,\r\n        })\r\n        \r\n    }\r\n  \r\n    handleSaveContentMarkdown=()=>{\r\n        let hasOldData= this.state.hasOldData\r\n        this.props.saveDetailDoctor({\r\n            contentHTML: this.state.contentHTML,\r\n            contentMarkdown: this.state.contentMarkdown,\r\n            description: this.state.description,\r\n            doctorId: this.state.selectedOption.value,\r\n            action: hasOldData=== true ? CRUD_ACTIONS.EDIT : CRUD_ACTIONS.CREATE,\r\n\r\n            selectedPrice:this.state.selectedPrice.value,\r\n            selectedPayment:this.state.selectedPayment.value,\r\n            selectedProvince:this.state.selectedProvince.value,\r\n            nameClinic:this.state.nameClinic,\r\n            addressClinic:this.state.addressClinic,\r\n            note:this.state.note,\r\n            clinicId:this.state.selectClinic &&  this.state.selectClinic.value ? this.state.selectClinic.value : \"\",\r\n            specialtyId:this.state.selectSpecialty.value\r\n        })\r\n    }\r\n    handleChangeSelect = async(selectedOption) => {\r\n        this.setState({ selectedOption });\r\n        let {listPayment,listPrice,listProvince, listSpecialty,listClinic}= this.state\r\n        let res= await getDetailInfoDoctor(selectedOption.value)\r\n        if(res && res.errCode===0 && res.data && res.data.Markdown  ){\r\n            let markdown= res.data.Markdown\r\n\r\n            let addressClinic=''\r\n            let nameClinic=''\r\n            let note=''\r\n            let paymentId=''\r\n            let priceId=''\r\n            let provinceId=''\r\n            let specialtyId='' \r\n            let clinicId=''\r\n\r\n            let selectedPayment=''\r\n            let selectedPrice=''\r\n            let selectedProvince=''\r\n            let selectClinic=\"\"\r\n            let selectSpecialty=\"\"\r\n            \r\n            if(res.data.Doctor_Infor){\r\n                addressClinic=res.data.Doctor_Infor.addressClinic\r\n                nameClinic=res.data.Doctor_Infor.nameClinic\r\n                note=res.data.Doctor_Infor.note\r\n                priceId= res.data.Doctor_Infor.priceId\r\n                paymentId= res.data.Doctor_Infor.paymentId\r\n                provinceId= res.data.Doctor_Infor.provinceId\r\n                specialtyId= res.data.Doctor_Infor.specialtyId\r\n                clinicId= res.data.Doctor_Infor.clinicId\r\n\r\n                 selectedPayment=listPayment.find(item=>{\r\n                    return item && item.value===paymentId\r\n                })\r\n                 selectedPrice=listPrice.find(item=>{\r\n                    return item && item.value===priceId\r\n                })\r\n                 selectedProvince=listProvince.find(item=>{\r\n                    return item && item.value===provinceId\r\n                })\r\n                selectSpecialty= listSpecialty.find(item=>{\r\n                    return item && item.value===specialtyId\r\n                })\r\n                selectClinic= listClinic.find(item=>{\r\n                    return item && item.value===clinicId\r\n                })\r\n                \r\n            }\r\n\r\n            this.setState({\r\n                contentHTML: markdown.contentHTML,\r\n                contentMarkdown: markdown.contentMarkdown,\r\n                description: markdown.description,\r\n                hasOldData:true,\r\n                addressClinic:addressClinic,\r\n                nameClinic:nameClinic,\r\n                note:note,\r\n                selectedPayment:selectedPayment,\r\n                selectedPrice:selectedPrice,\r\n                selectedProvince:selectedProvince,\r\n                selectSpecialty:selectSpecialty,\r\n                selectClinic:selectClinic\r\n            })\r\n        }else{\r\n            this.setState({\r\n                contentHTML: '',\r\n                contentMarkdown: '',\r\n                description: '',\r\n                hasOldData:false,\r\n                addressClinic:'',\r\n                nameClinic:'',\r\n                note:'',\r\n                selectedPrice:'',\r\n                selectedPayment:'',\r\n                selectedProvince:'',\r\n                selectSpecialty:'',\r\n                selectClinic:''\r\n            })\r\n        }\r\n    };\r\n\r\n    handleChangeSelectDoctorInfo=async(selectedOption,name)=>{\r\n        let stateName=name.name\r\n        let stateCoppy={...this.state}\r\n        stateCoppy[stateName]=selectedOption\r\n        this.setState({\r\n            ...stateCoppy\r\n        })\r\n\r\n        console.log(\"check new selec\",selectedOption,stateName);\r\n    }\r\n\r\n    handleOnChangTextDescription=(event,id)=>{\r\n        let stateCoppy={...this.state}\r\n        stateCoppy[id]=event.target.value\r\n        this.setState({\r\n            ...stateCoppy\r\n        })\r\n    }\r\n\r\n    render() {\r\n       console.log(\"state\",this.state);\r\n        let hasOldData= this.state.hasOldData\r\n        let listSpecialty= this.state.listSpecialty\r\n        const { selectedOption } = this.state;\r\n       \r\n        return (\r\n            <div className='manage-doctor-container'>\r\n                    <div className='manage-doctor-title'>\r\n                        <FormattedMessage id=\"admin.manage-doctor\"/>\r\n                    </div>\r\n                    <div className='more-info'>\r\n                        <div className='content-left form-group'>\r\n                        <label> <FormattedMessage id=\"admin.select-doctor\"/> </label>\r\n                            <Select\r\n                                value={selectedOption}\r\n                                onChange={this.handleChangeSelect}\r\n                                options={this.state.listDoctors}\r\n                                placeholder={<FormattedMessage id=\"admin.select-doctor\"/>}\r\n                               \r\n                            />\r\n                        </div> \r\n                        <div className='content-right'>\r\n                        <label><FormattedMessage id=\"admin.intro\"/></label>\r\n                            <textarea className='form-control' rows=\"4\"\r\n                                onChange={(event)=> this.handleOnChangTextDescription(event,'description')}   \r\n                                value={this.state.description} \r\n                            >\r\n\r\n                            </textarea>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='more-infor-extra row'>\r\n                        <div className='col-4 form-group'>\r\n                            <label><FormattedMessage id=\"admin.price\"/></label>\r\n                            <Select\r\n                                value={this.state.selectedPrice}\r\n                                onChange={this.handleChangeSelectDoctorInfo}\r\n                                options={this.state.listPrice}\r\n                                placeholder={<FormattedMessage id=\"admin.price\"/>}\r\n                                name=\"selectedPrice\"\r\n                            \r\n                            />\r\n                        </div>\r\n                        <div className='col-4 form-group'>\r\n                            <label><FormattedMessage id=\"admin.payment\"/></label>\r\n                            <Select\r\n                                value={this.state.selectedPayment}\r\n                                onChange={this.handleChangeSelectDoctorInfo}\r\n                                options={this.state.listPayment}\r\n                                placeholder={<FormattedMessage id=\"admin.payment\"/>}\r\n                                name=\"selectedPayment\"\r\n                               \r\n                            />\r\n                        </div>\r\n                        <div className='col-4 form-group'>\r\n                            <label><FormattedMessage id=\"admin.province\"/></label>\r\n                            <Select\r\n                                value={this.state.selectedProvince}\r\n                                onChange={this.handleChangeSelectDoctorInfo}\r\n                                options={this.state.listProvince}\r\n                                placeholder={<FormattedMessage id=\"admin.province\"/>}\r\n                                name=\"selectedProvince\"\r\n                               \r\n                            />\r\n                        </div>\r\n                        \r\n                        <div className='col-4 form-group'>\r\n                            <label><FormattedMessage id=\"admin.name-clinic\"/></label>\r\n                            <input className='form-control'\r\n                                onChange={(event)=> this.handleOnChangTextDescription(event,'nameClinic')}   \r\n                                value={this.state.nameClinic} \r\n                            />\r\n                        </div>\r\n                        <div className='col-4 form-group'>\r\n                            <label><FormattedMessage id=\"admin.address-clinic\"/></label>\r\n                            <input className='form-control'\r\n                                onChange={(event)=> this.handleOnChangTextDescription(event,'addressClinic')}   \r\n                                value={this.state.addressClinic} \r\n                            />\r\n                        </div>\r\n                        <div className='col-4 form-group'>\r\n                            <label><FormattedMessage id=\"admin.note\"/></label>\r\n                            <input className='form-control'\r\n                                onChange={(event)=> this.handleOnChangTextDescription(event,'note')}   \r\n                                value={this.state.note} \r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='row'>\r\n                        <div className='col-4 form-group'>\r\n                            <label><FormattedMessage id=\"admin.specialty\"/></label>\r\n                            <Select\r\n                                value={this.state.selectSpecialty}\r\n                                onChange={this.handleChangeSelectDoctorInfo}\r\n                                options={this.state.listSpecialty}\r\n                                placeholder={<FormattedMessage id=\"admin.specialty\"/>}\r\n                               name=\"selectSpecialty\"\r\n                            />\r\n                        </div>\r\n                        <div className='col-4 form-group'>\r\n                            <label><FormattedMessage id=\"admin.clinic\"/></label>\r\n                            <Select\r\n                                value={this.state.selectClinic}\r\n                                onChange={this.handleChangeSelectDoctorInfo}\r\n                                options={this.state.listClinic}\r\n                                placeholder={<FormattedMessage id=\"admin.clinic\"/>}\r\n                               name=\"selectClinic\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='manage-doctor-editor'>\r\n                        <MdEditor \r\n                            style={{ height: '500px' ,marginTop:\"20px\"}} \r\n                            renderHTML={text => mdParser.render(text)} \r\n                            onChange={ this.handleEditorChange} \r\n                            value={this.state.contentMarkdown}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                    <button \r\n                        onClick={()=> this.handleSaveContentMarkdown()}\r\n                        className={hasOldData === true ? 'save-content-doctor' : 'create-content-doctor'}\r\n                    >\r\n                        {hasOldData === true ?\r\n                            <span><FormattedMessage id=\"admin.save\"/> </span>\r\n                            :\r\n                            <span><FormattedMessage id=\"admin.add\"/></span>\r\n                        }\r\n                    </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language:state.app.language,\r\n        allDoctors:state.admin.allDoctors,\r\n        allRequiredDoctorInfor:state.admin.allRequiredDoctorInfor,\r\n        \r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchAllDoctors:()=> dispatch(actions.fetchAllDoctors()),\r\n        getRequiredDoctorInfor: ()=> dispatch(actions.getRequiredDoctorInfor()),\r\n        saveDetailDoctor: (data)=> dispatch(actions.saveDetailDoctors(data))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageDoctor);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './ManageSpecialty.scss';\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\nimport {languages,CRUD_ACTIONS , CommonUtils} from \"../../../utils\"\r\nimport { createNewSpecialty } from '../../../services/userService';\r\nimport { toast } from 'react-toastify';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\r\n\r\nclass ManageSpecialty extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            name:'',\r\n            imageBase64:'',\r\n            descriptionHTML:'',\r\n            descriptionMarkdown:''\r\n        }\r\n    }\r\n    capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n   \r\n    componentDidMount(){\r\n\r\n       \r\n\r\n    }\r\n\r\n    async componentDidUpdate(prevProps,prevState,snapshot){\r\n        if(this.props.language !== prevProps.language){\r\n\r\n         \r\n        }\r\n    }\r\n\r\n    \r\n    handleOnChangeInput=(event,id)=>{\r\n        let stateCoppy={...this.state}\r\n        stateCoppy[id]=event.target.value\r\n        this.setState({\r\n            ...stateCoppy\r\n        })\r\n    }\r\n\r\n    handleChangeImg= async(event)=>{\r\n        let data= event.target.files\r\n        let file= data[0];\r\n        if(file){\r\n            let base64=await CommonUtils.getBase64(file)\r\n            this.setState({\r\n                imageBase64:base64,\r\n            })\r\n        }         \r\n    }\r\n\r\n\r\n    // Finish!\r\n    handleEditorChange=({ html, text })=> {\r\n        this.setState({\r\n            descriptionHTML:html,\r\n            descriptionMarkdown:text,\r\n        })\r\n        \r\n    }\r\n\r\n    handleSaveNewSpecialty=async()=>{\r\n        console.log(\"check state\", this.state);\r\n        let res= await createNewSpecialty(this.state)\r\n        if(res && res.errCode===0){\r\n            toast.success(\"Add new specialty successs!\")\r\n            this.setState({\r\n                name:'',\r\n                imageBase64:'',\r\n                descriptionHTML:'',\r\n                descriptionMarkdown:''\r\n            })\r\n        }else{\r\n            toast.error(\"Something wrong!\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n           <div className='manage-specialty-container'>\r\n                <div className='ms-title title'> <FormattedMessage id=\"menu.admin.manage-specialty\"/></div>\r\n\r\n                <div className='add-new-spceilty row'>\r\n                    <div className='col-6 form-group'>\r\n                        <label><FormattedMessage id=\"admin.name-specialty\"/></label>\r\n                        <input \r\n                            className='form-control' \r\n                            type='text' \r\n                            value={this.state.name}\r\n                            onChange={(event)=>this.handleOnChangeInput(event,'name')}\r\n                        />\r\n                    </div>\r\n                    <div className='col-6 form-group'>\r\n                        <label className='col-12'><FormattedMessage id=\"admin.img-specialty\"/></label>\r\n                        <input \r\n                            className='form-control-file' \r\n                            type='file'\r\n                            onChange={(event)=>this.handleChangeImg(event)}\r\n                        />\r\n                    </div>\r\n                    <div className='col-12'>\r\n                        <MdEditor \r\n                            style={{ height: '300px' ,marginTop:\"20px\"}} \r\n                            renderHTML={text => mdParser.render(text)} \r\n                            onChange={ this.handleEditorChange} \r\n                            value={this.state.descriptionMarkdown}\r\n                        />\r\n                    </div>\r\n                    <div className='col-12'>\r\n                        <button \r\n                            className='btn-save-specialty'\r\n                            onClick={()=>this.handleSaveNewSpecialty()}\r\n                        >\r\n                            <FormattedMessage id=\"manage-schedule.save\"/>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                        \r\n           </div>\r\n        );\r\n    }\r\n    }\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language:state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageSpecialty);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './ManageClinic.scss';\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\nimport {languages,CRUD_ACTIONS , CommonUtils} from \"../../../utils\"\r\nimport { toast } from 'react-toastify';\r\nimport { createNewClinic } from '../../../services/userService';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\r\n\r\nclass ManageClinic extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            name:'',\r\n            address:'',\r\n            imageBase64:'',\r\n            descriptionHTML:'',\r\n            descriptionMarkdown:''\r\n        }\r\n    }\r\n    capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n   \r\n    componentDidMount(){\r\n\r\n       \r\n\r\n    }\r\n\r\n    async componentDidUpdate(prevProps,prevState,snapshot){\r\n        if(this.props.language !== prevProps.language){\r\n\r\n         \r\n        }\r\n    }\r\n\r\n    \r\n    handleOnChangeInput=(event,id)=>{\r\n        let stateCoppy={...this.state}\r\n        stateCoppy[id]=event.target.value\r\n        this.setState({\r\n            ...stateCoppy\r\n        })\r\n    }\r\n\r\n    handleChangeImg= async(event)=>{\r\n        let data= event.target.files\r\n        let file= data[0];\r\n        if(file){\r\n            let base64=await CommonUtils.getBase64(file)\r\n            this.setState({\r\n                imageBase64:base64,\r\n            })\r\n        }         \r\n    }\r\n\r\n\r\n    // Finish!\r\n    handleEditorChange=({ html, text })=> {\r\n        this.setState({\r\n            descriptionHTML:html,\r\n            descriptionMarkdown:text,\r\n        })\r\n        \r\n    }\r\n\r\n    handleSaveNewClinic=async()=>{\r\n        console.log(\"check state\", this.state);\r\n        let res= await createNewClinic(this.state)\r\n        if(res && res.errCode===0){\r\n            toast.success(\"Add new clinic successs!\")\r\n            this.setState({\r\n                name:'',\r\n                address:'',\r\n                imageBase64:'',\r\n                descriptionHTML:'',\r\n                descriptionMarkdown:''\r\n            })\r\n        }else{\r\n            toast.error(\"Something wrong!\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n           <div className='manage-specialty-container'>\r\n                <div className='ms-title title'><FormattedMessage id=\"menu.admin.manage-clinic\"/></div>\r\n\r\n                <div className='add-new-spceilty row'>\r\n                    <div className='col-6 form-group'>\r\n                        <label><FormattedMessage id=\"admin.name-clinic\"/></label>\r\n                        <input \r\n                            className='form-control' \r\n                            type='text' \r\n                            value={this.state.name}\r\n                            onChange={(event)=>this.handleOnChangeInput(event,'name')}\r\n                        />\r\n                    </div>\r\n                    <div className='col-6 form-group'>\r\n                        <label className='col-12'><FormattedMessage id=\"admin.img-clinic\"/></label>\r\n                        <input \r\n                            className='form-control-file' \r\n                            type='file'\r\n                            onChange={(event)=>this.handleChangeImg(event)}\r\n                        />\r\n                    </div>\r\n                    <div className='col-6 form-group'>\r\n                        <label><FormattedMessage id=\"admin.address-clinic\"/></label>\r\n                        <input \r\n                            className='form-control' \r\n                            type='text' \r\n                            value={this.state.address}\r\n                            onChange={(event)=>this.handleOnChangeInput(event,'address')}\r\n                        />\r\n                    </div>\r\n                    <div className='col-12'>\r\n                        <MdEditor \r\n                            style={{ height: '300px' ,marginTop:\"20px\"}} \r\n                            renderHTML={text => mdParser.render(text)} \r\n                            onChange={ this.handleEditorChange} \r\n                            value={this.state.descriptionMarkdown}\r\n                        />\r\n                    </div>\r\n                    <div className='col-12'>\r\n                        <button \r\n                            className='btn-save-specialty'\r\n                            onClick={()=>this.handleSaveNewClinic()}\r\n                        >\r\n                            <FormattedMessage id=\"manage-schedule.save\"/>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                        \r\n           </div>\r\n        );\r\n    }\r\n    }\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language:state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageClinic);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport UserManage from '../containers/System/UserManage';\r\nimport UserRedux from '../containers/System/Admin/UserRedux';\r\nimport Header from '../containers/Header/Header';\r\nimport ManageDoctor from '../containers/System/Admin/ManageDoctor';\r\nimport ManageSpecialty from '../containers/System/Specialty/ManageSpecialty';\r\nimport ManageClinic from '../containers/System/Clinic/ManageClinic';\r\nclass System extends Component {\r\n    render() {\r\n         \r\n        const { systemMenuPath,isLoggedIn } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n            {this.props.isLoggedIn && <Header />} \r\n            <div className=\"system-container\">\r\n                <div className=\"system-list\">\r\n                    <Switch>\r\n                        <Route path=\"/system/user-manage\" component={UserManage} />\r\n                        <Route path=\"/system/user-redux\" component={UserRedux} />\r\n                        <Route path=\"/system/manage-doctor\" component={ManageDoctor} />\r\n                        <Route path=\"/system/manage-specialty\" component={ManageSpecialty} />\r\n                        <Route path=\"/system/manage-clinic\" component={ManageClinic} />\r\n\r\n                        <Route component={() => { return (<Redirect to={systemMenuPath} />) }} />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        systemMenuPath: state.app.systemMenuPath,\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(System);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport \"./HomeHeader.scss\"\r\nimport { FormattedMessage } from 'react-intl';\r\nimport {languages} from \"../../utils\"\r\nimport { changelanguageApp } from '../../store/actions/appActions';\r\nimport { withRouter } from 'react-router';\r\n\r\n\r\nclass HomeHeader extends Component {\r\n\r\n    changelanguage=(language)=>{\r\n        this.props.changelanguageAppRedux(language)\r\n    }\r\n\r\n    returnHome=()=>{\r\n        if(this.props.history){\r\n            this.props.history.push(`/home`)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let language=this.props.language\r\n        return (\r\n            <React.Fragment>\r\n                <div className='home-header-container'>\r\n                <div className='home-header-content'>\r\n                    <div className='left-content'>\r\n                        <i className=\"fas fa-bars\"></i>\r\n                        <div className='header-logo' onClick={()=> this.returnHome()}></div>\r\n                    </div>\r\n                    <div className='center-content'>\r\n                        <div className='child-content'>\r\n                            <div><b><FormattedMessage id=\"homeheader.specialist\"/></b></div>\r\n                            <div className='sub-title' ><FormattedMessage id=\"homeheader.searchdoctor\"/></div>\r\n                        </div>\r\n                        <div className='child-content'>\r\n                            <div><b><FormattedMessage id=\"homeheader.health\"/></b></div>\r\n                            <div className='sub-title'><FormattedMessage id=\"homeheader.chooseHospital\"/></div>\r\n                        </div>\r\n                        <div className='child-content'>\r\n                            <div><b><FormattedMessage id=\"homeheader.doctor\"/></b></div>\r\n                            <div className='sub-title'><FormattedMessage id=\"homeheader.chooseDoctor\"/></div>\r\n                        </div>\r\n                        <div className='child-content'>\r\n                            <div><b><FormattedMessage id=\"homeheader.package\"/></b></div>\r\n                            <div className='sub-title'><FormattedMessage id=\"homeheader.General\"/></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='right-content'>\r\n                        <div className='support'>\r\n                            <i className=\"fas fa-question-circle\"></i>\r\n                            <FormattedMessage id=\"homeheader.support\"/>\r\n                        </div>\r\n                        <div className={language === languages.VI ? \"language-vi active\" : \"language-vi\"}><span onClick={()=> this.changelanguage(languages.VI)}>VN</span></div>\r\n                        <div className={language === languages.EN ? \"language-en active\" : \"language-en\"}><span onClick={()=> this.changelanguage(languages.EN)}>EN</span></div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                {this.props.isshowBanner===true &&\r\n                <div className='home-header-banner'>\r\n                    <div  className='content-up'>\r\n                        <div className='title1'><FormattedMessage id=\"banner.title1\"/></div>\r\n                        <div className='title2'><FormattedMessage id=\"banner.title2\"/></div>\r\n                        <div className='search'>\r\n                            <i className=\"fas fa-search\"></i>\r\n                            <input className='text' placeholder=\"Tìm kiếm\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className='content-down'>\r\n                        <div className='options'>\r\n                            <div className='options-child'>\r\n                                <div className='icon-child'><i className=\"far fa-hospital\"></i></div>\r\n                                <div className='text-child'><FormattedMessage id=\"banner.specialized\"/></div>\r\n                            </div>\r\n                            <div className='options-child'>\r\n                                <div className='icon-child'><i className=\"fas fa-mobile-alt\"></i></div>\r\n                                <div className='text-child'><FormattedMessage id=\"banner.remote\"/></div>\r\n                            </div>\r\n                            <div className='options-child'>\r\n                                <div className='icon-child'><i className=\"fas fa-procedures\"></i></div>\r\n                                <div className='text-child'><FormattedMessage id=\"banner.general\"/></div>\r\n                            </div>\r\n                            <div className='options-child'>\r\n                                <div className='icon-child'><i className=\"fas fa-flask\"></i></div>\r\n                                <div className='text-child'><FormattedMessage id=\"banner.test\"/></div>\r\n                            </div>\r\n                            <div className='options-child'>\r\n                                <div className='icon-child'><i className=\"fas fa-user-md\"></i></div>\r\n                                <div className='text-child'><FormattedMessage id=\"banner.mental\"/></div>\r\n                            </div>\r\n                            <div className='options-child'>\r\n                                <div className='icon-child'><i className=\"fas fa-briefcase-medical\"></i></div>\r\n                                <div className='text-child'><FormattedMessage id=\"banner.dental\"/></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n                }\r\n            </React.Fragment>\r\n            \r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language:state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changelanguageAppRedux:(language)=>dispatch(changelanguageApp(language))\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(HomeHeader));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Slider from 'react-slick';   \r\n// Import css files\r\nimport { getAllSpecialty } from '../../../services/userService';\r\nimport \"./Specialty.scss\"\r\nimport { withRouter } from 'react-router';\r\n\r\n\r\n\r\n\r\nclass Specialty extends Component {\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            dataSpecialty:[]\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let res= await getAllSpecialty()\r\n        console.log(\"check specialty\", res);\r\n        if(res && res.errCode===0){\r\n            this.setState({\r\n                dataSpecialty:res.data ? res.data : []\r\n            })\r\n        }\r\n    }\r\n\r\n    handleViewDetailSpecialty=(item)=>{\r\n        if(this.props.history){\r\n            this.props.history.push(`/detail-specialty/${item.id}`)\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        let dataSpecialty= this.state.dataSpecialty\r\n        return (\r\n            <React.Fragment>\r\n                <div className='section-share section-specialty'>\r\n                    <div className='section-container'>\r\n                        <div className='section-header'>\r\n                            <span className='title-section'><FormattedMessage id=\"homepage.specialty-popular\"/></span>\r\n                            <button className='btn-section'><FormattedMessage id=\"homepage.more-info\"/></button>\r\n                        </div>\r\n                        <div className='section-body'>\r\n                        <Slider {...this.props.settings}>\r\n\r\n                            {dataSpecialty && dataSpecialty.length>0 &&\r\n                             dataSpecialty.map((item, index)=>{\r\n                                return(\r\n                                    <div \r\n                                        className='img-customize specialty-child' \r\n                                        key={index}\r\n                                        onClick={()=> this.handleViewDetailSpecialty(item)}\r\n                                    >\r\n                                    <div \r\n                                        className='bg-image section-specialty'\r\n                                        style={{backgroundImage:`url(${item.image})`}}\r\n                                    >\r\n\r\n                                    </div>\r\n                                    <div className='specialty-name'>{item.name}</div>\r\n                                </div>\r\n                                )\r\n                             })                             \r\n                            }                       \r\n                           \r\n                        </Slider>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n            \r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language:state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n       \r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Specialty));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Slider from 'react-slick';  \r\nimport \"./MedicalFacility.scss\"\r\nimport { getAllClinic } from '../../../services/userService';\r\nimport { withRouter } from 'react-router';\r\nclass MedicalFacility extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            dataClinics:[],\r\n\r\n        }  \r\n    }\r\n\r\n    async componentDidMount(){\r\n        let res= await getAllClinic()\r\n        if(res && res.errCode===0){\r\n            this.setState({\r\n                dataClinics:res.data ? res.data : []\r\n            })\r\n        }\r\n        console.log(\"check res clinic\", res);\r\n    }\r\n\r\n\r\n    handleViewDetailClinic=(clinic)=>{\r\n        if(this.props.history){\r\n            this.props.history.push(`/detail-clinic/${clinic.id}`)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {dataClinics}= this.state\r\n        return (\r\n            <React.Fragment>\r\n            <div className='section-share section-medical-facility'>\r\n                <div className='section-container'>\r\n                    <div className='section-header'>\r\n                        <span className='title-section'><FormattedMessage id=\"homepage.outstanding-medical\"/></span>\r\n                        <button className='btn-section'><FormattedMessage id=\"homepage.more-info\"/></button>\r\n                    </div>\r\n                    <div className='section-body'>\r\n                    <Slider {...this.props.settings}>\r\n                        {dataClinics && dataClinics.length>0 &&\r\n                        dataClinics.map((item,index)=>{\r\n                            return(\r\n                                <div \r\n                                    className='img-customize'\r\n                                    key={index}\r\n                                    onClick={()=> this.handleViewDetailClinic(item)}\r\n                                >\r\n                                <div \r\n                                    className='bg-image section-medical-facility'\r\n                                    style={{backgroundImage:`url(${item.image})`}}\r\n                                ></div>\r\n                                <div className='clinic-name'>{item.name}</div>\r\n                        </div>\r\n                            )\r\n                        })      \r\n                        } \r\n                       \r\n                    </Slider>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MedicalFacility));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Slider from 'react-slick';   \r\nimport \"./HandBook.scss\"\r\n// Import css files\r\n\r\n\r\nclass HandBook extends Component {\r\n    \r\n    \r\n    render() {\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <div className='section-share section-HandBook'>\r\n                    <div className='section-container'>\r\n                        <div className='section-header'>\r\n                            <span className='title-section'><FormattedMessage id=\"homepage.handbook\"/></span>\r\n                            <button className='btn-section'><FormattedMessage id=\"homepage.all\"/></button>\r\n                        </div>\r\n                        <div className='section-body'>\r\n                        <Slider {...this.props.settings}>\r\n                            <div className='img-customize'>\r\n                                <div className='bg-image section-HandBook-1'></div>\r\n                                <div className='hanbook-content'><FormattedMessage id=\"handbook.hanbook-1\"/></div>\r\n                            </div>\r\n                            <div className='img-customize'>\r\n                                <div className='bg-image section-HandBook-2'></div>\r\n                                <div className='hanbook-content'><FormattedMessage id=\"handbook.hanbook-2\"/></div>\r\n                            </div>\r\n                            <div className='img-customize'>\r\n                                <div className='bg-image section-HandBook-3'></div>\r\n                                <div className='hanbook-content'><FormattedMessage id=\"handbook.hanbook-3\"/></div>\r\n                            </div>\r\n                            <div className='img-customize'>\r\n                                <div className='bg-image section-HandBook-4'></div>\r\n                                <div className='hanbook-content'><FormattedMessage id=\"handbook.hanbook-4\"/></div>\r\n                            </div>\r\n                            <div className='img-customize'>\r\n                                <div className='bg-image section-HandBook-1'></div>\r\n                                <div className='hanbook-content'><FormattedMessage id=\"handbook.hanbook-1\"/></div>\r\n                            </div>\r\n                            <div className='img-customize'>\r\n                                <div className='bg-image section-HandBook-2'></div>\r\n                                <div className='hanbook-content'><FormattedMessage id=\"handbook.hanbook-2\"/></div>\r\n                            </div>\r\n                            <div className='img-customize'>\r\n                                <div className='bg-image section-HandBook-3'></div>\r\n                                <div className='hanbook-content'><FormattedMessage id=\"handbook.hanbook-3\"/></div>\r\n                            </div>\r\n                            <div className='img-customize'>\r\n                                <div className='bg-image section-HandBook-4'></div>\r\n                                <div className='hanbook-content'><FormattedMessage id=\"handbook.hanbook-4\"/></div>\r\n                            </div>\r\n                           \r\n                        </Slider>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n            \r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language:state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n       \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HandBook);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { languages } from '../../../utils';\r\n\r\n\r\nclass LikeAndShare extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n          \r\n        }\r\n    }\r\n    initFacebookSDK() {\r\n        if (window.FB) {\r\n            window.FB.XFBML.parse();\r\n        }\r\n\r\n        let language=this.props.language\r\n        let locale = language === languages.EN ?  'en_US': 'vi_VN'\r\n        \r\n        window.fbAsyncInit = function () {\r\n            window.FB.init({\r\n                appId: process.env.REACT_APP_FACEBOOK_APP_ID,\r\n                cookie: true,  // enable cookies to allow the server to access\r\n                // the session\r\n                xfbml: true,  // parse social plugins on this page\r\n                version: 'v2.5' // use version 2.1\r\n            });\r\n        };\r\n        // Load the SDK asynchronously\r\n        (function (d, s, id) {\r\n            var js, fjs = d.getElementsByTagName(s)[0];\r\n            if (d.getElementById(id)) return;\r\n            js = d.createElement(s); js.id = id;\r\n            js.src = `https://connect.facebook.net/${locale}/sdk.js`;\r\n            fjs.parentNode.insertBefore(js, fjs);\r\n        }(document, 'script', 'facebook-jssdk'));\r\n\r\n        console.log(\"local\", locale);\r\n    }\r\n   \r\n     componentDidMount(){\r\n         this.initFacebookSDK()\r\n\r\n    }\r\n\r\n   componentDidUpdate(prevProps,prevState,snapshot){\r\n        if(this.props.language !== prevProps.language){\r\n          \r\n             this.initFacebookSDK()\r\n        }\r\n    }\r\n\r\n    \r\n\r\n\r\n    render() {\r\n        let dataHref=this.props.dataHref\r\n        return (\r\n            \r\n           <>\r\n            <div \r\n                class=\"fb-like\" \r\n                data-href={dataHref}\r\n                data-width=\"\" \r\n                data-layout=\"standard\" \r\n                data-action=\"like\" \r\n                data-size=\"small\" \r\n                data-share=\"true\"\r\n            ></div>\r\n           \r\n           </>\r\n        );\r\n    }\r\n    }\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language:state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LikeAndShare);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { FacebookShareButton, FacebookIcon } from 'react-share';\r\nimport LikeAndShare from '../../Patient/SocailPlugin/LikeAndShare';\r\n// Import css files\r\nimport \"./about.scss\"\r\n\r\nclass About extends Component {\r\n    \r\n    \r\n    render() {\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <div className='section-share section-About'>\r\n                    <div className='about-container'>\r\n                    <div className='section-about-header'>\r\n                    <FormattedMessage id=\"homepage.about\"/>\r\n                    </div>\r\n                    <div className='section-about-content'>\r\n                        <div className='content-left'>\r\n                        <iframe \r\n                            width=\"100% \" \r\n                            height=\"320\" \r\n                            src=\"https://www.youtube.com/embed/7tiR7SI4CkI\" \r\n                            title=\"BookingCare trên VTV1 ngày 21/02/2018 - Chương trình Cà phê khởi nghiệp\" \r\n                            frameBorder=\"0\" \r\n                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" \r\n                            allowFullScreen                            >\r\n\r\n                            </iframe>\r\n                        </div>\r\n                        <div className='content-right'>\r\n                            <p>\r\n                                <FormattedMessage id=\"about.content\"/>\r\n                            </p>\r\n                            {/* <div className='like-share-plugin'>\r\n                                    <LikeAndShare/>\r\n                            </div>  */}\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n            \r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language:state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n       \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(About);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Slider from 'react-slick'; \r\n\r\n// Import css files\r\nimport { FacebookShareButton, FacebookIcon } from 'react-share';\r\n\r\nclass HomeFooter extends Component {\r\n    \r\n    \r\n    render() {\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <div className='homeFooter'>  \r\n                    <p>&copy; 2023 PhamMinhHieu_2019604168 <a href='https://www.topcv.vn/xem-cv/A1UDV1AIVA1WDwRWVFBSA1dUAwFRCgYAWlNTVw30ec'>I want to developer</a></p>\r\n                    \r\n                </div>\r\n            </React.Fragment>\r\n            \r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language:state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n       \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeFooter);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport HomeHeader from './HomeHeader';\r\nimport Specialty from './Section/Specialty';\r\nimport MedicalFacility from \"./Section/MedicalFacility\";\r\nimport OutStandingDoctor from './Section/OutStandingDoctor';\r\nimport HandBook from './Section/HandBook';\r\nimport About from './Section/About';\r\nimport HomeFooter from './HomeFooter';\r\nimport \"./homePage.scss\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nclass HomePage extends Component {\r\n\r\n    render() {\r\n        let settings = {\r\n            dots: true,\r\n            infinite: false,\r\n            speed: 300,\r\n            slidesToShow: 4,\r\n            slidesToScroll: 1,\r\n            \r\n          };\r\n        \r\n        return (\r\n            <>\r\n                <HomeHeader isshowBanner={true}/>\r\n                <Specialty settings={settings}/>\r\n                <MedicalFacility  settings={settings}/>\r\n                <OutStandingDoctor settings={settings}/>\r\n                <HandBook settings={settings} />\r\n                <About/>\r\n                <HomeFooter/>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './ProfileDoctor.scss';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { languages } from '../../../utils';\r\nimport { getProfileDoctorById } from '../../../services/userService';\r\nimport NumericFormat from 'react-number-format';\r\nimport _ from \"lodash\"\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom';\r\n\r\n\r\nclass ProfileDoctor extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            dataProfile:{}\r\n        }\r\n    }\r\n    capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n   \r\n    async componentDidMount(){\r\n        let data=await this.getInforDoctor(this.props.doctorId)\r\n        this.setState({\r\n            dataProfile:data\r\n        })\r\n    }\r\n\r\n    getInforDoctor=async(id)=>{\r\n        let result={}\r\n        if(id){\r\n            let res= await getProfileDoctorById(id)\r\n            if(res && res.errCode===0){\r\n                result=res.data\r\n            } \r\n        }\r\n        return result\r\n    }\r\n\r\n    async componentDidUpdate(prevProps,prevState,snapshot){\r\n        if(this.props.language !== prevProps.language){\r\n\r\n        }\r\n\r\n        if (this.props.doctorId !== prevProps.doctorId) {\r\n            let data = await this.getInforDoctor(this.props.doctorId);\r\n            this.setState({\r\n              dataProfile: data,\r\n            });\r\n     \r\n        }\r\n    }\r\n\r\n    rederTimeBooking=(dataTime)=>{\r\n        let language= this.props.language\r\n        if(dataTime && !_.isEmpty(dataTime)){\r\n            let time= language=== languages.VI ? dataTime.timeTypeData.valueVi : dataTime.timeTypeData.valueEn\r\n\r\n            let date=  language===languages.VI ?\r\n             moment.unix(+dataTime.date / 1000).format('dddd - DD/MM/YYYY')\r\n             : \r\n             moment.unix(+dataTime.date / 1000).locale('en').format('ddd - DD/MM/YYYY')\r\n            return(\r\n                <>\r\n                    <div><i className=\"far fa-clock\"></i> {time}</div>\r\n                    <div><i className=\"far fa-calendar-check\"></i> {date}</div>\r\n                    <div><FormattedMessage id=\"patient.booking-modal.priceBooking\"/></div>\r\n                </>\r\n            )\r\n        }\r\n        return <></>\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(\"profile state\",this.state);\r\n        let dataProfile= this.state.dataProfile\r\n\r\n        let language=this.props.language\r\n        let dataTime= this.props.dataTime\r\n        let isShowDescriptionDoctor= this.props.isShowDescriptionDoctor\r\n        let isShowLinhDetail = this.props.isShowLinhDetail\r\n        let isShowPrice= this.props.isShowPrice\r\n        let doctorId=this.props.doctorId\r\n        \r\n        let nameVi=''\r\n        let nameEn=''\r\n        if(dataProfile && dataProfile.positionData){\r\n            nameVi=`${dataProfile.positionData.valueVi}, ${dataProfile.lastName} ${dataProfile.firstName}`\r\n            nameEn=`${dataProfile.positionData.valueEn}, ${dataProfile.lastName} ${dataProfile.firstName}`\r\n       }\r\n        return (\r\n            <>\r\n            <div className='intro-doctor'>\r\n            <div className='content-left'\r\n                style={{backgroundImage:`url(${dataProfile && dataProfile.image ? dataProfile.image : \"\"})`}}\r\n            >\r\n\r\n            </div>\r\n            <div className='content-right'>\r\n                <div className='up'>\r\n                    {language === languages.VI? nameVi :nameEn}\r\n                </div>\r\n                <div className='down'>\r\n                    {isShowDescriptionDoctor === true  ?\r\n                        <>\r\n                        {dataProfile && dataProfile.Markdown && dataProfile.Markdown.description\r\n                            &&<span>\r\n                                {\r\n                                    dataProfile.Markdown.description\r\n                                }\r\n                            </span>\r\n                        }\r\n                        </>\r\n                        :\r\n                        <>\r\n                            {this.rederTimeBooking(dataTime)}\r\n                        </>\r\n                    }            \r\n                </div>\r\n            </div>\r\n            </div>\r\n            {isShowLinhDetail=== true && \r\n            <div className='view-detail-doctor'>\r\n                <Link to={`/detail-doctor/${doctorId}`}><FormattedMessage id=\"homepage.more-info\"/></Link>\r\n               \r\n            </div>}\r\n\r\n            {isShowPrice===true &&\r\n            <div className='Price'>\r\n                                    <span><FormattedMessage id=\"patient.extra-infor-doctor.price\"/>:</span>\r\n                                    {dataProfile && dataProfile.Doctor_Infor && dataProfile.Doctor_Infor.priceTypeData && language=== languages.VI\r\n                                         &&\r\n                                        <NumericFormat\r\n                                        value={dataProfile.Doctor_Infor.priceTypeData.valueVi}\r\n                                        displayType={'text'}\r\n                                        thousandSeparator={true}\r\n                                        className='number-price'\r\n                                        suffix={'VND'}\r\n                                        />\r\n                                    }  \r\n\r\n                                    {dataProfile && dataProfile.Doctor_Infor && dataProfile.Doctor_Infor.priceTypeData && language=== languages.EN\r\n                                        &&\r\n                                        <NumericFormat\r\n                                        value={dataProfile.Doctor_Infor.priceTypeData.valueEn}\r\n                                        displayType={'text'}\r\n                                        thousandSeparator={true}\r\n                                        className='number-price'\r\n                                        suffix={'$'}\r\n                                        />\r\n                                    }   \r\n            </div>\r\n            }\r\n            </>\r\n        );\r\n    }\r\n    }\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language:state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileDoctor);\r\n","import React, { Component } from 'react';\r\nimport Flatpickr from 'react-flatpickr';\r\nimport moment from 'moment';\r\n\r\nimport { KeyCodeUtils } from \"../../utils\";\r\nimport './DatePicker.scss';\r\n\r\n// const CustomInput = ({ value, defaultValue, inputRef, onInputChange, onInputBlur, ...props }) => {\r\n//     return <input {...props} className='custom-form-control custom-date-input' defaultValue={defaultValue} ref={inputRef}\r\n//         onChange={onInputChange}\r\n//         onBlur={onInputBlur}\r\n//     />;\r\n// };\r\n\r\nclass DatePicker extends Component {\r\n\r\n    flatpickrNode = null;\r\n\r\n    nodeRef = element => {\r\n        this.flatpickr = element && element.flatpickr;\r\n        this.flatpickrNode = element && element.node;\r\n        if (this.flatpickrNode) {\r\n            this.flatpickrNode.addEventListener('blur', this.handleBlur);\r\n            this.flatpickrNode.addEventListener('keydown', this.handlerKeyDown);\r\n        }\r\n    };\r\n\r\n    handlerKeyDown = (event) => {\r\n        const keyCode = event.which || event.keyCode;\r\n        if (keyCode === KeyCodeUtils.ENTER) {\r\n            event.preventDefault();\r\n            const { onChange } = this.props;\r\n            const value = event.target.value;\r\n\r\n            // Take the blur event and process the string value\r\n            const valueMoment = moment(value, 'DD/MM/YYYY');\r\n            onChange([valueMoment.toDate(), valueMoment.toDate()]);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.flatpickrNode) {\r\n            this.flatpickrNode.removeEventListener('blur', this.handleBlur);\r\n            this.flatpickrNode.removeEventListener('keydown', this.handlerKeyDown);\r\n        }\r\n    }\r\n\r\n    handleBlur = (event) => {\r\n        const { onChange } = this.props;\r\n        const value = event.target.value;\r\n\r\n        // Take the blur event and process the string value\r\n        event.preventDefault();\r\n        const valueMoment = moment(value, 'DD/MM/YYYY');\r\n        onChange([valueMoment.toDate(), valueMoment.toDate()]);\r\n    };\r\n\r\n    onOpen = () => {\r\n        if (this.flatpickrNode) {\r\n            this.flatpickrNode.blur();\r\n        }\r\n    }\r\n\r\n    close() {\r\n        this.flatpickr.close();\r\n    }\r\n\r\n    checkDateValue = (str, max) => {\r\n        if (str.charAt(0) !== '0' || str === '00') {\r\n            var num = parseInt(str);\r\n            if (isNaN(num) || num <= 0 || num > max) num = 1;\r\n            str = num > parseInt(max.toString().charAt(0)) && num.toString().length === 1 ? '0' + num : num.toString();\r\n        };\r\n        return str;\r\n    }\r\n\r\n    // autoFormatonBlur = (value) => {\r\n    //     var input = value;\r\n    //     var values = input.split('/').map(function (v, i) {\r\n    //         return v.replace(/\\D/g, '')\r\n    //     });\r\n    //     var output = '';\r\n\r\n    //     if (values.length == 3) {\r\n    //         var year = values[2].length !== 4 ? parseInt(values[2]) + 2000 : parseInt(values[2]);\r\n    //         var month = parseInt(values[0]) - 1;\r\n    //         var day = parseInt(values[1]);\r\n    //         var d = new Date(year, month, day);\r\n    //         if (!isNaN(d)) {\r\n    //             //document.getElementById('result').innerText = d.toString();\r\n    //             var dates = [d.getMonth() + 1, d.getDate(), d.getFullYear()];\r\n    //             output = dates.map(function (v) {\r\n    //                 v = v.toString();\r\n    //                 return v.length == 1 ? '0' + v : v;\r\n    //             }).join(' / ');\r\n    //         };\r\n    //     };\r\n    //     // this.value = output;\r\n    //     return output;\r\n    // }\r\n\r\n    autoFormatOnChange = (value, seperator) => {\r\n        var input = value;\r\n\r\n        let regexForDeleting = new RegExp(`\\\\D\\\\${seperator}$`);\r\n\r\n        //if (/\\D\\/$/.test(input)) input = input.substr(0, input.length - 3); // dat.nt: Xóa thêm 1 ký tự nếu xóa dấu cách sau / (VD: 12 / 12 /=> 12 / 1)\r\n\r\n        if (regexForDeleting.test(input)) input = input.substr(0, input.length - 3);\r\n\r\n        var values = input.split(seperator).map(function (v) {\r\n            return v.replace(/\\D/g, '')\r\n        });\r\n\r\n        if (values[0]) values[0] = this.checkDateValue(values[0], 31);\r\n        if (values[1]) values[1] = this.checkDateValue(values[1], 12);\r\n        var output = values.map(function (v, i) {\r\n            return v.length === 2 && i < 2 ? v + ' ' + seperator + ' ' : v;\r\n        });\r\n        return output.join('').substr(0, 14);\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        if (this.DISPLAY_FORMAT === this.DATE_FORMAT_AUTO_FILL) {\r\n            let converted = this.autoFormatOnChange(e.target.value, this.SEPERATOR);\r\n            e.target.value = converted;\r\n        }\r\n    }\r\n\r\n    onInputBlur = (e) => {\r\n    }\r\n\r\n    //dat.nt : Auto Fill cho dạng ngăn cách và format cụ thể (seperator có thể dc thay thế)\r\n    SEPERATOR = \"/\";\r\n    DATE_FORMAT_AUTO_FILL = \"d/m/Y\"; // Format không thay đổi\r\n\r\n    // dat.nt : Format ngày hiển thị\r\n    DISPLAY_FORMAT = \"d/m/Y\";\r\n\r\n    render() {\r\n        const { value, onChange, minDate, onClose, ...otherProps } = this.props;\r\n        const options = {\r\n            dateFormat: this.DISPLAY_FORMAT,\r\n            allowInput: true,\r\n            disableMobile: true,\r\n            onClose: onClose,\r\n            onOpen: this.onOpen\r\n        };\r\n        if (minDate) {\r\n            options.minDate = minDate;\r\n        }\r\n        return (\r\n            <Flatpickr\r\n                ref={this.nodeRef}\r\n                value={value}\r\n                onChange={onChange}\r\n                options={options}\r\n                // render={\r\n                //     ({ defaultValue, value, ...props }, ref) => {\r\n                //         return <CustomInput defaultValue={defaultValue} inputRef={ref} onInputChange={this.onInputChange} onInputBlur={this.onInputBlur} />\r\n                //     }\r\n                // }\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default DatePicker;\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './BookingModal.scss';\r\nimport {  Modal } from 'reactstrap';\r\nimport ProfileDoctor from '../ProfileDoctor';\r\nimport DatePicker from '../../../../components/Input/DatePicker';\r\nimport _ from \"lodash\"\r\nimport * as actions from \"../../../../store/actions\"\r\nimport { languages } from '../../../../utils';\r\nimport Select from 'react-select';\r\nimport { postPatientBookAppoinment } from '../../../../services/userService';\r\nimport { toast } from 'react-toastify';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport moment from 'moment';\r\nimport { FadeLoader } from 'react-spinners';\r\n\r\nclass BookingModal extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            fullName:'',\r\n            phoneNumber:'',\r\n            email:'',\r\n            address:'',\r\n            reason:'',\r\n            birthday:'',\r\n            selectedGender:'',\r\n            doctorId:'',\r\n            genders:'',\r\n            timeType:'',\r\n            isLoading:false,\r\n            color:\"#272525\"\r\n        }\r\n    }\r\n    capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n   \r\n    componentDidMount(){\r\n        this.props.getGender()\r\n    }\r\n\r\n    buldDataGender=(data)=>{\r\n        let result= []\r\n        let language= this.props.language\r\n\r\n        if(data && data.length >0){\r\n            data.map(item => {\r\n                let object={}\r\n                object.label= language === languages.VI ? item.valueVi : item.valueEn\r\n                object.value=item.keyMap\r\n                result.push(object)\r\n            })\r\n        }\r\n        return result\r\n    }\r\n\r\n    async componentDidUpdate(prevProps,prevState,snapshot){\r\n        if(this.props.language !== prevProps.language){\r\n            this.setState({\r\n                genders:this.buldDataGender(this.props.genders)\r\n            })\r\n        }\r\n        if(this.props.genders !== prevProps.genders){\r\n            \r\n            this.setState({\r\n                genders:this.buldDataGender(this.props.genders)\r\n            })\r\n        }\r\n\r\n        if(this.props.dataTime !== prevProps.dataTime){\r\n            if(this.props.dataTime && !_.isEmpty(this.props.dataTime)){\r\n                let doctorId = this.props.dataTime.doctorId\r\n                let timeType= this.props.dataTime.timeType\r\n                this.setState({\r\n                    doctorId:doctorId,\r\n                    timeType:timeType\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOnchangeInput=(event,id)=>{\r\n        let valueInput= event.target.value\r\n        let stateCoppy= {...this.state}\r\n        stateCoppy[id]=valueInput\r\n        this.setState({\r\n            ...stateCoppy\r\n        })\r\n    }\r\n    \r\n    handleOnChangeDatePicker=(date)=>{\r\n        this.setState({\r\n            birthday:date[0]\r\n        })\r\n    }\r\n\r\n    handleChangeSelect=(selectedOption)=>{\r\n        this.setState({ selectedGender: selectedOption });\r\n    }\r\n\r\n    handleConfirmBooking= async()=>{\r\n        console.log(\"booking modal\", this.state);\r\n        this.setState({\r\n            isLoading:true\r\n        })\r\n        // !data.email || !data.timeType || !data.doctorId || !data.date\r\n        let date= new Date(this.state.birthday).getTime()\r\n        let timeString= this.buildTimeBooking(this.props.dataTime)\r\n        let doctorName=this.buidDoctorName(this.props.dataTime)\r\n        let res= await postPatientBookAppoinment({\r\n            fullName:this.state.fullName,\r\n            phoneNumber:this.state.phoneNumber,\r\n            email:this.state.email,\r\n            address:this.state.address,\r\n            reason:this.state.reason,\r\n            date:this.props.dataTime.date,\r\n            birthday:date,\r\n            selectedGender:this.state.selectedGender.value,\r\n            doctorId:this.state.doctorId,\r\n            timeType:this.state.timeType,\r\n            language: this.props.language,\r\n            timeString:timeString,\r\n            doctorName:doctorName,\r\n            \r\n        })\r\n        if(res && res.errCode===0){\r\n            toast.success(\"Booking a new apponment success!\")\r\n            this.setState({\r\n                isLoading:false\r\n            })\r\n            this.setState({\r\n                fullName:'',\r\n                phoneNumber:'',\r\n                email:'',\r\n                address:'',\r\n                reason:'',\r\n                birthday:'',\r\n                selectedGender:'',\r\n            })\r\n            this.props.closeBookingClose()\r\n        }else{\r\n            toast.error(\"Booking a new apponment error!\")\r\n            this.setState({\r\n                isLoading:false\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    buildTimeBooking=(dataTime)=>{\r\n        let language= this.props.language\r\n        if(dataTime && !_.isEmpty(dataTime)){\r\n            let time= language=== languages.VI ? dataTime.timeTypeData.valueVi : dataTime.timeTypeData.valueEn\r\n\r\n            let date=  language===languages.VI ?\r\n             moment.unix(+dataTime.date / 1000).format('dddd - DD/MM/YYYY')\r\n             : \r\n             moment.unix(+dataTime.date / 1000).locale('en').format('ddd - DD/MM/YYYY')\r\n\r\n             return `${time} - ${date}`\r\n            \r\n        }\r\n        return ''\r\n    }\r\n\r\n    buidDoctorName=(dataTime)=>{\r\n        let language= this.props.language\r\n        if(dataTime && !_.isEmpty(dataTime)){\r\n            let name=language===languages.VI ?\r\n            `${dataTime.doctorData.lastName} ${dataTime.doctorData.firstName}`\r\n            :\r\n            `${dataTime.doctorData.firstName} ${dataTime.doctorData.lastName}`\r\n             return name\r\n        }\r\n        return ''\r\n    }\r\n\r\n    render() {\r\n\r\n        let isOpenModal= this.props.isOpenModal\r\n        let closeBookingClose= this.props.closeBookingClose\r\n        let dataTime=this.props.dataTime\r\n        let doctorId=''\r\n        if(dataTime && !_.isEmpty(dataTime)){\r\n            doctorId=dataTime.doctorId\r\n        }\r\n        \r\n        console.log(\"data state modal\",dataTime);\r\n        return (\r\n            <>\r\n            \r\n             <Modal \r\n             isOpen={isOpenModal} \r\n            className={\"booking-modal-container\"}\r\n            size=\"lg\"\r\n            centered\r\n            >   \r\n                <div className='booking-modal-content'>\r\n                    <div className='booking-modal-header'>\r\n                        <span className='left'><FormattedMessage id=\"patient.booking-modal.title\"/></span>\r\n                        <span className='right'\r\n                            onClick={closeBookingClose}\r\n                        >\r\n                            <i className=\"fas fa-times\"></i>\r\n                        </span>\r\n                    </div>\r\n                    <div className='booking-modal-body'>\r\n                        {/* {JSON.stringify(dataTime)} */}\r\n                        <div className='doctor-in4'>\r\n                        <div className='doctor-infor'>\r\n                            <ProfileDoctor\r\n                                doctorId={doctorId}\r\n                                isShowDescriptionDoctor={false}\r\n                                dataTime={dataTime}\r\n                                isShowLinhDetail={false}\r\n                                isShowPrice={true}\r\n                            />\r\n                            \r\n                        </div>\r\n                        <FadeLoader\r\n                            color={this.state.color}\r\n                            loading={this.state.isLoading}\r\n                            size={150}\r\n                            aria-label=\"Loading Spinner\"\r\n                            data-testid=\"loader\"\r\n                            className='loading-siner-x'\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='row'>\r\n                            <div className='col-6 form-group'>\r\n                                <label><FormattedMessage id=\"patient.booking-modal.FullName\"/></label>\r\n                                <input className='form-control'\r\n                                    value={this.state.fullName}\r\n                                    onChange={(event)=>this.handleOnchangeInput(event,'fullName')}\r\n                                ></input>\r\n                            </div>\r\n                            <div className='col-6 form-group'>\r\n                                <label><FormattedMessage id=\"patient.booking-modal.phoneNumber\"/></label>\r\n                                <input className='form-control'\r\n                                    value={this.state.phoneNumber}\r\n                                    onChange={(event)=>this.handleOnchangeInput(event,'phoneNumber')}\r\n                                ></input>\r\n                            </div>\r\n                            <div className='col-6 form-group mt-1'>\r\n                                <label><FormattedMessage id=\"patient.booking-modal.email\"/></label>\r\n                                <input className='form-control'\r\n                                    value={this.state.email}\r\n                                    onChange={(event)=>this.handleOnchangeInput(event,'email')}\r\n                                ></input>\r\n                            </div>\r\n                            <div className='col-6 form-group mt-1'>\r\n                                <label><FormattedMessage id=\"patient.booking-modal.address\"/></label>\r\n                                <input className='form-control'\r\n                                    value={this.state.address}\r\n                                    onChange={(event)=>this.handleOnchangeInput(event,'address')}\r\n                                ></input>\r\n                            </div>\r\n                            \r\n                            <div className='col-12 form-group mt-1'>\r\n                                <label><FormattedMessage id=\"patient.booking-modal.reason\"/></label>\r\n                                <input className='form-control mt-1'\r\n                                    value={this.state.reason}\r\n                                    onChange={(event)=>this.handleOnchangeInput(event,'reason')}\r\n                                ></input>\r\n                            </div>\r\n                            <div className='col-6 form-group mt-1'>\r\n                                <label><FormattedMessage id=\"patient.booking-modal.birthday\"/></label>\r\n                                <DatePicker\r\n                                onChange={this.handleOnChangeDatePicker}\r\n                                className=\"form-control\"\r\n                                value={this.state.birthday} \r\n                            />\r\n                            </div>\r\n                            <div className='col-6 form-group mt-1'>\r\n                                <label><FormattedMessage id=\"patient.booking-modal.gender\"/></label>\r\n                                <Select\r\n                                value={this.state.selectedGender}\r\n                                onChange={this.handleChangeSelect}\r\n                                options={this.state.genders}\r\n                                placeholder={''}\r\n                            />\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className='booking-modal-footer'>\r\n                        <button className='btn-booking-confirm'\r\n                            onClick={()=>this.handleConfirmBooking()}\r\n                        >\r\n                            <FormattedMessage id=\"patient.booking-modal.btnConfirm\"/>\r\n                        </button>\r\n                        <button className='btn-booking-cancel'\r\n                                onClick={closeBookingClose}\r\n                        >\r\n                            <FormattedMessage id=\"patient.booking-modal.cancel\"/>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                \r\n            </Modal>\r\n            \r\n           </>\r\n        );\r\n    }\r\n    }\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language:state.app.language,\r\n        genders:state.admin.genders,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getGender: ()=> dispatch(actions.fetchGenderStart())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookingModal);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './DoctorSchedule.scss';\r\nimport {languages} from \"../../../utils\"\r\nimport localization from \"moment/locale/vi\"\r\nimport moment from 'moment';\r\nimport BookingModal from './Modal/BookingModal';\r\nimport { getScheduleDoctorByDate } from '../../../services/userService';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\n\r\nclass DoctorSchedule extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            allDays:[],\r\n            allAvalabelTime:[],\r\n            isOpenModalBooking:false,\r\n            dataScheduleTimeModal:{}\r\n        }\r\n    }\r\n    capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    getArrDays=(language)=>{\r\n        let allDays=[]\r\n        for( let i=0; i<7;i++){\r\n            let object={}\r\n    \r\n            if(language=== languages.VI){\r\n                if(i===0){\r\n                    let ddMM=moment(new Date()).format('DD/MM')\r\n                    let today=`Hôm nay - ${ddMM}` \r\n                    object.label=today\r\n                }else{\r\n                    let labelVi=moment(new Date()).add(i, 'days').format('dddd - DD/MM')\r\n                    object.label= this.capitalizeFirstLetter(labelVi)\r\n                }\r\n                \r\n            }else{\r\n                if(i===0){\r\n                    let ddMM=moment(new Date()).format('DD/MM')\r\n                    let today=`Today - ${ddMM}` \r\n                    object.label=today\r\n                }else{\r\n                    object.label= moment(new Date()).add(i, 'days').locale('en').format('ddd - DD/MM')\r\n                }\r\n                \r\n            }\r\n           \r\n            object.value= moment(new Date()).add(i, 'days').startOf('day').valueOf()\r\n            allDays.push(object)\r\n           }\r\n        return allDays\r\n        \r\n    }\r\n    \r\n    async componentDidMount(){\r\n\r\n        let allDays= this.getArrDays(this.props.language)\r\n        if(this.props.doctorIdFromParent){\r\n            let res= await getScheduleDoctorByDate(this.props.doctorIdFromParent,allDays[0].value)\r\n            this.setState({\r\n                allAvalabelTime:res.data ? res.data : []\r\n            })\r\n        }\r\n        \r\n       \r\n\r\n        this.setState({\r\n            allDays:allDays, \r\n       })\r\n\r\n    }\r\n\r\n    async componentDidUpdate(prevProps,prevState,snapshot){\r\n        if(this.props.language !==prevProps.language){\r\n            let allDays= this.getArrDays(this.props.language)\r\n            this.setState({\r\n                allDays:allDays\r\n            })\r\n        }\r\n        \r\n       if(this.props.doctorIdFromParent !== prevProps.doctorIdFromParent){\r\n        let allDays= this.getArrDays(this.props.language)\r\n        let res= await getScheduleDoctorByDate(this.props.doctorIdFromParent,allDays[0].value)\r\n        this.setState({\r\n            allAvalabelTime:res.data ? res.data : []\r\n            })\r\n              \r\n        }\r\n    }\r\n\r\n    handleOnChangeSelect=async(event)=>{\r\n       \r\n        if(this.props.doctorIdFromParent && this.props.doctorIdFromParent !== -1){\r\n            let doctorId=this.props.doctorIdFromParent  \r\n            let date=event.target.value\r\n            let res= await getScheduleDoctorByDate(doctorId,date)\r\n\r\n            let allTime=[]\r\n            if(res && res.errCode===0){\r\n                let data=res.data\r\n\r\n                this.setState({\r\n                    allAvalabelTime:res.data ? res.data : []\r\n                })\r\n            }\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    handleCLickScheduleTime=(time)=>{\r\n        this.setState({\r\n            isOpenModalBooking:true,\r\n            dataScheduleTimeModal:time\r\n        })\r\n    }\r\n\r\n    closeBookingClose=()=>{\r\n        this.setState({\r\n            isOpenModalBooking:false,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let allDays= this.state.allDays\r\n        let allAvalabelTime= this.state.allAvalabelTime\r\n        let language= this.props.language\r\n        let isOpenModalBooking= this.state.isOpenModalBooking\r\n        let dataScheduleTimeModal= this.state.dataScheduleTimeModal\r\n        return (\r\n            <>\r\n            <div className='doctor-schedule-container'>\r\n                <div className='all-schedule'>\r\n                    <select onChange={(event)=> this.handleOnChangeSelect(event)}>\r\n                        {allDays && allDays.length>0 &&\r\n                        allDays.map((item,index)=>{\r\n                            return(\r\n                                <option \r\n                                    value={item.value} \r\n                                    key={index}\r\n                                >\r\n                                    {item.label}\r\n                                </option>\r\n                            )\r\n                        })\r\n\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div className='all-available-time'>\r\n                        <div className='text-calender'>\r\n                            <i className=\"fas fa-calendar-alt\"><span><FormattedMessage id=\"patient.detail-doctor.schedule\"/></span></i>\r\n                        </div>\r\n                        <div className='time-content'>\r\n                            {allAvalabelTime && allAvalabelTime.length>0 ?\r\n                            <React.Fragment>\r\n                            <div className='time-content-btn'>\r\n                            {allAvalabelTime.map((item,index)=>{\r\n                                let timeDisplay= language===languages.VI ? item.timeTypeData.valueVi : item.timeTypeData.valueEn\r\n                                return(\r\n                                    <button \r\n                                        key={index}\r\n                                        onClick={()=>this.handleCLickScheduleTime(item)}\r\n                                    >\r\n                                        {timeDisplay}\r\n                                    </button>\r\n                                )\r\n                            })\r\n                            }\r\n                            </div>\r\n\r\n                            <div className='book-free'>\r\n                                <span>\r\n                                    <FormattedMessage id=\"patient.detail-doctor.choose\"/>\r\n                                    <i className=\"far fa-hand-point-up\"></i> \r\n                                    <FormattedMessage id=\"patient.detail-doctor.book\"/>\r\n                                </span>\r\n                            </div>\r\n                            </React.Fragment>\r\n                            :\r\n                            <div className='no-schedule'>\r\n                                <FormattedMessage id=\"patient.detail-doctor.no-schedule\"/>\r\n                            </div>\r\n                            }\r\n                        </div>\r\n                </div>\r\n            </div>\r\n            <BookingModal \r\n                isOpenModal={isOpenModalBooking} \r\n                closeBookingClose={this.closeBookingClose} \r\n                dataTime={dataScheduleTimeModal}  \r\n            />\r\n            </>\r\n        );\r\n    }\r\n    }\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language:state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorSchedule);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './DoctorExtraInfor.scss';\r\nimport {languages} from \"../../../utils\"\r\n\r\nimport { getExtraInforDoctorById } from '../../../services/userService';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport NumericFormat from 'react-number-format';\r\n\r\nclass DoctorExtraInfor extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n           isShowDetailInfor:false,\r\n           extraInfor:{}\r\n        }\r\n    }\r\n    capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n   \r\n    async componentDidMount(){\r\n        if(this.props.doctorIdFromParent){\r\n            let res= await getExtraInforDoctorById(this.props.doctorIdFromParent)\r\n            if(res && res.errCode===0){\r\n                this.setState({\r\n                    extraInfor:res.data\r\n                })\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    async componentDidUpdate(prevProps,prevState,snapshot){\r\n        if(this.props.language !== prevProps.language){\r\n\r\n        }\r\n\r\n        if(this.props.doctorIdFromParent !== prevProps.doctorIdFromParent){\r\n            let res= await getExtraInforDoctorById(this.props.doctorIdFromParent)\r\n            if(res && res.errCode===0){\r\n                this.setState({\r\n                    extraInfor:res.data\r\n                })\r\n            }\r\n            \r\n                  \r\n        }\r\n    }\r\n\r\n    showHideDetailInfo=(status)=>{\r\n        this.setState({\r\n            isShowDetailInfor:status\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        let isShowDetailInfor=this.state.isShowDetailInfor\r\n        let extraInfor= this.state.extraInfor\r\n        let language= this.props.language\r\n        console.log(\"check state\", this.state);\r\n        return (\r\n            \r\n            <div className='doctor-extra-info-container'>\r\n                <div className='content-up'>\r\n                    <div className='text-address'>\r\n                        <FormattedMessage id=\"patient.extra-infor-doctor.text-address\"/>\r\n                    </div>\r\n                        <div className='name-clinic'>\r\n                    {extraInfor && extraInfor.nameClinic ? extraInfor.nameClinic :''}\r\n                    </div>\r\n                    <div className='detail-address'>\r\n                        {extraInfor && extraInfor.addressClinic ? extraInfor.addressClinic :''} \r\n                    </div>\r\n                </div>\r\n                <div className='content-down'>\r\n                    {isShowDetailInfor === false &&\r\n                        <div className='short-infor'>\r\n                            <FormattedMessage id=\"patient.extra-infor-doctor.price\"/>:\r\n                            {extraInfor && extraInfor.priceTypeData && language=== languages.VI\r\n                                &&\r\n                                <NumericFormat\r\n                                    className='currency'\r\n                                    value={extraInfor.priceTypeData.valueVi}\r\n                                    displayType={'text'}\r\n                                    thousandSeparator={true}\r\n                                    suffix={'VND'}\r\n                                />\r\n                            }  \r\n\r\n                            {extraInfor && extraInfor.priceTypeData && language=== languages.EN\r\n                                &&\r\n                                <NumericFormat\r\n                                    className='currency'\r\n                                    value={extraInfor.priceTypeData.valueEn}\r\n                                    displayType={'text'}\r\n                                    thousandSeparator={true}\r\n                                    suffix={'$'}\r\n                                />\r\n                            }   \r\n\r\n                            <span className='seen-detail' onClick={()=> this.showHideDetailInfo(true)}> \r\n                                <FormattedMessage id=\"patient.extra-infor-doctor.see-dentail\"/>\r\n                            </span>\r\n                        </div>\r\n                    }\r\n                    {isShowDetailInfor === true &&\r\n                        <React.Fragment>\r\n                            <div className='title-price'>\r\n                                <FormattedMessage id=\"patient.extra-infor-doctor.price\"/>\r\n                            </div>\r\n                            <div className='detail-infor'>\r\n                                <div className='price'>\r\n                                    <span className='left'>\r\n                                        <FormattedMessage id=\"patient.extra-infor-doctor.price\"/>:\r\n                                    </span>\r\n                                    <span className='right'>\r\n                                    {extraInfor && extraInfor.priceTypeData && language=== languages.VI\r\n                                         &&\r\n                                        <NumericFormat\r\n                                        value={extraInfor.priceTypeData.valueVi}\r\n                                        displayType={'text'}\r\n                                        thousandSeparator={true}\r\n                                        suffix={'VND'}\r\n                                        />\r\n                                    }  \r\n\r\n                                    {extraInfor && extraInfor.priceTypeData && language=== languages.EN\r\n                                        &&\r\n                                        <NumericFormat\r\n                                        value={extraInfor.priceTypeData.valueEn}\r\n                                        displayType={'text'}\r\n                                        thousandSeparator={true}\r\n                                        suffix={'$'}\r\n                                        />\r\n                                    }   \r\n                                    </span>\r\n                                </div>\r\n                                <div className='note'>\r\n                                    {extraInfor && extraInfor.note ? extraInfor.note :''} \r\n                                </div>\r\n                                </div>\r\n                            <div className='payment'>\r\n                                <FormattedMessage id=\"patient.extra-infor-doctor.payment\"/>    \r\n                                    {extraInfor && extraInfor.paymentTypeData && language===languages.VI\r\n                                        ? extraInfor.paymentTypeData.valueVi : \"\"\r\n                                    } \r\n                                    {extraInfor && extraInfor.paymentTypeData && language===languages.EN\r\n                                        ? extraInfor.paymentTypeData.valueEn : \"\"\r\n                                    } \r\n                            </div>\r\n                            <div className='hide-price'>\r\n                                <span onClick={()=> this.showHideDetailInfo(false)}> \r\n                                <FormattedMessage id=\"patient.extra-infor-doctor.hide\"/>\r\n                                </span>\r\n                            </div>\r\n                           \r\n                        </React.Fragment>\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    }\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language:state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorExtraInfor);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { languages } from '../../../utils';\r\n\r\n\r\nclass Comment extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n          \r\n        }\r\n    }\r\n    initFacebookSDK() {\r\n        if (window.FB) {\r\n            window.FB.XFBML.parse();\r\n        }\r\n\r\n        let language=this.props.language\r\n        let locale = language === languages.EN ?  'en_US': 'vi_VN'\r\n        \r\n        window.fbAsyncInit = function () {\r\n            window.FB.init({\r\n                appId: process.env.REACT_APP_FACEBOOK_APP_ID,\r\n                cookie: true,  // enable cookies to allow the server to access\r\n                // the session\r\n                xfbml: true,  // parse social plugins on this page\r\n                version: 'v2.5' // use version 2.1\r\n            });\r\n        };\r\n        // Load the SDK asynchronously\r\n        (function (d, s, id) {\r\n            var js, fjs = d.getElementsByTagName(s)[0];\r\n            if (d.getElementById(id)) return;\r\n            js = d.createElement(s); js.id = id;\r\n            js.src = `https://connect.facebook.net/${locale}/sdk.js`;\r\n            fjs.parentNode.insertBefore(js, fjs);\r\n        }(document, 'script', 'facebook-jssdk'));\r\n\r\n        console.log(\"local\", locale);\r\n    }\r\n   \r\n     componentDidMount(){\r\n         this.initFacebookSDK()\r\n\r\n    }\r\n\r\n   componentDidUpdate(prevProps,prevState,snapshot){\r\n        if(this.props.language !== prevProps.language){\r\n          \r\n             this.initFacebookSDK()\r\n        }\r\n    }\r\n\r\n    \r\n\r\n\r\n    render() {\r\n        let { width, dataHref, numPost}=this.props\r\n        return (\r\n            \r\n           <>\r\n            <div className='fb-comments'\r\n                data-href={dataHref}\r\n                data-width={width ? width : \"\"}\r\n                data-numposts={numPost ? numPost : 5}\r\n            ></div>\r\n           \r\n           </>\r\n        );\r\n    }\r\n    }\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language:state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport HomeHeader from '../../HomePage/HomeHeader';\r\nimport './DetailDoctor.scss';\r\nimport {getDetailInfoDoctor} from \"../../../services/userService\"\r\nimport {languages} from \"../../../utils\"\r\nimport DoctorSchedule from './DoctorSchedule';\r\nimport DoctorExtraInfor from './DoctorExtraInfor';\r\nimport Comment from '../SocailPlugin/Comment';\r\nimport LikeAndShare from '../SocailPlugin/LikeAndShare';\r\n\r\n\r\n\r\nclass DetailDoctor extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            detailDoctor:{},\r\n            currentDoctorId:-1  \r\n        }\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        if(this.props.match && this.props.match.params && this.props.match.params.id){\r\n            let id=this.props.match.params.id\r\n            this.setState({\r\n                currentDoctorId:id\r\n            })\r\n\r\n            let res=await getDetailInfoDoctor(id)\r\n            if(res && res.errCode === 0){\r\n                this.setState({\r\n                    detailDoctor: res.data\r\n                })\r\n            }\r\n            \r\n\r\n            // imageBase64=new Buffer(user.image, 'base64').toString('binary')\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps,prevState,snapshot){\r\n       \r\n    }\r\n\r\n    render() {\r\n     \r\n        let language= this.props.language\r\n        let {detailDoctor}= this.state\r\n        let nameVi=''\r\n        let nameEn=''\r\n        if(detailDoctor && detailDoctor.positionData){\r\n             nameVi=`${detailDoctor.positionData.valueVi}, ${detailDoctor.lastName} ${detailDoctor.firstName}`\r\n             nameEn=`${detailDoctor.positionData.valueEn}, ${detailDoctor.lastName} ${detailDoctor.firstName}`\r\n        }\r\n        let currentURL= +process.env.REACT_APP_IS_LOCALHOST=== 1 ? \"https://bookingcare.vn/\" : window.location.href\r\n        console.log(\"check curentURL\", window.location.href);\r\n        return (\r\n           <React.Fragment>\r\n                <HomeHeader isshowBanner={false}/>\r\n                <div className='doctor-detail-container'>\r\n                    <div className='intro-doctor'>\r\n                        <div className='content-left'\r\n                            style={{backgroundImage:`url(${detailDoctor && detailDoctor.image ? detailDoctor.image : \"\"})`}}\r\n                        >\r\n\r\n                        </div>\r\n                        <div className='content-right'>\r\n                            <div className='up'>\r\n                                {language === languages.VI? nameVi :nameEn}\r\n                            </div>\r\n                            <div className='down'>\r\n                                {detailDoctor && detailDoctor.Markdown && detailDoctor.Markdown.description\r\n                                    &&<span>\r\n                                        {\r\n                                            detailDoctor.Markdown.description\r\n                                        }\r\n                                    </span>\r\n                                }\r\n                               <div className='like-share-plugin' > \r\n                                    <LikeAndShare\r\n                                        dataHref={currentURL}\r\n                                    >\r\n\r\n                                    </LikeAndShare>\r\n                               </div>\r\n                               \r\n                            </div>\r\n                              \r\n                        </div>\r\n                    </div>\r\n                    <div className='schedule-doctor'>\r\n                                <div className='content-left'>\r\n                                    <DoctorSchedule\r\n                                        doctorIdFromParent={this.state.currentDoctorId}\r\n                                    />\r\n                                </div>\r\n                                <div className='content-right'>\r\n                                    <DoctorExtraInfor\r\n                                        doctorIdFromParent={this.state.currentDoctorId}\r\n                                    />\r\n                                </div>\r\n                    </div>\r\n                    <div className='detail-infor-doctor'>\r\n                                {detailDoctor && detailDoctor.Markdown && detailDoctor.Markdown.contentHTML\r\n                                    &&<div dangerouslySetInnerHTML={{__html: detailDoctor.Markdown.contentHTML}}>\r\n                            \r\n                                    </div>\r\n                                }\r\n                    </div>\r\n                    <div className='comment-doctor'>\r\n                                <Comment\r\n                                    dataHref={currentURL}\r\n                                    width={\"100%\"}\r\n                                >\r\n\r\n                                </Comment>\r\n                    </div>\r\n                </div>\r\n           </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language:state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailDoctor);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport {  FormattedMessage } from 'react-intl';\r\nimport \"./ManageSchedule.scss\"\r\nimport Select from 'react-select';\r\nimport * as actions from \"../../../store/actions\";\r\nimport {CRUD_ACTIONS, languages,dateFormat} from \"../../../utils\"\r\nimport DatePicker from '../../../components/Input/DatePicker';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport _ from 'lodash';\r\nimport { saveBulkScheduleDoctor } from '../../../services/userService';\r\n\r\nclass ManageSchedule extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            listDoctors:[],\r\n            selectedDoctor:{},\r\n            currentDate:'',\r\n            rangeTime:[],\r\n           \r\n        }\r\n    }\r\n    componentDidMount(){\r\n       this.props.fetchAllDoctors()\r\n       this.props.fetchAllScheduleTime()\r\n    }\r\n\r\n    componentDidUpdate(prevProps,prevState,snapshot){\r\n        if(prevProps.allDoctors !== this.props.allDoctors){\r\n            let dataSelected= this.buildDataInputSelect(this.props.allDoctors)\r\n            this.setState({\r\n                listDoctors: dataSelected\r\n            })\r\n        }\r\n        if(prevProps.allScheduletime !== this.props.allScheduletime){\r\n            let data=this.props.allScheduletime\r\n            if(data && data.length>0){\r\n                data=data.map(item=>{\r\n                    item.isSelected = false;\r\n                    return item\r\n\r\n                })\r\n            }\r\n            this.setState({\r\n                rangeTime: data\r\n            })\r\n        }\r\n        // if(prevProps.language !== this.props.language){\r\n        //     let dataSelected= this.buildDataInputSelect(this.props.allDoctors)\r\n        //     this.setState({\r\n        //         listDoctors: dataSelected\r\n        //     })\r\n        // }\r\n    }\r\n\r\n    buildDataInputSelect=(inputData)=>{\r\n        let result=[]\r\n        let language=this.props.language\r\n        if(inputData && inputData.length>0){\r\n            inputData.map((item,index)=>{\r\n                let object={}\r\n                let labelVi= `${item.lastName} ${item.firstName}`\r\n                let labelEn= `${item.firstName} ${item.lastName} `\r\n\r\n                object.label=language ===languages.VI ? labelVi : labelEn\r\n                object.value=item.id\r\n                result.push(object)\r\n            })\r\n        }\r\n        return result\r\n    }\r\n\r\n    handleChangeSelect = async(selectedOption) => {\r\n        this.setState({ selectedDoctor: selectedOption });\r\n        \r\n    };\r\n\r\n\r\n    handleOnChangeDatePicker=(date)=>{\r\n        this.setState({\r\n            currentDate:date[0]\r\n        })\r\n    }\r\n\r\n    handleClickBtnTime=(time)=>{\r\n        let rangeTime= this.state.rangeTime\r\n        if(rangeTime && rangeTime.length>0){\r\n            rangeTime=rangeTime.map(item=>{\r\n                if(item.id=== time.id) item.isSelected=!item.isSelected;\r\n                return item\r\n            })\r\n            this.setState({\r\n                rangeTime:rangeTime\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSaveSchedule=async()=>{\r\n        let {rangeTime,selectedDoctor,currentDate}= this.state\r\n        let result=[]\r\n        if(!currentDate){\r\n            toast.error(\"Ivalid date!\");\r\n            return\r\n        }\r\n        if(selectedDoctor && _.isEmpty(selectedDoctor)){\r\n            toast.error(\"Ivalid selected Doctor!\");\r\n            return\r\n        }\r\n        // let FomatedDate=moment(currentDate).format(dateFormat.SEND_TO_SERVER)\r\n        // let FomatedDate=moment(currentDate).unix()\r\n        let FomatedDate=new Date(currentDate).getTime()\r\n\r\n        if(rangeTime && rangeTime.length>0){\r\n            let selectedTime=rangeTime.filter(item =>item.isSelected==true)\r\n            if(selectedTime && selectedTime.length>0){\r\n                selectedTime.map((schedule,index) => {\r\n                    let object={}\r\n                    object.doctorId=selectedDoctor.value\r\n                    object.date=FomatedDate\r\n                    object.timeType=schedule.keyMap\r\n                    result.push(object)\r\n                })\r\n            }else{\r\n                toast.error(\"Ivalid selected Time!\");\r\n                return\r\n            }\r\n        }\r\n\r\n        let res= await saveBulkScheduleDoctor({\r\n            arrSchedule: result,\r\n            doctorId:selectedDoctor.value,\r\n            FomatedDate:FomatedDate\r\n        })\r\n\r\n        if(res && res.errCode===0){\r\n            toast.success(\"Success save Info!\");\r\n        }else{\r\n            toast.error(\"Error save Bulk Schedule Doctor!\");\r\n        }\r\n        console.log((result));\r\n    }\r\n\r\n    render() {\r\n        console.log(\"check \", this.state.rangeTime);\r\n        let rangeTime= this.state.rangeTime\r\n        let language=this.props.language\r\n        let yesterday = new Date(new Date().setDate(new Date().getDate()-1));\r\n        return (\r\n           <div className='manage-schedule-container'>\r\n                <div className='m-s-title'>\r\n                    <FormattedMessage id=\"manage-schedule.title\"/>\r\n                </div>\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        <div className='col-6 form-group'>\r\n                            <label><FormattedMessage id=\"manage-schedule.choose-doctor\"/></label>\r\n                            <Select\r\n                                value={this.state.selectedDoctor}\r\n                                onChange={this.handleChangeSelect}\r\n                                options={this.state.listDoctors}\r\n                               \r\n                            />\r\n                        </div>\r\n                        <div className='col-6 form-group'>\r\n                            <label><FormattedMessage id=\"manage-schedule.choose-date\"/></label>\r\n                            <DatePicker\r\n                                onChange={this.handleOnChangeDatePicker}\r\n                                className=\"form-control\"\r\n                                value={this.state.currentDate}\r\n                                minDate={yesterday}\r\n                                \r\n                            />\r\n                        </div>\r\n                        <div className='col-12 pick-hour-container'>\r\n                            {rangeTime && rangeTime.length>0 &&\r\n                            rangeTime.map((item,index)=>{\r\n                                return(\r\n                                    <div \r\n                                        className={item.isSelected === true ? 'btn btn-schedule active' : 'btn btn-schedule hover' }\r\n                                        key={index} \r\n                                        onClick={()=>  this.handleClickBtnTime(item)}\r\n                                    >\r\n                                        {language === languages.VI ? item.valueVi  : item.valueEn}\r\n                                        \r\n                                    </div>\r\n                                )\r\n                            })\r\n\r\n\r\n                            }\r\n                        </div>\r\n                        <div className='col-12'>\r\n                            <button className='btn btn-primary '\r\n                                onClick={()=>this.handleSaveSchedule()}\r\n                            >\r\n                                <FormattedMessage id=\"manage-schedule.save\"/>\r\n                            </button>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n           </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language:state.app.language,\r\n        allDoctors:state.admin.allDoctors,\r\n        allScheduletime:state.admin.allScheduletime,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchAllDoctors:()=> dispatch(actions.fetchAllDoctors()),\r\n        fetchAllScheduleTime: ()=>dispatch(actions.fetchAllScheduleTime())\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageSchedule);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './RemedyModal.scss';\r\nimport {  Modal , ModalHeader,ModalBody,ModalFooter, Button } from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport moment from 'moment';\r\nimport {languages,CRUD_ACTIONS , CommonUtils} from \"../../../utils\"\r\nimport * as actions from \"../../../store/actions\"\r\n\r\n\r\n\r\nclass RemedyModal extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            email:'',\r\n            imgBase64:''\r\n        }\r\n    }\r\n    capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n   \r\n    componentDidMount(){\r\n      if(this.props.dataModal){\r\n        this.setState({\r\n            email:this.props.dataModal.email\r\n        })\r\n      }\r\n    }\r\n\r\n    componentDidUpdate(prevProps,prevState,snapshot){\r\n        if(prevProps.dataModal !== this.props.dataModal){\r\n            this.setState({\r\n                email:this.props.dataModal\r\n            })\r\n        }\r\n    }\r\n   \r\n    handleOnChangeEmail=(event)=>{\r\n        this.setState({\r\n            email:event.target.value\r\n        })\r\n    }\r\n    handleChangeImg= async(event)=>{\r\n        let data= event.target.files\r\n        let file= data[0];\r\n        if(file){\r\n            let base64=await CommonUtils.getBase64(file)\r\n            this.setState({\r\n                imgBase64:base64\r\n                \r\n            })\r\n        }         \r\n    }\r\n\r\n    handleSendRemedy=async()=>{\r\n        await this.props.sendRemedy(this.state)\r\n    //    this.props.DeleteUserRedux(id.email.patientId)\r\n        console.log(\"state send\", this.state)\r\n    }\r\n\r\n    render() {\r\n\r\n        let isOpenModal= this.props.isOpenModal\r\n        let closeRemedyModal= this.props.closeRemedyModal\r\n        let dataModal=this.props.dataModal\r\n        let sendRemedy= this.props.sendRemedy\r\n        console.log(\"set sate send:\", this.props);\r\n       \r\n        return (\r\n            \r\n             <Modal \r\n             isOpen={isOpenModal} \r\n            className={\"booking-modal-container\"}\r\n            size=\"lg\"\r\n            centered\r\n            >   \r\n                <div className='modal-header'>\r\n                    <h5 className='modal-title'><FormattedMessage id=\"doctor.send-bill\"/></h5>\r\n                    <button type='button' className='close' aria-label='Close' onClick={closeRemedyModal}>\r\n                        <span aria-hidden=\"true\" >x</span>\r\n                    </button>\r\n                </div>\r\n                <ModalBody>\r\n                    <div className='row'>\r\n                        <div className='col-6 form-group'>\r\n                            \r\n                                <label><FormattedMessage id=\"doctor.email\"/></label>\r\n                                <input \r\n                                    className='form-control' \r\n                                    type='email' \r\n                                    value={dataModal.email}\r\n                                    onChange={(event)=>this.handleOnChangeEmail(event)}\r\n                                    ></input>\r\n                           \r\n                        </div>\r\n                        <div className='col-6 form-group'>\r\n                            <label><FormattedMessage id=\"doctor.file\"/></label>\r\n                            <input \r\n                                className='col-12 form-control-file' \r\n                                type='file' \r\n                                onChange={(event)=>this.handleChangeImg(event)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color='primary' className='btn-send' onClick={()=>this.handleSendRemedy()}><FormattedMessage id=\"doctor.send\"/></Button>\r\n                    <Button color='secondary' className='btn-send' onClick={closeRemedyModal}><FormattedMessage id=\"doctor.cancel\"/></Button>\r\n                </ModalFooter>\r\n\r\n            </Modal>\r\n           \r\n        );\r\n    }\r\n    }\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language:state.app.language,\r\n       \r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        DeleteUserRedux:(id)=> dispatch(actions.DeleteUserStart(id))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RemedyModal);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './ManagePatient.scss';\r\nimport DatePicker from '../../../components/Input/DatePicker';\r\nimport { getListPatientForDoctor , postSendRemedy} from '../../../services/userService';\r\nimport moment  from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport { languages } from '../../../utils';\r\nimport RemedyModal from './RemedyModal';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { FadeLoader } from 'react-spinners';\r\nimport * as actions from \"../../../store/actions\"\r\n\r\n\r\n\r\nclass ManagePatient extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            currentDate:moment(new Date()).startOf('day').valueOf(),\r\n            dataPatient:[],\r\n            isOpenRemedyModal:false,\r\n            dataModal:{},\r\n            isLoading:false,\r\n            color:\"#272525\"\r\n        }\r\n    }\r\n    capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n   \r\n    async componentDidMount(){\r\n        \r\n        this.getDataPatient()\r\n        \r\n    }\r\n\r\n    getDataPatient=async()=>{\r\n        let user= this.props.user\r\n        let currentDate= this.state.currentDate\r\n        let formatedDate=new Date(currentDate).getTime()\r\n        let res=await getListPatientForDoctor({\r\n            doctorId:user.id,\r\n            date:formatedDate\r\n        })\r\n        if(res && res.errCode===0){\r\n            this.setState({\r\n                dataPatient:res.data\r\n            })\r\n        }\r\n    }\r\n\r\n    async componentDidUpdate(prevProps,prevState,snapshot){\r\n        if(this.props.language !== prevProps.language){\r\n\r\n         \r\n        }\r\n    }\r\n\r\n    handleOnChangeDatePicker=(date)=>{\r\n        this.setState({\r\n            currentDate:date[0]\r\n        },async()=>{\r\n           \r\n           await this.getDataPatient()\r\n        })\r\n    }\r\n\r\n    handleBtnConfirm=(item)=>{    \r\n        \r\n        let data={\r\n            doctorId:item.doctorId,\r\n            patientId:item.patientId,\r\n            email:item.patientData.email,\r\n            timeType:item.timeType,\r\n            patientData:item.patientData.firstName\r\n        }\r\n        this.setState({\r\n            isOpenRemedyModal:true,\r\n            dataModal:data\r\n        })\r\n    }\r\n\r\n    closeRemedyModal=()=>{\r\n        this.setState({\r\n            isOpenRemedyModal:false,\r\n            dataModal:{}\r\n        })\r\n    }\r\n\r\n    sendRemedy=async(dataChild)=>{\r\n        let dataModal= this.state.dataModal\r\n        console.log(\"datachild\", dataChild);\r\n        this.setState({\r\n            isLoading:true\r\n        })\r\n        let res=await postSendRemedy({\r\n            email:dataChild.email,\r\n            imgBase64:dataChild.imgBase64,\r\n            doctorId:dataModal.doctorId,\r\n            patientId:dataModal.patientId,\r\n            timeType: dataModal.timeType,\r\n            language:this.props.language,\r\n            patientData:dataModal.patientData\r\n        })\r\n        if(res && res.errCode===0){\r\n            toast.success(\"Send Remedy success!\")\r\n            this.props.DeleteUserS3(dataChild.email.patientId)\r\n            this.setState({\r\n                isLoading:false\r\n            })\r\n            this.closeRemedyModal()\r\n            await this.getDataPatient()\r\n        }else{\r\n            toast.error(\"Send Remedy error!\")\r\n            this.setState({\r\n                isLoading:false\r\n            })\r\n            console.log(\"Send Remedy error!\", res);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        \r\n        let dataPatient= this.state.dataPatient\r\n        let isOpenRemedyModal= this.state.isOpenRemedyModal\r\n        let dataModal= this.state.dataModal\r\n\r\n        let language= this.props.language\r\n\r\n       \r\n        return (\r\n            <>\r\n           <div className='manage-patient-container'>\r\n                <div className='m-p-title title'>\r\n                    <FormattedMessage id=\"doctor.manage-patient\"/>\r\n                </div>\r\n                <div className='manage-patient-body row'>\r\n                    <div className='col-4 form-group'>\r\n                        <label> <FormattedMessage id=\"doctor.choose-date\"/></label>\r\n                        <DatePicker\r\n                                onChange={this.handleOnChangeDatePicker}\r\n                                className=\"form-control\"\r\n                                value={this.state.currentDate}\r\n                            />\r\n                    </div>\r\n                    <div className='col-12 table-manage-patient' >\r\n                    <table className='table-manage-patient'>\r\n                        <tbody>\r\n                        <tr>\r\n                            <th>STT</th>\r\n                            <th> <FormattedMessage id=\"doctor.time\"/></th>\r\n                            <th> <FormattedMessage id=\"doctor.name\"/></th>\r\n                            <th> <FormattedMessage id=\"doctor.address\"/></th>\r\n                            <th> <FormattedMessage id=\"doctor.gender\"/></th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                        {dataPatient && dataPatient.length > 0 ?\r\n                            dataPatient.map((item,index)=>{\r\n                                let time= language=== languages.VI ? item.timeTypeDataPatient.valueVi : item.timeTypeDataPatient.valueEn\r\n                                let gender= language=== languages.VI ? item.patientData.genderData.valueVi : item.patientData.genderData.valueEn\r\n                                return(\r\n                                    <tr key={index}>\r\n                                        <td>{index+1}</td>\r\n                                        <td>{time}</td>\r\n                                        <td>{item.patientData.firstName}</td>\r\n                                        <td>{item.patientData.address}</td>\r\n                                        <td>{gender}</td>\r\n                                        <td>\r\n                                            <button \r\n                                                className='mp-btn-confirm'\r\n                                                onClick={()=>this.handleBtnConfirm(item)}\r\n                                            >\r\n                                                 <FormattedMessage id=\"doctor.confirm\"/>\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                            :\r\n                            <tr>\r\n                                <td colSpan=\"6\"><FormattedMessage id=\"doctor.no-data\"/></td>\r\n                            </tr>\r\n                        }\r\n                        \r\n                         \r\n                         </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n           </div>\r\n           \r\n           <RemedyModal\r\n                isOpenModal={isOpenRemedyModal}\r\n                dataModal={dataModal}\r\n                closeRemedyModal={this.closeRemedyModal}\r\n                sendRemedy={this.sendRemedy}\r\n            />\r\n            <FadeLoader\r\n                color={this.state.color}\r\n                loading={this.state.isLoading}\r\n                size={150}\r\n                aria-label=\"Loading Spinner\"\r\n                data-testid=\"loader\"\r\n                className='loading-siner'\r\n            />\r\n           </>\r\n        );\r\n    }\r\n    }\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language:state.app.language,\r\n        user: state.user.userInfo\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        DeleteUserS3: (id)=> dispatch(actions.DeleteUserStart(id))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagePatient);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from 'react-router-dom'; \r\nimport Header from '../containers/Header/Header';\r\nimport ManageSchedule from '../containers/System/Doctor/ManageSchedule';\r\nimport ManagePatient from '../containers/System/Doctor/ManagePatient';\r\nclass Doctor extends Component {\r\n    render() {\r\n         \r\n        const { isLoggedIn } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n            {this.props.isLoggedIn && <Header />} \r\n            <div className=\"Doctor-container\">\r\n                <div className=\"Doctor-list\">\r\n                    <Switch>\r\n                        <Route path=\"/doctor/manage-schedule\" component={ManageSchedule} />\r\n                        <Route path=\"/doctor/manage-patient\" component={ManagePatient} />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        DoctorMenuPath: state.app.DoctorMenuPath,\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Doctor);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { postVerifyBookAppoinment } from '../../services/userService';\r\nimport HomeHeader from '../HomePage/HomeHeader';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport './VerifyEmail.scss'\r\n\r\n\r\nclass VerifyEmail extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            stateVerify:false,\r\n            errCode:0\r\n        }\r\n    }\r\n    capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n   \r\n    async componentDidMount(){\r\n        if(this.props.location && this.props.location.search){\r\n            let urlParams = new URLSearchParams(this.props.location.search);\r\n            let token = urlParams.get('token');\r\n            let doctorId = urlParams.get('doctorId');\r\n            console.log(\"token:\",token, doctorId);\r\n\r\n            let res= await postVerifyBookAppoinment({\r\n                token:token,\r\n                doctorId:doctorId\r\n            })\r\n            if(res && res.errCode===0){\r\n                this.setState({\r\n                    stateVerify:true,\r\n                    errCode:res.errCode\r\n                })\r\n            }else{\r\n                this.setState({\r\n                    stateVerify:true,\r\n                    errCode:res && res.errCode ? res.errCode : -1\r\n                })\r\n            }\r\n        }\r\n        \r\n        if(this.props.match && this.props.match.params && this.props.match.params.id){\r\n\r\n\r\n        }\r\n       \r\n\r\n    }\r\n\r\n    async componentDidUpdate(prevProps,prevState,snapshot){\r\n        if(this.props.language !== prevProps.language){\r\n\r\n         \r\n        }\r\n    }\r\n\r\n    \r\n\r\n\r\n    render() {\r\n        let stateVerify= this.state.stateVerify\r\n        let errCode= this.state.errCode\r\n        return (\r\n            <>\r\n                <HomeHeader/>\r\n                <div className='verify-email-container'>\r\n                {stateVerify === false ?\r\n                    <div>\r\n                        Loading data....\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        {\r\n                            +errCode === 0 ?\r\n                            <div className='info-booking-v'><FormattedMessage id=\"patient.booking-modal.confirm-email\"/></div>\r\n                            :\r\n                            <div className='info-booking-x'><FormattedMessage id=\"patient.booking-modal.confirm-email-x\"/></div>\r\n                        }\r\n                    </div>\r\n                                \r\n                }\r\n                </div>\r\n            </>\r\n          \r\n        );\r\n    }\r\n    }\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language:state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VerifyEmail);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './DetailSpecialty.scss';\r\nimport HomeHeader from '../../HomePage/HomeHeader';\r\nimport DoctorSchedule from '../Doctor/DoctorSchedule';\r\nimport DoctorExtraInfor from '../Doctor/DoctorExtraInfor';\r\nimport ProfileDoctor from '../Doctor/ProfileDoctor';\r\nimport { getDetailSpecialtyById , getAllCodeService} from '../../../services/userService';\r\nimport _ from 'lodash';\r\nimport { languages } from '../../../utils';\r\n\r\nclass DetailSpecialty extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            arrdoctorId:[],\r\n            dataDetailSpecialty:{},\r\n            listProvince:[]\r\n        }   \r\n    }\r\n    \r\n   \r\n    async componentDidMount(){\r\n       if(this.props.match && this.props.match.params && this.props.match.params.id){\r\n        let id= this.props.match.params.id\r\n\r\n        let res= await getDetailSpecialtyById({\r\n            id:id,\r\n            location:'ALL'\r\n        })\r\n        let resProvince= await getAllCodeService(\"PROVINCE\")\r\n      \r\n        if(res && res.errCode===0 && resProvince && resProvince.errCode===0){\r\n            let data= res.data\r\n            let arrdoctorId=[]\r\n            if(data && !_.isEmpty(res.data)){\r\n                let arr=data.doctorSpecialty\r\n                if(arr && arr.length>0){\r\n                    arr.map(item=>{\r\n                        arrdoctorId.push(item.doctorId)\r\n                    })\r\n                }\r\n            }\r\n\r\n            let dataProvince= resProvince.data\r\n           \r\n            if(dataProvince && dataProvince.length>0){\r\n                dataProvince.unshift({\r\n                    createAt:null,\r\n                    keyMap:\"ALL\",\r\n                    type:'PROVINCE',\r\n                    valueEn:'ALL',\r\n                    valueVi:'Toàn quốc'\r\n                })\r\n            }\r\n\r\n            this.setState({\r\n                dataDetailSpecialty:res.data,\r\n                arrdoctorId:arrdoctorId,\r\n                listProvince:dataProvince ? dataProvince :[]\r\n            })\r\n        }\r\n       }\r\n       \r\n\r\n    }\r\n\r\n\r\n    async componentDidUpdate(prevProps,prevState,snapshot){\r\n        if(this.props.language !== prevProps.language){\r\n            \r\n        }\r\n       \r\n    }\r\n\r\n    handleOnChangeSelect=async(event)=>{\r\n        console.log(\"check onchange\", event.target.value);\r\n        if(this.props.match && this.props.match.params && this.props.match.params.id){\r\n            let id= this.props.match.params.id\r\n            let location=event.target.value\r\n\r\n\r\n            let res= await getDetailSpecialtyById({\r\n                id:id,\r\n                location:location\r\n            })\r\n        \r\n          \r\n            if(res && res.errCode===0 ){\r\n                let data= res.data\r\n                let arrdoctorId=[]\r\n                if(data && !_.isEmpty(res.data)){\r\n                    let arr=data.doctorSpecialty\r\n                    if(arr && arr.length>0){\r\n                        arr.map(item=>{\r\n                            arrdoctorId.push(item.doctorId)\r\n                        })\r\n                    }\r\n                }\r\n\r\n    \r\n                this.setState({\r\n                    dataDetailSpecialty:res.data,\r\n                    arrdoctorId:arrdoctorId,\r\n                })\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(\"check res\", this.state);\r\n        let {arrdoctorId,dataDetailSpecialty,listProvince}=this.state\r\n        let language=this.props.language\r\n        return (\r\n            <div className='detail-specialty-container'>\r\n                <HomeHeader/>\r\n                <div className='description-specialty'>\r\n                    <div className='description-sp-content'>\r\n                    {dataDetailSpecialty && !_.isEmpty(dataDetailSpecialty)\r\n                        &&\r\n                \r\n                        <div dangerouslySetInnerHTML={{__html: dataDetailSpecialty.descriptionHTML}}>\r\n                            \r\n                        </div>\r\n                    }\r\n                    </div>\r\n                </div>\r\n                <div className='search-sp-doctor'>\r\n                    <select onChange={(event)=> this.handleOnChangeSelect(event)}>\r\n                        {listProvince && listProvince.length>0 &&\r\n                        listProvince.map((item,index)=>{\r\n                            return(\r\n                                <option key={index} value={item.keyMap}>\r\n                                    {language===languages.VI ? item.valueVi : item.valueEn}\r\n                                </option>\r\n                            )\r\n                        })\r\n\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                {arrdoctorId && arrdoctorId.length>0 &&\r\n                    arrdoctorId.map((item,index)=>{\r\n                        return(\r\n                            <div className='each-dcotor' key={index}>\r\n                                <div className='dt-content-left'>\r\n                                    <div className='profile-doctor'>\r\n                                        <ProfileDoctor\r\n                                        doctorId={item}\r\n                                        isShowDescriptionDoctor={true}\r\n                                        isShowLinhDetail={true}\r\n                                        isShowPrice={false}\r\n                                        // dataTime={}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <div className='dt-content-right'>\r\n                                    <div className='doctor-schedule'>\r\n                                    <DoctorSchedule\r\n                                    doctorIdFromParent={item}\r\n                                    />\r\n                                    </div>\r\n                                    <div className='doctor-extra-info'>\r\n                                    <DoctorExtraInfor\r\n                                    doctorIdFromParent={item}\r\n                                    /> \r\n                                    </div>\r\n                                         \r\n                                </div> \r\n                            </div>   \r\n                        )\r\n                    })\r\n                }\r\n                \r\n                </div>\r\n            </div>\r\n          \r\n        );\r\n    }\r\n    }\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language:state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailSpecialty);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './DetailClinic.scss';\r\nimport HomeHeader from '../../HomePage/HomeHeader';\r\nimport DoctorSchedule from '../Doctor/DoctorSchedule';\r\nimport DoctorExtraInfor from '../Doctor/DoctorExtraInfor';\r\nimport ProfileDoctor from '../Doctor/ProfileDoctor';\r\nimport { getDetailClinicById,getAllCodeService } from '../../../services/userService';\r\nimport _ from 'lodash';\r\nimport { languages } from '../../../utils';\r\n\r\n\r\nclass DetailClinic extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            arrdoctorId:[],\r\n            dataDetailClinic:{},\r\n           \r\n        }   \r\n    }\r\n    \r\n   \r\n    async componentDidMount(){\r\n       if(this.props.match && this.props.match.params && this.props.match.params.id){\r\n        let id= this.props.match.params.id\r\n\r\n        let res= await getDetailClinicById({\r\n            id:id,\r\n            \r\n        })\r\n       \r\n        if(res && res.errCode===0){\r\n            let data= res.data\r\n            let arrdoctorId=[]\r\n            if(data && !_.isEmpty(res.data)){\r\n                let arr=data.doctorClinic\r\n                if(arr && arr.length>0){\r\n                    arr.map(item=>{\r\n                        arrdoctorId.push(item.doctorId)\r\n                    })\r\n                }\r\n            }\r\n\r\n           \r\n            this.setState({\r\n                dataDetailClinic:res.data,\r\n                arrdoctorId:arrdoctorId,\r\n               \r\n            })\r\n        }\r\n       }\r\n       \r\n\r\n    }\r\n\r\n\r\n    async componentDidUpdate(prevProps,prevState,snapshot){\r\n        if(this.props.language !== prevProps.language){\r\n\r\n         \r\n        }\r\n    }\r\n\r\n   \r\n\r\n\r\n    render() {\r\n        console.log(\"check res\", this.state);\r\n        let {arrdoctorId,dataDetailClinic}=this.state\r\n        let language=this.props.language\r\n        return (\r\n            <div className='detail-clinic-container'>\r\n                <HomeHeader/>\r\n                <div className='description-clinic'>\r\n                    <div className='description-sp-content'>\r\n                    {dataDetailClinic && !_.isEmpty(dataDetailClinic)\r\n                        &&\r\n                        \r\n                        <>\r\n                            <div className='description-ln-title'>{dataDetailClinic.name}</div>\r\n                            <div dangerouslySetInnerHTML={{__html: dataDetailClinic.descriptionHTML}}>\r\n                            \r\n                            </div>\r\n                        </>\r\n                    }\r\n                    </div>\r\n                </div>\r\n                \r\n                <div>\r\n                {arrdoctorId && arrdoctorId.length>0 &&\r\n                    arrdoctorId.map((item,index)=>{\r\n                        return(\r\n                            <div className='each-dcotor' key={index}>\r\n                                <div className='dt-content-left'>\r\n                                    <div className='profile-doctor'>\r\n                                        <ProfileDoctor\r\n                                        doctorId={item}\r\n                                        isShowDescriptionDoctor={true}\r\n                                        isShowLinhDetail={true}\r\n                                        isShowPrice={false}\r\n                                        // dataTime={}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <div className='dt-content-right'>\r\n                                    <div className='doctor-schedule'>\r\n                                    <DoctorSchedule\r\n                                    doctorIdFromParent={item}\r\n                                    />\r\n                                    </div>\r\n                                    <div className='doctor-extra-info'>\r\n                                    <DoctorExtraInfor\r\n                                    doctorIdFromParent={item}\r\n                                    /> \r\n                                    </div>\r\n                                         \r\n                                </div> \r\n                            </div>   \r\n                        )\r\n                    })\r\n                }\r\n                \r\n                </div>\r\n            </div>\r\n          \r\n        );\r\n    }\r\n    }\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language:state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailClinic);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nclass Chat extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n          \r\n        }\r\n    }\r\n     \r\n    componentDidMount(){\r\n       \r\n    //     (function(d, m){\r\n    //         var kommunicateSettings = \r\n    //             {\"appId\":\"176c00d7a6b445c39cd3431038001c897\",\"popupWidget\":true,\"automaticChatOpenOnNavigation\":true};\r\n    //         var s = document.createElement(\"script\"); s.type = \"text/javascript\"; s.async = true;\r\n    //         s.src = \"https://widget.kommunicate.io/v2/kommunicate.app\";\r\n    //         var h = document.getElementsByTagName(\"head\")[0]; h.appendChild(s);\r\n    //         window.kommunicate = m; m._globals = kommunicateSettings;\r\n    //     })(document, window.kommunicate || {});\r\n    // /* NOTE : Use web server to view HTML files as real-time update will not work if you directly open the HTML file in the browser. */\r\n    \r\n  \r\n   \r\n    (function(d, m){\r\n        var kommunicateSettings = \r\n            {\"appId\":\"d2311defe4cde74adff468ea416ae88\",\"popupWidget\":true,\"automaticChatOpenOnNavigation\":true};\r\n        var s = document.createElement(\"script\"); s.type = \"text/javascript\"; s.async = true;\r\n        s.src = \"https://widget.kommunicate.io/v2/kommunicate.app\";\r\n        var h = document.getElementsByTagName(\"head\")[0]; h.appendChild(s);\r\n        window.kommunicate = m; m._globals = kommunicateSettings;\r\n    })(document, window.kommunicate || {});\r\n/* NOTE : Use web server to view HTML files as real-time update will not work if you directly open the HTML file in the browser. */\r\n\r\n}\r\n\r\n    async componentDidUpdate(prevProps,prevState,snapshot){\r\n        if(this.props.language !== prevProps.language){\r\n\r\n         \r\n        }\r\n    }\r\n\r\n    \r\n\r\n\r\n    render() {\r\n        return (\r\n            \r\n           <div></div>\r\n        );\r\n    }\r\n    }\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language:state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ConnectedRouter as Router } from 'connected-react-router';\r\nimport { history } from '../redux'\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\n\r\nimport { userIsAuthenticated, userIsNotAuthenticated } from '../hoc/authentication';\r\n\r\nimport { path } from '../utils'\r\n\r\nimport Home from '../routes/Home';\r\nimport Login from './Auth/Login';\r\nimport System from '../routes/System';\r\n\r\nimport { CustomToastCloseButton } from '../components/CustomToast';\r\nimport HomePage from \"./HomePage/homePage.js\"\r\n\r\nimport CustomScrollbars from '../components/CustomScrollbars';\r\nimport DetailDoctor from './Patient/Doctor/DetailDoctor';\r\nimport Doctor from '../routes/Doctor';\r\nimport VerifyEmail from './Patient/VerifyEmail';\r\nimport DetailSpecialty from './Patient/Specialty/DetailSpecialty';\r\nimport DetailClinic from './Patient/Clinic/DetailClinic';\r\nimport Chat from './Patient/SocailPlugin/Chat';\r\n\r\n\r\n\r\nclass App extends Component {\r\n    \r\n\r\n    handlePersistorState = () => {\r\n        const { persistor } = this.props;\r\n        let { bootstrapped } = persistor.getState();\r\n        if (bootstrapped) {\r\n            if (this.props.onBeforeLift) {\r\n                Promise.resolve(this.props.onBeforeLift())\r\n                    .then(() => this.setState({ bootstrapped: true }))\r\n                    .catch(() => this.setState({ bootstrapped: true }));\r\n            } else {\r\n                this.setState({ bootstrapped: true });\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.handlePersistorState();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Router history={history}>\r\n                    <div className=\"main-container\">\r\n                    \r\n                        <div className=\"content-container\">\r\n                        <CustomScrollbars style={{height:\"100vh\" , width:\"100%\"}}>\r\n                            <Switch>\r\n                                <Route path={path.HOME} exact component={(Home)} />\r\n                                <Route path={path.LOGIN} component={userIsNotAuthenticated(Login)} />\r\n                                <Route path={path.SYSTEM} component={userIsAuthenticated(System)} />\r\n                                <Route path={'/doctor/'} component={userIsAuthenticated(Doctor)} />\r\n                                <Route path={path.HOMEPAGE} component={HomePage} />\r\n                                <Route path={path.DETAIL_DOCTOR} component={DetailDoctor}/> \r\n                                <Route path={path.DETAIL_SPECIALTY} component={DetailSpecialty}/> \r\n                                <Route path={path.DETAIL_CLINIC} component={DetailClinic}/> \r\n                                <Route path={path.VERIFY_EMAIL_BOOKING} component={VerifyEmail}/> \r\n                            </Switch>\r\n                        </CustomScrollbars>    \r\n                        </div>\r\n\r\n                        {/* <ToastContainer\r\n                            className=\"toast-container\" toastClassName=\"toast-item\" bodyClassName=\"toast-item-body\"\r\n                            autoClose={false} hideProgressBar={true} pauseOnHover={false}\r\n                            pauseOnFocusLoss={true} closeOnClick={false} draggable={false}\r\n                            closeButton={<CustomToastCloseButton />}\r\n                        /> */}\r\n                        <ToastContainer\r\n                            position=\"top-right\"\r\n                            autoClose={5000}\r\n                            hideProgressBar={false}\r\n                            newestOnTop={false}\r\n                            closeOnClick\r\n                            rtl={false}\r\n                            pauseOnFocusLoss\r\n                            draggable\r\n                            pauseOnHover\r\n                            theme=\"light\"\r\n                        />\r\n                            {/* Same as */}\r\n                        <ToastContainer />\r\n                        \r\n                    </div>\r\n                   \r\n                </Router>\r\n                <Chat/>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        started: state.app.started,\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { IntlProvider } from \"react-intl\";\r\n\r\nimport '@formatjs/intl-pluralrules/polyfill';\r\nimport '@formatjs/intl-pluralrules/locale-data/en';\r\nimport '@formatjs/intl-pluralrules/locale-data/vi';\r\n\r\nimport '@formatjs/intl-relativetimeformat/polyfill';\r\nimport '@formatjs/intl-relativetimeformat/locale-data/en';\r\nimport '@formatjs/intl-relativetimeformat/locale-data/vi';\r\n\r\nimport { LanguageUtils } from '../utils'\r\n\r\nconst messages = LanguageUtils.getFlattenedMessages();\r\n\r\nclass IntlProviderWrapper extends Component {\r\n\r\n    render() {\r\n        const { children, language } = this.props;\r\n        return (\r\n            <IntlProvider\r\n                locale={language}\r\n                messages={messages[language]}\r\n                defaultLocale=\"vi\">\r\n                {children}\r\n            </IntlProvider>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(IntlProviderWrapper);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './styles/styles.scss';\r\n\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport IntlProviderWrapper from \"./hoc/IntlProviderWrapper\";\r\n\r\n\r\nimport { Provider } from 'react-redux';\r\nimport reduxStore, { persistor } from './redux';\r\n\r\nconst renderApp = () => {\r\n    ReactDOM.render(\r\n        <Provider store={reduxStore}>\r\n            <IntlProviderWrapper>\r\n                <App persistor={persistor}/>\r\n            </IntlProviderWrapper>\r\n        </Provider>,\r\n        document.getElementById('root')\r\n    );\r\n};\r\n\r\nrenderApp();\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import actionTypes from './actionTypes';\r\n\r\nexport const appStartUpComplete = () => ({\r\n    type: actionTypes.APP_START_UP_COMPLETE\r\n});\r\n\r\nexport const setContentOfConfirmModal = (contentOfConfirmModal) => ({\r\n    type: actionTypes.SET_CONTENT_OF_CONFIRM_MODAL,\r\n    contentOfConfirmModal: contentOfConfirmModal\r\n});\r\n\r\nexport const changelanguageApp=(languageInput)=>({\r\n    type: actionTypes.CHANGE_LANGUAGE,\r\n    language:languageInput\r\n})","import React, { Component, Fragment } from 'react';\r\nimport { FormattedMessage, FormattedTime } from 'react-intl';\r\n\r\nimport CustomScrollBar from '../components/CustomScrollbars';\r\n\r\nimport './CustomToast.scss';\r\n\r\nclass CustomToast extends Component {\r\n\r\n    render() {\r\n        const { titleId, message, messageId, time } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <div className=\"custom-toast\">\r\n                    <div className=\"toast-title\">\r\n                        {time && (\r\n                            <span className=\"date\">\r\n                                <FormattedTime hour='numeric' minute='numeric' second='numeric' hour12={true} value={time} />\r\n                            </span>\r\n                        )}\r\n                        <i className=\"fa fa-fw fa-exclamation-triangle\" />\r\n                        <FormattedMessage id={titleId} />\r\n                    </div>\r\n                    {\r\n                        (message && typeof message === 'object') ?\r\n                            <CustomScrollBar autoHeight={true} autoHeightMin={50} autoHeightMax={100}>\r\n                                {\r\n                                    message.map((msg, index) => {\r\n                                        return (\r\n                                            <Fragment key={index}>\r\n                                                <div className=\"toast-content\">{msg}</div>\r\n                                            </Fragment>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </CustomScrollBar> :\r\n                            <div className=\"toast-content\">\r\n                                {message ? message : (messageId ? (<FormattedMessage id={messageId} />) : null)}\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport class CustomToastCloseButton extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <button type=\"button\" className=\"toast-close\" onClick={this.props.closeToast}>\r\n                <i className=\"fa fa-fw fa-times-circle\" />\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomToast;","import React, { Component } from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport './CustomScrollbars.scss';\r\n\r\nclass CustomScrollbars extends Component {\r\n\r\n    ref = React.createRef();\r\n\r\n    getScrollLeft =()=>{\r\n        const scrollbars = this.ref.current;\r\n        return scrollbars.getScrollLeft();\r\n    }\r\n    getScrollTop =()=>{\r\n        const scrollbars = this.ref.current;\r\n        return scrollbars.getScrollTop();\r\n    }\r\n\r\n    scrollToBottom = () => {\r\n        if (!this.ref || !this.ref.current) {\r\n            return;\r\n        }\r\n        const scrollbars = this.ref.current;\r\n        const targetScrollTop = scrollbars.getScrollHeight();\r\n        this.scrollTo(targetScrollTop);\r\n    };\r\n\r\n    scrollTo = (targetTop) => {\r\n        const { quickScroll } = this.props;\r\n        if (!this.ref || !this.ref.current) {\r\n            return;\r\n        }\r\n        const scrollbars = this.ref.current;\r\n        const originalTop = scrollbars.getScrollTop();\r\n        let iteration = 0;\r\n\r\n        const scroll = () => {\r\n            iteration++;\r\n            if (iteration > 30) {\r\n                return;\r\n            }\r\n            scrollbars.scrollTop(originalTop + (targetTop - originalTop) / 30 * iteration);\r\n\r\n            if (quickScroll && quickScroll === true) {\r\n                scroll();\r\n            } else {\r\n                setTimeout(() => {\r\n                    scroll();\r\n                }, 20);\r\n            }\r\n        };\r\n\r\n        scroll();\r\n    };\r\n\r\n    renderTrackHorizontal = (props) => {\r\n        return (\r\n            <div {...props} className=\"track-horizontal\" />\r\n        );\r\n    };\r\n\r\n    renderTrackVertical = (props) => {\r\n        return (\r\n            <div {...props} className=\"track-vertical\" />\r\n        );\r\n    };\r\n\r\n    renderThumbHorizontal = (props) => {\r\n        return (\r\n            <div {...props} className=\"thumb-horizontal\" />\r\n        );\r\n    };\r\n\r\n    renderThumbVertical = (props) => {\r\n        return (\r\n            <div {...props} className=\"thumb-vertical\" />\r\n        );\r\n    };\r\n\r\n    renderNone = (props) => {\r\n        return (\r\n            <div />\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { className, disableVerticalScroll, disableHorizontalScroll, children,...otherProps } = this.props;\r\n        return (\r\n            <Scrollbars\r\n                ref={this.ref}\r\n                autoHide={true}\r\n                autoHideTimeout={200}\r\n                hideTracksWhenNotNeeded={true}\r\n                className={className ? className + ' custom-scrollbar' : 'custom-scrollbar'}\r\n                {...otherProps}\r\n                renderTrackHorizontal={disableHorizontalScroll ? this.renderNone : this.renderTrackHorizontal}\r\n                renderTrackVertical={disableVerticalScroll ? this.renderNone : this.renderTrackVertical}\r\n                renderThumbHorizontal={disableHorizontalScroll ? this.renderNone : this.renderThumbHorizontal}\r\n                renderThumbVertical={disableVerticalScroll ? this.renderNone : this.renderThumbVertical}\r\n            >\r\n                {children}\r\n            </Scrollbars>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomScrollbars;","export const path = {\r\n    HOME: '/',\r\n    HOMEPAGE:\"/home\",\r\n    LOGIN: '/login',\r\n    LOG_OUT: '/logout',\r\n    SYSTEM: '/system',\r\n    DETAIL_DOCTOR:'/detail-doctor/:id',\r\n    DETAIL_SPECIALTY:'/detail-specialty/:id',\r\n    DETAIL_CLINIC:'/detail-clinic/:id',\r\n\r\n    VERIFY_EMAIL_BOOKING:'/verify-booking/',\r\n\r\n};\r\n\r\nexport const languages = {\r\n    VI: 'vi',\r\n    EN: 'en'\r\n};\r\n \r\nexport const CRUD_ACTIONS = {\r\n    CREATE: \"CREATE\",\r\n    EDIT: \"EDIT\",\r\n    DELETE: \"DELETE\",\r\n    READ:\"READ\"\r\n};\r\n\r\nexport const dateFormat = {\r\n    SEND_TO_SERVER: 'DD/MM/YYYY'\r\n};\r\n\r\nexport const YesNoObj = {\r\n    YES: 'Y',\r\n    NO: 'N'\r\n}\r\nexport const USER_ROLE={\r\n    ADMIN:'R1',\r\n    DOCTOR:'R2',\r\n    PATIENT:'R3'\r\n}","\r\n\r\nclass CommonUtils {\r\n    \r\n    static getBase64(file){\r\n        return new Promise((resolve, reject)=>{\r\n            const reader= new FileReader()\r\n            reader.readAsDataURL(file)\r\n            reader.onload= () => resolve(reader.result)\r\n            reader.onerror= error => reject(error)\r\n        })\r\n    }\r\n}\r\n\r\nexport default CommonUtils;","class KeyCodeUtils {\r\n\r\n    static UP = 38;\r\n\r\n    static DOWN = 40;\r\n\r\n    static TAB = 9;\r\n\r\n    static ENTER = 13;\r\n\r\n    static E = 69;\r\n\r\n    static ESCAPE = 27; \r\n\r\n    static isNavigation(e) {\r\n        return (e >= 33 && e <= 40) || e === 9 || e === 8 || e === 46 || e === 14 || e === 13;\r\n    }\r\n\r\n    static isNumeric(e) {\r\n        return (e >= 48 && e <= 57) || (e >= 96 && e <= 105);\r\n    }\r\n    static isAlphabetic(e) {\r\n        return (e >= 65 && e <= 90);\r\n    }\r\n    static isDecimal(e) {\r\n        return e === 190 || e === 188 || e === 108 || e === 110;\r\n    }\r\n\r\n    static isDash(e) {\r\n        return e === 109 || e === 189;\r\n    }\r\n}\r\n\r\nexport default KeyCodeUtils;","import messages_vi from '../translations/vi.json';\r\nimport messages_en from '../translations/en.json';\r\n\r\nconst flattenMessages = ((nestedMessages, prefix = '') => {\r\n    if (nestedMessages == null) {\r\n        return {}\r\n    }\r\n    return Object.keys(nestedMessages).reduce((messages, key) => {\r\n        const value = nestedMessages[key];\r\n        const prefixedKey = prefix ? `${prefix}.${key}` : key;\r\n\r\n        if (typeof value === 'string') {\r\n            Object.assign(messages, {[prefixedKey]: value})\r\n        } else {\r\n            Object.assign(messages, flattenMessages(value, prefixedKey))\r\n        }\r\n\r\n        return messages\r\n    }, {})\r\n});\r\n\r\nconst messages = {\r\n    'vi': flattenMessages(messages_vi),\r\n    'en': flattenMessages(messages_en),\r\n};\r\n\r\nexport default class LanguageUtils {\r\n    static getMessageByKey(key, lang) {\r\n        return messages[lang][key]\r\n    }\r\n\r\n    static getFlattenedMessages() {\r\n        return messages;\r\n    }\r\n}"],"sourceRoot":""}